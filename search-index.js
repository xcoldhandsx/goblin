var N=null,E="",T="t",U="u",searchIndex={};
var R=["Archive","Unknown","result","A custom Goblin error","goblin","strtab","usize","option","container","Little","e_machine","e_version","e_ehsize","e_phentsize","e_shentsize","e_shstrndx","header","goblin::elf::header","e_ident","Magic number and other info","Object file type","Architecture","Object file version","e_entry","Entry point virtual address","e_phoff","Program header table file offset","e_shoff","Section header table file offset","e_flags","Processor-specific flags","ELF header size in bytes","Program header table entry size","e_phnum","Program header table entry count","Section header table entry size","e_shnum","Section header table entry count","Section header string table index","SIZEOF_EHDR","ELFCLASS","from_bytes","Returns the corresponding ELF header from the given byte…","Load a header from a file. You must ensure the seek is at…","Parses an ELF header from the given bytes","goblin::elf","ProgramHeader","p_offset","p_filesz","programheader","from_fd","goblin::elf::program_header","Segment type","p_flags","Segment flags","Segment file offset","p_vaddr","Segment virtual address","p_paddr","Segment physical address","Segment size in file","p_memsz","Segment size in memory","p_align","Segment alignment","SIZEOF_PHDR","endian","from_raw_parts","Sun Specific segment","End of OS-specific","Return the size of the underlying program header, given a…","SectionHeader","Section name (string tbl index)","Section type","sh_flags","Section flags","Section virtual addr at execution","sh_offset","Section file offset","Section size in bytes","Link to another section","Additional section information","sh_addralign","Section alignment","sh_entsize","Entry size if section holds table","sectionheader","goblin::elf::section_header","Section Headers are typically used by humans and static…","sh_name","sh_type","sh_addr","sh_size","sh_link","sh_info","SIZEOF_SHDR","Number of defined types.","Start of processor-specific.","End of processor-specific.","file_range","is_executable","CompressionHeader","Compression format","Uncompressed data size","ch_addralign","Uncompressed data alignment","compressionheader","goblin::elf::compression_header","The compression header is used at the start of…","SIZEOF_CHDR","Start of OS-specific.","End of OS-specific.","is_import","goblin::elf::sym","Symbol name (string tbl index)","Symbol type and binding","st_other","Symbol visibility","st_shndx","Section index","st_value","Symbol value","Symbol size","from_raw","SIZEOF_SYM","Checks whether this `Sym` has `STB_GLOBAL`/`STB_WEAK` bind…","is_function","Checks whether this `Sym` has type `STT_FUNC`","Get the ST bind.","Get the ST type.","st_visibility","Get the ST visibility.","DynamicInfo","Important dynamic linking info generated via a single pass…","relacount","verneednum","init_array","init_arraysz","fini_array","fini_arraysz","needed_count","goblin::elf::dynamic","An entry in the dynamic array","Dynamic entry type","Integer value","relcount","gnu_hash","pltrelsz","Returns a vector of dynamic entries from the given fd and…","Given a bias and a memory address (typically for a…","from_phdrs","Maybe gets and returns the dynamic array with the same…","get_needed","Gets the needed libraries from the `_DYNAMIC` array, with…","SIZEOF_DYN","dynamicinfo","Start of OS-specific","Start of processor-specific","End of processor-specific","r_offset","goblin::elf::reloc","Relocation with an explicit addend","Relocation type and symbol index","r_addend","Relocation without an addend","relocation type and symbol address","from_raw_rela","Gets the rela entries given a rela pointer and the size of…","from_raw_rel","Gets the rel entries given a rel pointer and the size of…","SIZEOF_RELA","SIZEOF_REL","Offset in initial TLS block.","Load from 32 bit signed pc relative offset to GOT entry…","Direct 32 bit","Copy symbol at runtime","Create GOT entry","Create PLT entry","Adjust by program base","Likewise for MOVK; no check","Likewise; MOVK; no check","Likewise; no check","GOT-rel. MOV{N,Z} 31:16","Likewise; no ovfl. check","TLS Descriptor","STT_GNU_IFUNC relocation","PC relative 32 bit","Reserved","ID of module containing symbol","Offset in TLS block","Offset in static TLS block","32 bit offset to GOT","32 bit PC relative offset to GOT","32 bit GOT entry","Obsolete","Deprecated, prog. base relative","PC relative (ADD, SUB)","PC relative (LDR,STR,LDRB,STRB)","PC relative (STR{D,H},LDR{D,SB,H,SH})","PC relative (LDC, STC)","Program base relative (ADD,SUB)","Program base relative (LDR, STR, LDRB, STRB)","Program base relative (LDC,STC)","Program base relative 16 bit (MOVW)","Program base relative 16 bit (Thumb32 MOVW)","Keep this the last entry","No reloc","Direct 16 bit","TP-relative offset, 64 bit","Local label subtraction","relocsection","Note section contents. Each entry in the note section…","Length of the note's name (includes the terminator)","type_to_str","RelocSection","noteiterator","GNU hash function: takes a string and returns the u32 hash…","Given a name, a hash of that name, a strtab to…","little_endian","mach magic number identifier","cpu specifier","cpusubtype","machine specifier","type of file","number of load commands","sizeofcmds","the size of all the load commands","filetype","When this bit is set, the binary declares it is safe for…","Transmutes the given byte array into the corresponding…","goblin::mach","cputype","An alias for u32","goblin::mach::constants","template of initial  values for TLVs","string table","fatheader","Returns the cpu type","Returns the cpu subtype with the capabilities removed","Returns the capabilities of the CPU","name of this section","segment this section goes in","memory address of this section","size in bytes of this section","file offset of this section","section alignment (power of 2)","file offset of relocation entries","number of relocation entries","reserved1","reserved (for offset or index)","reserved2","reserved (for count or sizeof)","reserved","includes pathname string","the library identification","cmdsize","library's path name","total size of this command","reserved3","init_address","address of initialization routine","init_module","index into the module table that the init routine is…","reserved4","reserved5","reserved6","iextdefsym","nextdefsym","number of externally defined symbols","ilocalsym","nlocalsym","number of local symbols","number of external relocation entries","module_name","the module name (index into string table)","index into externally defined symbols","index into reference symbol table","number of reference symbol table entries","index into symbols for local symbols","index into external relocation entries","iinit_iterm","low 16 bits are the index into the init section, high 16…","ninit_nterm","low 16 bits are the number of init section entries, high…","objc_module_info_size","the (__OBJC,__module_info) section","objc_module_info_addr","file offset of encrypted range","cryptsize","file size of encrypted range","which enryption system, 0 means not-encrypted yet","X.Y.Z is encoded in nibbles xxxx.yy.zz","file offset to lazy binding info","size of lazy binding infs","header_addr","LC_SYMSEG","LC_FVMFILE","LC_PREBOUND_DYLIB","LC_ROUTINES","LC_SUB_FRAMEWORK","LC_SUB_UMBRELLA","LC_SUB_CLIENT","LC_SUB_LIBRARY","LC_TWOLEVEL_HINTS","LC_PREBIND_CKSUM","LC_ROUTINES_64","LC_ENCRYPTION_INFO","LC_SOURCE_VERSION","LC_ENCRYPTION_INFO_64","index into the string table","type flag, see below","section number or NO_SECT","see <mach-o/stab.h>","value of this symbol (or stab offset)","This symbol is defined in another module in this file, is…","symbols","goblin::mach::exports","goblin::mach::exports::ExportInfo","exportinfo","dyldinfocommand","sectname","flags (section type and attributes","segname","filesize","initprot","is_object_file","symboliterator","sections","libraries","signature","symboltable","optional_header","goblin::pe","major_linker_version","minor_linker_version","size_of_code","size_of_initialized_data","size_of_uninitialized_data","address_of_entry_point","base_of_code","base_of_data","absent in 64-bit PE32+","image_base","section_alignment","file_alignment","major_operating_system_version","minor_operating_system_version","major_image_version","minor_image_version","major_subsystem_version","minor_subsystem_version","win32_version_value","size_of_image","size_of_headers","check_sum","subsystem","dll_characteristics","size_of_stack_reserve","size_of_stack_commit","size_of_heap_reserve","size_of_heap_commit","loader_flags","number_of_rva_and_sizes","characteristics","relocations","data_directories","virtual_address","time_date_stamp","minor_version","goblin::pe::export","goblin::pe::export::Reexport","exportdata","reexport","import_data","importlookuptable","syntheticimportdirectoryentry","datadirectory","importdata","major_version","pointer_to_raw_data","is_empty","runtimefunction","unwindinfo","Unused padding.","pointer_to_next_function","tag_index","number_of_relocations","SymbolIterator","The linker chooses an arbitrary section among the…","name_offset","set_name_offset","auxfunctiondefinition","auxbeginandendfunction","auxweakexternal","auxsectiondefinition","relocation","Not supported.","The relocation is ignored.","The 16-bit section index of the section that contains the…","The 32-bit offset of the target from the beginning of its…","timestamp","File offset from the start of the archive to where the…","borrow_mut","try_from","try_into","goblin::error","goblin::strtab","goblin::container","type_id","clone_into","to_owned","goblin::elf::header::header32","goblin::elf::header::header64","goblin::elf::program_header::program_header32","goblin::elf::program_header::program_header64","goblin::elf::section_header::section_header32","goblin::elf::section_header::section_header64","goblin::elf::compression_header::compression_header32","goblin::elf::compression_header::compression_header64","goblin::elf::sym::sym32","goblin::elf::sym::sym64","goblin::elf::dynamic::dyn32","goblin::elf::dynamic::dyn64","into_iter","goblin::elf::reloc::reloc32","goblin::elf::reloc::reloc64","goblin::elf::note","goblin::elf32::gnu_hash","goblin::elf64::gnu_hash","goblin::mach::header","goblin::mach::fat","goblin::mach::load_command","to_string","goblin::mach::symbols","goblin::mach::imports","goblin::mach::relocation","goblin::mach::segment","goblin::pe::header","goblin::pe::optional_header","goblin::pe::section_table","goblin::pe::data_directories","goblin::pe::import","goblin::pe::debug","goblin::pe::exception","goblin::pe::symbol","goblin::pe::relocation","goblin::archive","elfheader","elfprogramheader","elfsectionheader","elfcompressionheader","size_hint","header32","header64","section32","section64","segmentcommand32","segmentcommand64","symtabcommand","standardfields32","standardfields64","windowsfields32","sectiontable","imagedebugdirectory","unwindcodeiterator","default","symbolsctx","dosheader","coffheader","standardfields","windowsfields64","datadirectories","exportdirectorytable","debugdata","codeviewpdb70debuginfo","optionalheader","register","stackframeoffset","unwindoperation","unwindcode","unwindhandler","memberheader","ordering","formatter","from_ctx","try_from_ctx","into_ctx","try_into_ctx","a Pwrite impl for Header: note we use the endianness value…","Writes the relocation into `bytes`","size_with","Container","NoteDataIterator","NoteIterator","MultiArch","FatHeader","LoadCommandHeader","Section32","Section64","SegmentCommand32","SegmentCommand64","FvmlibCommand","DylibCommand","SubFrameworkCommand","SubClientCommand","SubUmbrellaCommand","SubLibraryCommand","PreboundDylibCommand","DylinkerCommand","ThreadCommand","RoutinesCommand32","RoutinesCommand64","SymtabCommand","DysymtabCommand","DylibTableOfContents","DylibModule","DylibModule64","DylibReference","TwolevelHintsCommand","TwolevelHint","PrebindCksumCommand","UuidCommand","RpathCommand","LinkeditDataCommand","EncryptionInfoCommand32","EncryptionInfoCommand64","VersionMinCommand","DyldInfoCommand","LinkerOptionCommand","SymsegCommand","IdentCommand","FvmfileCommand","EntryPointCommand","SourceVersionCommand","DataInCodeEntry","LoadCommand","CommandVariant","SymbolsCtx","SymbolKind","ExportInfo","ExportTrie","BindInterpreter","RelocationInfo","DosHeader","CoffHeader","StandardFields32","StandardFields64","StandardFields","WindowsFields32","WindowsFields64","OptionalHeader","SectionTable","DataDirectory","DataDirectories","ExportDirectoryTable","ExportData","ExportAddressTableEntry","Reexport","HintNameTableEntry","ImportDirectoryEntry","SyntheticImportDirectoryEntry","ImportData","SyntheticImportLookupTableEntry","DebugData","ImageDebugDirectory","CodeviewPDB70DebugInfo","RuntimeFunction","UnwindCode","UnwindInfo","StackFrameOffset","UnwindOperation","UnwindHandler","ExceptionData","AuxFunctionDefinition","AuxBeginAndEndFunction","AuxWeakExternal","AuxSectionDefinition","SymbolTable","Relocation","Relocations","MemberHeader","IndexType","SymIterator","RelocIterator","FatArchIterator","MachOIterator","RelocationIterator","SectionIterator","RuntimeFunctionIterator","UnwindCodeIterator","WindowsFields"];

searchIndex["goblin"]={"doc":"libgoblin","i":[[3,"HintData",R[4],"Information obtained from a peek `Hint`",N,N],[12,"is_lsb",E,E,0,N],[12,"is_64",E,E,0,N],[4,"Hint",E,"A hint at the underlying binary format for 16 bytes of…",N,N],[13,"Elf",E,E,1,N],[13,"Mach",E,E,1,N],[13,"MachFat",E,E,1,N],[13,"PE",E,E,1,N],[13,R[0],E,E,1,N],[13,R[1],E,E,1,N],[4,"Object",E,"A parseable object that goblin understands",N,N],[13,"Elf",E,"An ELF32/ELF64!",2,N],[13,"PE",E,"A PE32/PE32+!",2,N],[13,"Mach",E,"A 32/64-bit Mach-o binary OR it is a multi-architecture…",2,N],[13,R[0],E,"A Unix archive",2,N],[13,R[1],E,"None of the above, with the given magic value",2,N],[5,"peek_bytes",E,"Peeks at `bytes`, and returns a `Hint`",N,[[],[[R[2],["hint"]],["hint"]]]],[5,"peek",E,"Peeks at the underlying Read object. Requires the…",N,[[["r"]],[[R[2],["hint"]],["hint"]]]],[0,"error",E,R[3],N,N],[4,"Error",R[405],R[3],N,N],[13,"Malformed",E,"The binary is malformed somehow",3,N],[13,"BadMagic",E,"The binary's magic is unknown or bad",3,N],[13,"Scroll",E,"An error emanating from reading and interpreting bytes",3,N],[13,"IO",E,"An IO based error",3,N],[6,"Result",E,"An impish result",N,N],[0,R[5],R[4],"A byte-offset based string table. Commonly used in ELF…",N,N],[3,"Strtab",R[406],"A common string table format which is indexed by byte…",N,N],[11,"new",E,"Construct a new strtab with `bytes` as the backing string…",4,[[["u8"]],["self"]]],[11,R[123],E,"Construct a strtab from a `ptr`, and a `size`, using…",4,[[["u8"],[R[6]]],[R[5]]]],[11,"parse",E,"Parses a strtab from `bytes` at `offset` with `len` size…",4,[[["u8"],[R[6]]],[[R[2],[R[5]]],[R[5]]]]],[11,"to_vec",E,"Converts the string table to a vector, with the original…",4,[[["self"]],[[R[2],["vec"]],["vec",["str"]]]]],[11,"get",E,"Safely parses and gets a str reference from the backing…",4,[[["self"],[R[6]]],[[R[2],["str"]],[R[7],[R[2]]]]]],[11,"get_unsafe",E,"Gets a str reference from the backing bytes starting at…",4,[[["self"],[R[6]]],[[R[7],["str"]],["str"]]]],[0,R[8],R[4],"Binary container size information and byte-order context",N,N],[4,"Endian",R[407],"The endianness (byte order) of a stream of bytes",N,N],[13,R[9],E,E,5,N],[13,"Big",E,E,5,N],[3,"Ctx",E,"A binary parsing context, including the container size and…",N,N],[12,R[8],E,E,6,N],[12,"le",E,E,6,N],[4,R[491],E,"The size of a binary container",N,N],[13,R[9],E,E,7,N],[13,"Big",E,E,7,N],[17,"CONTAINER",E,"The default binary container size - either `Big` or…",N,N],[11,"is_big",E,"Is this a 64-bit container or not?",7,[[],["bool"]]],[11,"is_big",E,"Whether this binary container context is \"big\" or not",6,[[],["bool"]]],[11,"is_little_endian",E,"Whether this binary container context is little endian or…",6,[[],["bool"]]],[11,"new",E,"Create a new binary container context",6,[[[R[8]],[R[66]]],["self"]]],[11,"size",E,"Return a dubious pointer/address byte size for the container",6,[[],[R[6]]]],[0,"elf",R[4],"The generic ELF module, which gives access to ELF…",N,N],[3,"Elf",R[45],"An ELF binary. The underlying data structures are read…",N,N],[12,R[16],E,"The ELF header, which provides a rudimentary index into…",8,N],[12,"program_headers",E,"The program headers; they primarily tell the kernel and…",8,N],[12,"section_headers",E,"The sections headers. These are strippable, never count on…",8,N],[12,"shdr_strtab",E,"The section header string table",8,N],[12,"dynstrtab",E,"The string table for the dynamically accessible symbols",8,N],[12,"dynsyms",E,"The dynamically accessible symbols, i.e., exports,…",8,N],[12,"syms",E,"The debugging symbol table",8,N],[12,R[5],E,"The string table for the symbol table",8,N],[12,"dynamic",E,"Contains dynamic linking information, with the _DYNAMIC…",8,N],[12,"dynrelas",E,"The dynamic relocation entries (strings, copy-data, etc.)…",8,N],[12,"dynrels",E,"The dynamic relocation entries without an addend",8,N],[12,"pltrelocs",E,"The plt relocation entries (procedure linkage table). For…",8,N],[12,"shdr_relocs",E,"Section relocations by section index (only present if this…",8,N],[12,"soname",E,"The binary's soname, if it has one",8,N],[12,"interpreter",E,"The binary's program interpreter (e.g., dynamic linker),…",8,N],[12,R[328],E,"A list of this binary's dynamic libraries it uses, if…",8,N],[12,"is_64",E,E,8,N],[12,"is_lib",E,"Whether this is a shared object or not",8,N],[12,"entry",E,"The binaries entry point address, if it has one",8,N],[12,R[218],E,"Whether the binary is little endian or not",8,N],[0,R[16],E,E,N,N],[3,"Header",R[17],"An ELF header",N,N],[12,R[18],E,E,9,N],[12,"e_type",E,E,9,N],[12,R[10],E,E,9,N],[12,R[11],E,E,9,N],[12,R[23],E,E,9,N],[12,R[25],E,E,9,N],[12,R[27],E,E,9,N],[12,R[29],E,E,9,N],[12,R[12],E,E,9,N],[12,R[13],E,E,9,N],[12,R[33],E,E,9,N],[12,R[14],E,E,9,N],[12,R[36],E,E,9,N],[12,R[15],E,E,9,N],[5,"machine_to_str",E,"Convert machine to str representation",N,[[["u16"]],["str"]]],[5,"class_to_str",E,"Convert a ELF class byte to the associated string.",N,[[["u8"]],["str"]]],[5,"et_to_str",E,"Convert an ET value to their associated string.",N,[[["u16"]],["str"]]],[0,R[452],E,E,N,N],[3,"Header",R[411],E,N,N],[12,R[18],E,R[19],10,N],[12,"e_type",E,R[20],10,N],[12,R[10],E,R[21],10,N],[12,R[11],E,R[22],10,N],[12,R[23],E,R[24],10,N],[12,R[25],E,R[26],10,N],[12,R[27],E,R[28],10,N],[12,R[29],E,R[30],10,N],[12,R[12],E,R[31],10,N],[12,R[13],E,R[32],10,N],[12,R[33],E,R[34],10,N],[12,R[14],E,R[35],10,N],[12,R[36],E,R[37],10,N],[12,R[15],E,R[38],10,N],[17,R[39],E,E,N,N],[17,R[40],E,E,N,N],[11,R[41],E,R[42],10,[[],[R[16]]]],[11,R[50],E,R[43],10,[[["file"]],[[R[16]],[R[2],[R[16]]]]]],[11,"parse",E,R[44],10,[[],[[R[16]],[R[2],[R[16]]]]]],[0,R[453],R[17],E,N,N],[3,"Header",R[412],E,N,N],[12,R[18],E,R[19],11,N],[12,"e_type",E,R[20],11,N],[12,R[10],E,R[21],11,N],[12,R[11],E,R[22],11,N],[12,R[23],E,R[24],11,N],[12,R[25],E,R[26],11,N],[12,R[27],E,R[28],11,N],[12,R[29],E,R[30],11,N],[12,R[12],E,R[31],11,N],[12,R[13],E,R[32],11,N],[12,R[33],E,R[34],11,N],[12,R[14],E,R[35],11,N],[12,R[36],E,R[37],11,N],[12,R[15],E,R[38],11,N],[17,R[39],E,E,N,N],[17,R[40],E,E,N,N],[11,R[41],E,R[42],11,[[],[R[16]]]],[11,R[50],E,R[43],11,[[["file"]],[[R[2],[R[16]]],[R[16]]]]],[11,"parse",E,R[44],11,[[],[[R[2],[R[16]]],[R[16]]]]],[17,"EM_NONE",R[17],"TODO: use Enum with explicit discriminant and get debug…",N,N],[17,"EM_M32",E,"AT&T WE 32100",N,N],[17,"EM_SPARC",E,"SUN SPARC",N,N],[17,"EM_386",E,"Intel 80386",N,N],[17,"EM_68K",E,"Motorola m68k family",N,N],[17,"EM_88K",E,"Motorola m88k family",N,N],[17,"EM_IAMCU",E,"Intel MCU",N,N],[17,"EM_860",E,"Intel 80860",N,N],[17,"EM_MIPS",E,"MIPS R3000 big-endian",N,N],[17,"EM_S370",E,"IBM System/370",N,N],[17,"EM_MIPS_RS3_LE",E,"MIPS R3000 little-endian",N,N],[17,"EM_PARISC",E,"HPPA",N,N],[17,"EM_VPP500",E,"Fujitsu VPP500",N,N],[17,"EM_SPARC32PLUS",E,"Sun's \"v8plus\"",N,N],[17,"EM_960",E,"Intel 80960",N,N],[17,"EM_PPC",E,"PowerPC",N,N],[17,"EM_PPC64",E,"PowerPC 64-bit",N,N],[17,"EM_S390",E,"IBM S390",N,N],[17,"EM_SPU",E,"IBM SPU/SPC",N,N],[17,"EM_V800",E,"NEC V800 series",N,N],[17,"EM_FR20",E,"Fujitsu FR20",N,N],[17,"EM_RH32",E,"TRW RH-32",N,N],[17,"EM_RCE",E,"Motorola RCE",N,N],[17,"EM_ARM",E,"ARM",N,N],[17,"EM_FAKE_ALPHA",E,"Digital Alpha",N,N],[17,"EM_SH",E,"Hitachi SH",N,N],[17,"EM_SPARCV9",E,"SPARC v9 64-bit",N,N],[17,"EM_TRICORE",E,"Siemens Tricore",N,N],[17,"EM_ARC",E,"Argonaut RISC Core",N,N],[17,"EM_H8_300",E,"Hitachi H8/300",N,N],[17,"EM_H8_300H",E,"Hitachi H8/300H",N,N],[17,"EM_H8S",E,"Hitachi H8S",N,N],[17,"EM_H8_500",E,"Hitachi H8/500",N,N],[17,"EM_IA_64",E,"Intel Merced",N,N],[17,"EM_MIPS_X",E,"Stanford MIPS-X",N,N],[17,"EM_COLDFIRE",E,"Motorola Coldfire",N,N],[17,"EM_68HC12",E,"Motorola M68HC12",N,N],[17,"EM_MMA",E,"Fujitsu MMA Multimedia Accelerator",N,N],[17,"EM_PCP",E,"Siemens PCP",N,N],[17,"EM_NCPU",E,"Sony nCPU embeeded RISC",N,N],[17,"EM_NDR1",E,"Denso NDR1 microprocessor",N,N],[17,"EM_STARCORE",E,"Motorola Start*Core processor",N,N],[17,"EM_ME16",E,"Toyota ME16 processor",N,N],[17,"EM_ST100",E,"STMicroelectronic ST100 processor",N,N],[17,"EM_TINYJ",E,"Advanced Logic Corp. Tinyj emb.fam",N,N],[17,"EM_X86_64",E,"AMD x86-64 architecture",N,N],[17,"EM_PDSP",E,"Sony DSP Processor",N,N],[17,"EM_PDP10",E,"Digital PDP-10",N,N],[17,"EM_PDP11",E,"Digital PDP-11",N,N],[17,"EM_FX66",E,"Siemens FX66 microcontroller",N,N],[17,"EM_ST9PLUS",E,"STMicroelectronics ST9+ 8/16 mc",N,N],[17,"EM_ST7",E,"STmicroelectronics ST7 8 bit mc",N,N],[17,"EM_68HC16",E,"Motorola MC68HC16 microcontroller",N,N],[17,"EM_68HC11",E,"Motorola MC68HC11 microcontroller",N,N],[17,"EM_68HC08",E,"Motorola MC68HC08 microcontroller",N,N],[17,"EM_68HC05",E,"Motorola MC68HC05 microcontroller",N,N],[17,"EM_SVX",E,"Silicon Graphics SVx",N,N],[17,"EM_ST19",E,"STMicroelectronics ST19 8 bit mc",N,N],[17,"EM_VAX",E,"Digital VAX",N,N],[17,"EM_CRIS",E,"Axis Communications 32-bit emb.proc",N,N],[17,"EM_JAVELIN",E,"Infineon Technologies 32-bit emb.proc",N,N],[17,"EM_FIREPATH",E,"Element 14 64-bit DSP Processor",N,N],[17,"EM_ZSP",E,"LSI Logic 16-bit DSP Processor",N,N],[17,"EM_MMIX",E,"Donald Knuth's educational 64-bit proc",N,N],[17,"EM_HUANY",E,"Harvard University machine-independent object files",N,N],[17,"EM_PRISM",E,"SiTera Prism",N,N],[17,"EM_AVR",E,"Atmel AVR 8-bit microcontroller",N,N],[17,"EM_FR30",E,"Fujitsu FR30",N,N],[17,"EM_D10V",E,"Mitsubishi D10V",N,N],[17,"EM_D30V",E,"Mitsubishi D30V",N,N],[17,"EM_V850",E,"NEC v850",N,N],[17,"EM_M32R",E,"Mitsubishi M32R",N,N],[17,"EM_MN10300",E,"Matsushita MN10300",N,N],[17,"EM_MN10200",E,"Matsushita MN10200",N,N],[17,"EM_PJ",E,"picoJava",N,N],[17,"EM_OPENRISC",E,"OpenRISC 32-bit embedded processor",N,N],[17,"EM_ARC_COMPACT",E,"ARC International ARCompact",N,N],[17,"EM_XTENSA",E,"Tensilica Xtensa Architecture",N,N],[17,"EM_VIDEOCORE",E,"Alphamosaic VideoCore",N,N],[17,"EM_TMM_GPP",E,"Thompson Multimedia General Purpose Proc",N,N],[17,"EM_NS32K",E,"National Semi. 32000",N,N],[17,"EM_TPC",E,"Tenor Network TPC",N,N],[17,"EM_SNP1K",E,"Trebia SNP 1000",N,N],[17,"EM_ST200",E,"STMicroelectronics ST200",N,N],[17,"EM_IP2K",E,"Ubicom IP2xxx",N,N],[17,"EM_MAX",E,"MAX processor",N,N],[17,"EM_CR",E,"National Semi. CompactRISC",N,N],[17,"EM_F2MC16",E,"Fujitsu F2MC16",N,N],[17,"EM_MSP430",E,"Texas Instruments msp430",N,N],[17,"EM_BLACKFIN",E,"Analog Devices Blackfin DSP",N,N],[17,"EM_SE_C33",E,"Seiko Epson S1C33 family",N,N],[17,"EM_SEP",E,"Sharp embedded microprocessor",N,N],[17,"EM_ARCA",E,"Arca RISC",N,N],[17,"EM_UNICORE",E,"PKU-Unity & MPRC Peking Uni. mc series",N,N],[17,"EM_EXCESS",E,"eXcess configurable cpu",N,N],[17,"EM_DXP",E,"Icera Semi. Deep Execution Processor",N,N],[17,"EM_ALTERA_NIOS2",E,"Altera Nios II",N,N],[17,"EM_CRX",E,"National Semi. CompactRISC CRX",N,N],[17,"EM_XGATE",E,"Motorola XGATE",N,N],[17,"EM_C166",E,"Infineon C16x/XC16x",N,N],[17,"EM_M16C",E,"Renesas M16C",N,N],[17,"EM_DSPIC30F",E,"Microchip Technology dsPIC30F",N,N],[17,"EM_CE",E,"Freescale Communication Engine RISC",N,N],[17,"EM_M32C",E,"Renesas M32C",N,N],[17,"EM_TSK3000",E,"Altium TSK3000",N,N],[17,"EM_RS08",E,"Freescale RS08",N,N],[17,"EM_SHARC",E,"Analog Devices SHARC family",N,N],[17,"EM_ECOG2",E,"Cyan Technology eCOG2",N,N],[17,"EM_SCORE7",E,"Sunplus S+core7 RISC",N,N],[17,"EM_DSP24",E,"New Japan Radio (NJR) 24-bit DSP",N,N],[17,"EM_VIDEOCORE3",E,"Broadcom VideoCore III",N,N],[17,"EM_LATTICEMICO32",E,"RISC for Lattice FPGA",N,N],[17,"EM_SE_C17",E,"Seiko Epson C17",N,N],[17,"EM_TI_C6000",E,"Texas Instruments TMS320C6000 DSP",N,N],[17,"EM_TI_C2000",E,"Texas Instruments TMS320C2000 DSP",N,N],[17,"EM_TI_C5500",E,"Texas Instruments TMS320C55x DSP",N,N],[17,"EM_TI_ARP32",E,"Texas Instruments App. Specific RISC",N,N],[17,"EM_TI_PRU",E,"Texas Instruments Prog. Realtime Unit",N,N],[17,"EM_MMDSP_PLUS",E,"STMicroelectronics 64bit VLIW DSP",N,N],[17,"EM_CYPRESS_M8C",E,"Cypress M8C",N,N],[17,"EM_R32C",E,"Renesas R32C",N,N],[17,"EM_TRIMEDIA",E,"NXP Semi. TriMedia",N,N],[17,"EM_QDSP6",E,"QUALCOMM DSP6",N,N],[17,"EM_8051",E,"Intel 8051 and variants",N,N],[17,"EM_STXP7X",E,"STMicroelectronics STxP7x",N,N],[17,"EM_NDS32",E,"Andes Tech. compact code emb. RISC",N,N],[17,"EM_ECOG1X",E,"Cyan Technology eCOG1X",N,N],[17,"EM_MAXQ30",E,"Dallas Semi. MAXQ30 mc",N,N],[17,"EM_XIMO16",E,"New Japan Radio (NJR) 16-bit DSP",N,N],[17,"EM_MANIK",E,"M2000 Reconfigurable RISC",N,N],[17,"EM_CRAYNV2",E,"Cray NV2 vector architecture",N,N],[17,"EM_RX",E,"Renesas RX",N,N],[17,"EM_METAG",E,"Imagination Tech. META",N,N],[17,"EM_MCST_ELBRUS",E,"MCST Elbrus",N,N],[17,"EM_ECOG16",E,"Cyan Technology eCOG16",N,N],[17,"EM_CR16",E,"National Semi. CompactRISC CR16",N,N],[17,"EM_ETPU",E,"Freescale Extended Time Processing Unit",N,N],[17,"EM_SLE9X",E,"Infineon Tech. SLE9X",N,N],[17,"EM_L10M",E,"Intel L10M",N,N],[17,"EM_K10M",E,"Intel K10M",N,N],[17,"EM_AARCH64",E,"ARM AARCH64",N,N],[17,"EM_AVR32",E,"Amtel 32-bit microprocessor",N,N],[17,"EM_STM8",E,"STMicroelectronics STM8",N,N],[17,"EM_TILE64",E,"Tileta TILE64",N,N],[17,"EM_TILEPRO",E,"Tilera TILEPro",N,N],[17,"EM_MICROBLAZE",E,"Xilinx MicroBlaze",N,N],[17,"EM_CUDA",E,"NVIDIA CUDA",N,N],[17,"EM_TILEGX",E,"Tilera TILE-Gx",N,N],[17,"EM_CLOUDSHIELD",E,"CloudShield",N,N],[17,"EM_COREA_1ST",E,"KIPO-KAIST Core-A 1st gen.",N,N],[17,"EM_COREA_2ND",E,"KIPO-KAIST Core-A 2nd gen.",N,N],[17,"EM_ARC_COMPACT2",E,"Synopsys ARCompact V2",N,N],[17,"EM_OPEN8",E,"Open8 RISC",N,N],[17,"EM_RL78",E,"Renesas RL78",N,N],[17,"EM_VIDEOCORE5",E,"Broadcom VideoCore V",N,N],[17,"EM_78KOR",E,"Renesas 78KOR",N,N],[17,"EM_56800EX",E,"Freescale 56800EX DSC",N,N],[17,"EM_BA1",E,"Beyond BA1",N,N],[17,"EM_BA2",E,"Beyond BA2",N,N],[17,"EM_XCORE",E,"XMOS xCORE",N,N],[17,"EM_MCHP_PIC",E,"Microchip 8-bit PIC(r)",N,N],[17,"EM_KM32",E,"KM211 KM32",N,N],[17,"EM_KMX32",E,"KM211 KMX32",N,N],[17,"EM_EMX16",E,"KM211 KMX16",N,N],[17,"EM_EMX8",E,"KM211 KMX8",N,N],[17,"EM_KVARC",E,"KM211 KVARC",N,N],[17,"EM_CDP",E,"Paneve CDP",N,N],[17,"EM_COGE",E,"Cognitive Smart Memory Processor",N,N],[17,"EM_COOL",E,"Bluechip CoolEngine",N,N],[17,"EM_NORC",E,"Nanoradio Optimized RISC",N,N],[17,"EM_CSR_KALIMBA",E,"CSR Kalimba",N,N],[17,"EM_Z80",E,"Zilog Z80",N,N],[17,"EM_VISIUM",E,"Controls and Data Services VISIUMcore",N,N],[17,"EM_FT32",E,"FTDI Chip FT32",N,N],[17,"EM_MOXIE",E,"Moxie processor",N,N],[17,"EM_AMDGPU",E,"AMD GPU",N,N],[17,"EM_RISCV",E,"RISC-V",N,N],[17,"EM_BPF",E,"Linux BPF -- in-kernel virtual machine",N,N],[17,"EM_NUM",E,E,N,N],[17,"ET_NONE",E,"No file type.",N,N],[17,"ET_REL",E,"Relocatable file.",N,N],[17,"ET_EXEC",E,"Executable file.",N,N],[17,"ET_DYN",E,"Shared object file.",N,N],[17,"ET_CORE",E,"Core file.",N,N],[17,"ET_NUM",E,R[96],N,N],[17,"ELFMAG",E,"The ELF magic number.",N,N],[17,"SELFMAG",E,"Sizeof ELF magic number.",N,N],[17,"EI_CLASS",E,"File class byte index.",N,N],[17,"ELFCLASSNONE",E,"Invalid class.",N,N],[17,"ELFCLASS32",E,"32-bit objects.",N,N],[17,"ELFCLASS64",E,"64-bit objects.",N,N],[17,"ELFCLASSNUM",E,"ELF class number.",N,N],[17,"EI_DATA",E,"Data encoding byte index.",N,N],[17,"ELFDATANONE",E,"Invalid data encoding.",N,N],[17,"ELFDATA2LSB",E,"2's complement, little endian.",N,N],[17,"ELFDATA2MSB",E,"2's complement, big endian.",N,N],[17,"EI_VERSION",E,"File version byte index.",N,N],[17,"EV_CURRENT",E,"Current ELF version.",N,N],[17,"EI_OSABI",E,"OS ABI byte index.",N,N],[17,"ELFOSABI_NONE",E,"UNIX System V ABI.",N,N],[17,"EI_ABIVERSION",E,"ABI version byte index.",N,N],[17,"SIZEOF_IDENT",E,"Number of bytes in an identifier.",N,N],[11,"size",E,R[70],9,[[["ctx"]],[R[6]]]],[11,R[8],E,"Returns the container type this header specifies",9,[[["self"]],[[R[8]],[R[2],[R[8]]]]]],[11,"endianness",E,"Returns the byte order this header specifies",9,[[["self"]],[[R[2],[R[66]]],[R[66]]]]],[11,"new",E,E,9,[[["ctx"]],["self"]]],[0,"program_header",R[45],E,N,N],[3,R[46],R[51],"A unified ProgramHeader - convertable to and from 32-bit…",N,N],[12,"p_type",E,E,12,N],[12,R[53],E,E,12,N],[12,R[47],E,E,12,N],[12,R[56],E,E,12,N],[12,R[58],E,E,12,N],[12,R[48],E,E,12,N],[12,R[61],E,E,12,N],[12,R[63],E,E,12,N],[5,"pt_to_str",E,E,N,[[["u32"]],["str"]]],[0,"program_header32",E,E,N,N],[3,R[46],R[413],"A 64-bit ProgramHeader typically specifies how to map…",N,N],[12,"p_type",E,R[52],13,N],[12,R[47],E,R[55],13,N],[12,R[56],E,R[57],13,N],[12,R[58],E,R[59],13,N],[12,R[48],E,R[60],13,N],[12,R[61],E,R[62],13,N],[12,R[53],E,R[54],13,N],[12,R[63],E,R[64],13,N],[17,R[65],E,E,N,N],[11,"parse",E,E,13,[[[R[6]],[R[66]]],[[R[2],["vec"]],["vec",[R[49]]]]]],[11,R[41],E,E,13,[[[R[6]]],[[R[49]],["vec",[R[49]]]]]],[11,R[67],E,E,13,[[[R[6]]]]],[11,R[50],E,E,13,[[["file"],["u64"],[R[6]]],[[R[2],["vec"]],["vec",[R[49]]]]]],[0,"program_header64",R[51],E,N,N],[3,R[46],R[414],"A 32-bit ProgramHeader typically specifies how to map…",N,N],[12,"p_type",E,R[52],14,N],[12,R[53],E,R[54],14,N],[12,R[47],E,R[55],14,N],[12,R[56],E,R[57],14,N],[12,R[58],E,R[59],14,N],[12,R[48],E,R[60],14,N],[12,R[61],E,R[62],14,N],[12,R[63],E,R[64],14,N],[17,R[65],E,E,N,N],[11,"parse",E,E,14,[[[R[6]],[R[66]]],[[R[2],["vec"]],["vec",[R[49]]]]]],[11,R[41],E,E,14,[[[R[6]]],[[R[49]],["vec",[R[49]]]]]],[11,R[67],E,E,14,[[[R[6]]]]],[11,R[50],E,E,14,[[["file"],["u64"],[R[6]]],[[R[2],["vec"]],["vec",[R[49]]]]]],[17,"PT_NULL",R[51],"Program header table entry unused",N,N],[17,"PT_LOAD",E,"Loadable program segment",N,N],[17,"PT_DYNAMIC",E,"Dynamic linking information",N,N],[17,"PT_INTERP",E,"Program interpreter",N,N],[17,"PT_NOTE",E,"Auxiliary information",N,N],[17,"PT_SHLIB",E,R[187],N,N],[17,"PT_PHDR",E,"Entry for header table itself",N,N],[17,"PT_TLS",E,"Thread-local storage segment",N,N],[17,"PT_NUM",E,"Number of defined types",N,N],[17,"PT_LOOS",E,R[156],N,N],[17,"PT_GNU_EH_FRAME",E,"GCC .eh_frame_hdr segment",N,N],[17,"PT_GNU_STACK",E,"Indicates stack executability",N,N],[17,"PT_GNU_RELRO",E,"Read-only after relocation",N,N],[17,"PT_LOSUNW",E,R[68],N,N],[17,"PT_SUNWBSS",E,R[68],N,N],[17,"PT_SUNWSTACK",E,"Stack segment",N,N],[17,"PT_HISUNW",E,R[69],N,N],[17,"PT_HIOS",E,R[69],N,N],[17,"PT_LOPROC",E,R[157],N,N],[17,"PT_ARM_EXIDX",E,"ARM unwind segment",N,N],[17,"PT_HIPROC",E,R[158],N,N],[17,"PF_X",E,"Segment is executable",N,N],[17,"PF_W",E,"Segment is writable",N,N],[17,"PF_R",E,"Segment is readable",N,N],[11,"size",E,R[70],12,[[["ctx"]],[R[6]]]],[11,"new",E,"Create a new `PT_LOAD` ELF program header",12,[[],["self"]]],[11,R[99],E,"Returns this program header's file offset range",12,[[["self"]],[["range",[R[6]]],[R[6]]]]],[11,"vm_range",E,"Returns this program header's virtual memory range",12,[[["self"]],[["range",[R[6]]],[R[6]]]]],[11,"executable",E,"Sets the executable flag",12,[[["self"]]]],[11,"write",E,"Sets the write flag",12,[[["self"]]]],[11,"read",E,"Sets the read flag",12,[[["self"]]]],[11,R[100],E,"Whether this program header is executable",12,[[["self"]],["bool"]]],[11,"is_read",E,"Whether this program header is readable",12,[[["self"]],["bool"]]],[11,"is_write",E,"Whether this program header is writable",12,[[["self"]],["bool"]]],[11,"parse",E,E,12,[[["ctx"],[R[6]]],[[R[2],["vec"]],["vec",[R[49]]]]]],[0,"section_header",R[45],E,N,N],[3,R[71],R[87],"A unified SectionHeader - convertable to and from 32-bit…",N,N],[12,R[89],E,R[72],15,N],[12,R[90],E,R[73],15,N],[12,R[74],E,R[75],15,N],[12,R[91],E,R[76],15,N],[12,R[77],E,R[78],15,N],[12,R[92],E,R[79],15,N],[12,R[93],E,R[80],15,N],[12,R[94],E,R[81],15,N],[12,R[82],E,R[83],15,N],[12,R[84],E,R[85],15,N],[5,"sht_to_str",E,E,N,[[["u32"]],["str"]]],[5,"shf_to_str",E,E,N,[[["u32"]],["str"]]],[0,"section_header32",E,E,N,N],[3,R[71],R[415],R[88],N,N],[12,R[89],E,R[72],16,N],[12,R[90],E,R[73],16,N],[12,R[74],E,R[75],16,N],[12,R[91],E,R[76],16,N],[12,R[77],E,R[78],16,N],[12,R[92],E,R[79],16,N],[12,R[93],E,R[80],16,N],[12,R[94],E,R[81],16,N],[12,R[82],E,R[83],16,N],[12,R[84],E,R[85],16,N],[17,R[95],E,E,N,N],[11,R[41],E,E,16,[[[R[6]]],[[R[86]],["vec",[R[86]]]]]],[11,R[50],E,E,16,[[["file"],["u64"],[R[6]]],[[R[2],["vec"]],["vec",[R[86]]]]]],[0,"section_header64",R[87],E,N,N],[3,R[71],R[416],R[88],N,N],[12,R[89],E,R[72],17,N],[12,R[90],E,R[73],17,N],[12,R[74],E,R[75],17,N],[12,R[91],E,R[76],17,N],[12,R[77],E,R[78],17,N],[12,R[92],E,R[79],17,N],[12,R[93],E,R[80],17,N],[12,R[94],E,R[81],17,N],[12,R[82],E,R[83],17,N],[12,R[84],E,R[85],17,N],[17,R[95],E,E,N,N],[11,R[41],E,E,17,[[[R[6]]],[["vec",[R[86]]],[R[86]]]]],[11,R[50],E,E,17,[[["file"],["u64"],[R[6]]],[[R[2],["vec"]],["vec",[R[86]]]]]],[17,"SHN_UNDEF",R[87],"Undefined section.",N,N],[17,"SHN_LORESERVE",E,"Start of reserved indices.",N,N],[17,"SHN_LOPROC",E,R[97],N,N],[17,"SHN_BEFORE",E,"Order section before all others (Solaris).",N,N],[17,"SHN_AFTER",E,"Order section after all others (Solaris).",N,N],[17,"SHN_HIPROC",E,R[98],N,N],[17,"SHN_LOOS",E,R[110],N,N],[17,"SHN_HIOS",E,R[111],N,N],[17,"SHN_ABS",E,"Associated symbol is absolute.",N,N],[17,"SHN_COMMON",E,"Associated symbol is common.",N,N],[17,"SHN_XINDEX",E,"Index is in extra table.",N,N],[17,"SHN_HIRESERVE",E,"End of reserved indices.",N,N],[17,"SHT_NULL",E,"Section header table entry unused.",N,N],[17,"SHT_PROGBITS",E,"Program data.",N,N],[17,"SHT_SYMTAB",E,"Symbol table.",N,N],[17,"SHT_STRTAB",E,"String table.",N,N],[17,"SHT_RELA",E,"Relocation entries with addends.",N,N],[17,"SHT_HASH",E,"Symbol hash table.",N,N],[17,"SHT_DYNAMIC",E,"Dynamic linking information.",N,N],[17,"SHT_NOTE",E,"Notes.",N,N],[17,"SHT_NOBITS",E,"Program space with no data (bss).",N,N],[17,"SHT_REL",E,"Relocation entries, no addends.",N,N],[17,"SHT_SHLIB",E,"Reserved.",N,N],[17,"SHT_DYNSYM",E,"Dynamic linker symbol table.",N,N],[17,"SHT_INIT_ARRAY",E,"Array of constructors.",N,N],[17,"SHT_FINI_ARRAY",E,"Array of destructors.",N,N],[17,"SHT_PREINIT_ARRAY",E,"Array of pre-constructors.",N,N],[17,"SHT_GROUP",E,"Section group.",N,N],[17,"SHT_SYMTAB_SHNDX",E,"Extended section indeces.",N,N],[17,"SHT_NUM",E,R[96],N,N],[17,"SHT_LOOS",E,"Start OS-specific.",N,N],[17,"SHT_GNU_ATTRIBUTES",E,"Object attributes.",N,N],[17,"SHT_GNU_HASH",E,"GNU-style hash table.",N,N],[17,"SHT_GNU_LIBLIST",E,"Prelink library list.",N,N],[17,"SHT_CHECKSUM",E,"Checksum for DSO content.",N,N],[17,"SHT_LOSUNW",E,"Sun-specific low bound.",N,N],[17,"SHT_SUNW_MOVE",E,E,N,N],[17,"SHT_SUNW_COMDAT",E,E,N,N],[17,"SHT_SUNW_SYMINFO",E,E,N,N],[17,"SHT_GNU_VERDEF",E,"Version definition section.",N,N],[17,"SHT_GNU_VERNEED",E,"Version needs section.",N,N],[17,"SHT_GNU_VERSYM",E,"Version symbol table.",N,N],[17,"SHT_HISUNW",E,"Sun-specific high bound.",N,N],[17,"SHT_HIOS",E,"End OS-specific type.",N,N],[17,"SHT_LOPROC",E,R[97],N,N],[17,"SHT_HIPROC",E,R[98],N,N],[17,"SHT_LOUSER",E,"Start of application-specific.",N,N],[17,"SHT_HIUSER",E,"End of application-specific.",N,N],[17,"SHF_WRITE",E,"Writable.",N,N],[17,"SHF_ALLOC",E,"Occupies memory during execution.",N,N],[17,"SHF_EXECINSTR",E,"Executable.",N,N],[17,"SHF_MERGE",E,"Might be merged.",N,N],[17,"SHF_STRINGS",E,"Contains nul-terminated strings.",N,N],[17,"SHF_INFO_LINK",E,"`sh_info' contains SHT index.",N,N],[17,"SHF_LINK_ORDER",E,"Preserve order after combining.",N,N],[17,"SHF_OS_NONCONFORMING",E,"Non-standard OS specific handling required.",N,N],[17,"SHF_GROUP",E,"Section is member of a group.",N,N],[17,"SHF_TLS",E,"Section hold thread-local data.",N,N],[17,"SHF_COMPRESSED",E,"Section with compressed data.",N,N],[17,"SHF_MASKOS",E,"OS-specific..",N,N],[17,"SHF_MASKPROC",E,"Processor-specific.",N,N],[17,"SHF_ORDERED",E,"Special ordering requirement (Solaris).",N,N],[17,"SHF_NUM_REGULAR_FLAGS",E,"Number of \"regular\" section header flags",N,N],[17,"SHF_FLAGS",E,E,N,N],[11,"size",E,R[70],15,[[["ctx"]],[R[6]]]],[11,"new",E,E,15,[[],["self"]]],[11,R[99],E,"Returns this section header's file offset range",15,[[["self"]],[["range",[R[6]]],[R[6]]]]],[11,"vm_range",E,"Returns this section header's virtual memory range",15,[[["self"]],[["range",[R[6]]],[R[6]]]]],[11,"parse",E,"Parse `count` section headers from `bytes` at `offset`,…",15,[[["ctx"],[R[6]]],[["vec",[R[86]]],[R[2],["vec"]]]]],[11,"check_size",E,E,15,[[["self"],[R[6]]],[R[2]]]],[11,"is_relocation",E,E,15,[[["self"]],["bool"]]],[11,R[100],E,E,15,[[["self"]],["bool"]]],[11,"is_writable",E,E,15,[[["self"]],["bool"]]],[11,"is_alloc",E,E,15,[[["self"]],["bool"]]],[0,"compression_header",R[45],E,N,N],[3,R[101],R[107],"A unified CompressionHeader - convertable to and from…",N,N],[12,"ch_type",E,R[102],18,N],[12,"ch_size",E,R[103],18,N],[12,R[104],E,R[105],18,N],[0,"compression_header32",E,E,N,N],[3,R[101],R[417],R[108],N,N],[12,"ch_type",E,R[102],19,N],[12,"ch_size",E,R[103],19,N],[12,R[104],E,R[105],19,N],[17,R[109],E,E,N,N],[11,R[41],E,E,19,[[],[R[106]]]],[11,R[50],E,E,19,[[["file"],["u64"]],[[R[106]],[R[2],[R[106]]]]]],[0,"compression_header64",R[107],E,N,N],[3,R[101],R[418],R[108],N,N],[12,"ch_type",E,R[102],20,N],[12,"ch_reserved",E,E,20,N],[12,"ch_size",E,R[103],20,N],[12,R[104],E,R[105],20,N],[17,R[109],E,E,N,N],[11,R[41],E,E,20,[[],[R[106]]]],[11,R[50],E,E,20,[[["file"],["u64"]],[[R[2],[R[106]]],[R[106]]]]],[17,"ELFCOMPRESS_ZLIB",R[107],"ZLIB/DEFLATE algorithm.",N,N],[17,"ELFCOMPRESS_LOOS",E,R[110],N,N],[17,"ELFCOMPRESS_HIOS",E,R[111],N,N],[17,"ELFCOMPRESS_LOPROC",E,R[97],N,N],[17,"ELFCOMPRESS_HIPROC",E,R[98],N,N],[11,"size",E,"Return the size of the underlying compression header,…",18,[[["ctx"]],[R[6]]]],[11,"new",E,E,18,[[],["self"]]],[11,"parse",E,"Parse a compression header from `bytes` at `offset`, using…",18,[[["ctx"],[R[6]]],[[R[106]],[R[2],[R[106]]]]]],[0,"sym",R[45],E,N,N],[3,"Sym",R[113],"A unified Sym definition - convertible to and from 32-bit…",N,N],[12,"st_name",E,E,21,N],[12,"st_info",E,E,21,N],[12,R[116],E,E,21,N],[12,R[118],E,E,21,N],[12,R[120],E,E,21,N],[12,"st_size",E,E,21,N],[3,"Symtab",E,"An ELF symbol table, allowing lazy iteration over symbols",N,N],[3,R[582],E,"An iterator over symbols in an ELF symbol table",N,N],[5,"st_bind",E,R[128],N,[[["u8"]],["u8"]]],[5,"st_type",E,R[129],N,[[["u8"]],["u8"]]],[5,R[130],E,R[131],N,[[["u8"]],["u8"]]],[5,R[112],E,"Is this information defining an import?",N,[[["u64"],["u8"]],["bool"]]],[5,"get_type",E,"Convenience function to get the &'static str type from the…",N,[[["u8"]],["str"]]],[5,"bind_to_str",E,"Get the string for some bind.",N,[[["u8"]],["str"]]],[5,R[213],E,"Get the string for some type.",N,[[["u8"]],["str"]]],[5,"visibility_to_str",E,"Get the string for some visibility",N,[[["u8"]],["str"]]],[0,"sym32",E,E,N,N],[3,"Sym",R[419],"32-bit Sym - used for both static and dynamic symbol…",N,N],[12,"st_name",E,R[114],22,N],[12,R[120],E,R[121],22,N],[12,"st_size",E,R[122],22,N],[12,"st_info",E,R[115],22,N],[12,R[116],E,R[117],22,N],[12,R[118],E,R[119],22,N],[5,R[123],E,E,N,[[[R[6]]]]],[5,R[50],E,E,N,[[["file"],[R[6]]],[[R[2],["vec"]],["vec",["sym"]]]]],[17,R[124],E,E,N,N],[11,R[112],E,R[125],22,[[["self"]],["bool"]]],[11,R[126],E,R[127],22,[[["self"]],["bool"]]],[0,"sym64",R[113],E,N,N],[3,"Sym",R[420],"64-bit Sym - used for both static and dynamic symbol…",N,N],[12,"st_name",E,R[114],23,N],[12,"st_info",E,R[115],23,N],[12,R[116],E,R[117],23,N],[12,R[118],E,R[119],23,N],[12,R[120],E,R[121],23,N],[12,"st_size",E,R[122],23,N],[5,R[123],E,E,N,[[[R[6]]]]],[5,R[50],E,E,N,[[["file"],[R[6]]],[[R[2],["vec"]],["vec",["sym"]]]]],[17,R[124],E,E,N,N],[11,R[112],E,R[125],23,[[["self"]],["bool"]]],[11,R[126],E,R[127],23,[[["self"]],["bool"]]],[17,"STB_LOCAL",R[113],"=== Sym bindings === Local symbol.",N,N],[17,"STB_GLOBAL",E,"Global symbol.",N,N],[17,"STB_WEAK",E,"Weak symbol.",N,N],[17,"STB_NUM",E,"Number of defined types..",N,N],[17,"STB_LOOS",E,R[110],N,N],[17,"STB_GNU_UNIQUE",E,"Unique symbol..",N,N],[17,"STB_HIOS",E,R[111],N,N],[17,"STB_LOPROC",E,R[97],N,N],[17,"STB_HIPROC",E,R[98],N,N],[17,"STT_NOTYPE",E,"=== Sym types === Symbol type is unspecified.",N,N],[17,"STT_OBJECT",E,"Symbol is a data object.",N,N],[17,"STT_FUNC",E,"Symbol is a code object.",N,N],[17,"STT_SECTION",E,"Symbol associated with a section.",N,N],[17,"STT_FILE",E,"Symbol's name is file name.",N,N],[17,"STT_COMMON",E,"Symbol is a common data object.",N,N],[17,"STT_TLS",E,"Symbol is thread-local data object.",N,N],[17,"STT_NUM",E,R[96],N,N],[17,"STT_LOOS",E,R[110],N,N],[17,"STT_GNU_IFUNC",E,"Symbol is indirect code object.",N,N],[17,"STT_HIOS",E,R[111],N,N],[17,"STT_LOPROC",E,R[97],N,N],[17,"STT_HIPROC",E,R[98],N,N],[17,"STV_DEFAULT",E,"=== Sym visibility === Default: Visibility is specified by…",N,N],[17,"STV_INTERNAL",E,"Internal: use of this attribute is currently reserved.",N,N],[17,"STV_HIDDEN",E,"Hidden: Not visible to other components, necessarily…",N,N],[17,"STV_PROTECTED",E,"Protected: Symbol defined in current component is visible…",N,N],[17,"STV_EXPORTED",E,"Exported: ensures a symbol remains global, cannot be…",N,N],[17,"STV_SINGLETON",E,"Singleton: ensures a symbol remains global, and that a…",N,N],[17,"STV_ELIMINATE",E,"Eliminate: extends the hidden attribute. Not written in…",N,N],[11,"size",E,E,21,[[[R[8]]],[R[6]]]],[11,R[112],E,R[125],21,[[["self"]],["bool"]]],[11,R[126],E,R[127],21,[[["self"]],["bool"]]],[11,"st_bind",E,R[128],21,[[["self"]],["u8"]]],[11,"st_type",E,R[129],21,[[["self"]],["u8"]]],[11,R[130],E,R[131],21,[[["self"]],["u8"]]],[11,"parse",E,"Parse `count` vector of ELF symbols from `offset`",21,[[["ctx"],[R[6]]],[[R[2],["vec"]],["vec",["sym"]]]]],[11,"parse",E,"Parse a table of `count` ELF symbols from `offset`.",24,[[["ctx"],[R[6]]],[[R[2],["symtab"]],["symtab"]]]],[11,"get",E,"Try to parse a single symbol from the binary, at `index`.",24,[[["self"],[R[6]]],[["sym"],[R[7],["sym"]]]]],[11,"len",E,"The number of symbols in the table.",24,[[["self"]],[R[6]]]],[11,R[380],E,"Returns true if table has no symbols.",24,[[["self"]],["bool"]]],[11,"iter",E,"Iterate over all symbols.",24,[[["self"]],["symiterator"]]],[11,"to_vec",E,"Parse all symbols into a vector.",24,[[["self"]],[["sym"],["vec",["sym"]]]]],[0,"dynamic",R[45],E,N,N],[3,"Dyn",R[141],E,N,N],[12,"d_tag",E,E,25,N],[12,"d_val",E,E,25,N],[3,"Dynamic",E,E,N,N],[12,"dyns",E,E,26,N],[12,"info",E,E,26,N],[3,R[132],E,R[133],N,N],[12,"rela",E,E,27,N],[12,"relasz",E,E,27,N],[12,"relaent",E,E,27,N],[12,R[134],E,E,27,N],[12,"rel",E,E,27,N],[12,"relsz",E,E,27,N],[12,"relent",E,E,27,N],[12,R[145],E,E,27,N],[12,R[146],E,E,27,N],[12,"hash",E,E,27,N],[12,R[5],E,E,27,N],[12,"strsz",E,E,27,N],[12,"symtab",E,E,27,N],[12,"syment",E,E,27,N],[12,"pltgot",E,E,27,N],[12,R[147],E,E,27,N],[12,"pltrel",E,E,27,N],[12,"jmprel",E,E,27,N],[12,"verneed",E,E,27,N],[12,R[135],E,E,27,N],[12,"versym",E,E,27,N],[12,"init",E,E,27,N],[12,"fini",E,E,27,N],[12,R[136],E,E,27,N],[12,R[137],E,E,27,N],[12,R[138],E,E,27,N],[12,R[139],E,E,27,N],[12,R[140],E,E,27,N],[12,"flags",E,E,27,N],[12,"flags_1",E,E,27,N],[12,"soname",E,E,27,N],[12,"textrel",E,E,27,N],[5,"tag_to_str",E,"Converts a tag to its string representation.",N,[[["u64"]],["str"]]],[0,"dyn32",E,E,N,N],[3,"Dyn",R[421],R[142],N,N],[12,"d_tag",E,R[143],28,N],[12,"d_val",E,R[144],28,N],[3,R[132],E,R[133],N,N],[12,"rela",E,E,29,N],[12,"relasz",E,E,29,N],[12,"relaent",E,E,29,N],[12,R[134],E,E,29,N],[12,"rel",E,E,29,N],[12,"relsz",E,E,29,N],[12,"relent",E,E,29,N],[12,R[145],E,E,29,N],[12,R[146],E,E,29,N],[12,"hash",E,E,29,N],[12,R[5],E,E,29,N],[12,"strsz",E,E,29,N],[12,"symtab",E,E,29,N],[12,"syment",E,E,29,N],[12,"pltgot",E,E,29,N],[12,R[147],E,E,29,N],[12,"pltrel",E,E,29,N],[12,"jmprel",E,E,29,N],[12,"verneed",E,E,29,N],[12,R[135],E,E,29,N],[12,"versym",E,E,29,N],[12,"init",E,E,29,N],[12,"fini",E,E,29,N],[12,R[136],E,E,29,N],[12,R[137],E,E,29,N],[12,R[138],E,E,29,N],[12,R[139],E,E,29,N],[12,R[140],E,E,29,N],[12,"flags",E,E,29,N],[12,"flags_1",E,E,29,N],[12,"soname",E,E,29,N],[12,"textrel",E,E,29,N],[5,R[50],E,R[148],N,[[["file"]],[[R[2],[R[7]]],[R[7],["vec"]]]]],[5,R[123],E,R[149],N,[[[R[6]]]]],[5,R[150],E,R[151],N,[[[R[6]]],[R[7]]]],[5,R[152],E,R[153],N,[[[R[6]]],[["str"],["vec",["str"]]]]],[17,R[154],E,E,N,N],[11,"update",E,E,29,[[["self"],["dyn"]]]],[11,"new",E,E,29,[[],[R[155]]]],[0,"dyn64",R[141],E,N,N],[3,"Dyn",R[422],R[142],N,N],[12,"d_tag",E,R[143],30,N],[12,"d_val",E,R[144],30,N],[3,R[132],E,R[133],N,N],[12,"rela",E,E,31,N],[12,"relasz",E,E,31,N],[12,"relaent",E,E,31,N],[12,R[134],E,E,31,N],[12,"rel",E,E,31,N],[12,"relsz",E,E,31,N],[12,"relent",E,E,31,N],[12,R[145],E,E,31,N],[12,R[146],E,E,31,N],[12,"hash",E,E,31,N],[12,R[5],E,E,31,N],[12,"strsz",E,E,31,N],[12,"symtab",E,E,31,N],[12,"syment",E,E,31,N],[12,"pltgot",E,E,31,N],[12,R[147],E,E,31,N],[12,"pltrel",E,E,31,N],[12,"jmprel",E,E,31,N],[12,"verneed",E,E,31,N],[12,R[135],E,E,31,N],[12,"versym",E,E,31,N],[12,"init",E,E,31,N],[12,"fini",E,E,31,N],[12,R[136],E,E,31,N],[12,R[137],E,E,31,N],[12,R[138],E,E,31,N],[12,R[139],E,E,31,N],[12,R[140],E,E,31,N],[12,"flags",E,E,31,N],[12,"flags_1",E,E,31,N],[12,"soname",E,E,31,N],[12,"textrel",E,E,31,N],[5,R[50],E,R[148],N,[[["file"]],[[R[7],["vec"]],[R[2],[R[7]]]]]],[5,R[123],E,R[149],N,[[[R[6]]]]],[5,R[150],E,R[151],N,[[[R[6]]],[R[7]]]],[5,R[152],E,R[153],N,[[[R[6]]],[["str"],["vec",["str"]]]]],[17,R[154],E,E,N,N],[11,"update",E,E,31,[[["dyn"],["self"]]]],[11,"new",E,E,31,[[],[R[155]]]],[17,"DT_NULL",R[141],"Marks end of dynamic section",N,N],[17,"DT_NEEDED",E,"Name of needed library",N,N],[17,"DT_PLTRELSZ",E,"Size in bytes of PLT relocs",N,N],[17,"DT_PLTGOT",E,"Processor defined value",N,N],[17,"DT_HASH",E,"Address of symbol hash table",N,N],[17,"DT_STRTAB",E,"Address of string table",N,N],[17,"DT_SYMTAB",E,"Address of symbol table",N,N],[17,"DT_RELA",E,"Address of Rela relocs",N,N],[17,"DT_RELASZ",E,"Total size of Rela relocs",N,N],[17,"DT_RELAENT",E,"Size of one Rela reloc",N,N],[17,"DT_STRSZ",E,"Size of string table",N,N],[17,"DT_SYMENT",E,"Size of one symbol table entry",N,N],[17,"DT_INIT",E,"Address of init function",N,N],[17,"DT_FINI",E,"Address of termination function",N,N],[17,"DT_SONAME",E,"Name of shared object",N,N],[17,"DT_RPATH",E,"Library search path (deprecated)",N,N],[17,"DT_SYMBOLIC",E,"Start symbol search here",N,N],[17,"DT_REL",E,"Address of Rel relocs",N,N],[17,"DT_RELSZ",E,"Total size of Rel relocs",N,N],[17,"DT_RELENT",E,"Size of one Rel reloc",N,N],[17,"DT_PLTREL",E,"Type of reloc in PLT",N,N],[17,"DT_DEBUG",E,"For debugging; unspecified",N,N],[17,"DT_TEXTREL",E,"Reloc might modify .text",N,N],[17,"DT_JMPREL",E,"Address of PLT relocs",N,N],[17,"DT_BIND_NOW",E,"Process relocations of object",N,N],[17,"DT_INIT_ARRAY",E,"Array with addresses of init fct",N,N],[17,"DT_FINI_ARRAY",E,"Array with addresses of fini fct",N,N],[17,"DT_INIT_ARRAYSZ",E,"Size in bytes of DT_INIT_ARRAY",N,N],[17,"DT_FINI_ARRAYSZ",E,"Size in bytes of DT_FINI_ARRAY",N,N],[17,"DT_RUNPATH",E,"Library search path",N,N],[17,"DT_FLAGS",E,"Flags for the object being loaded",N,N],[17,"DT_ENCODING",E,"Start of encoded range",N,N],[17,"DT_PREINIT_ARRAY",E,"Array with addresses of preinit fct",N,N],[17,"DT_PREINIT_ARRAYSZ",E,"size in bytes of DT_PREINIT_ARRAY",N,N],[17,"DT_NUM",E,"Number used",N,N],[17,"DT_LOOS",E,R[156],N,N],[17,"DT_HIOS",E,R[69],N,N],[17,"DT_LOPROC",E,R[157],N,N],[17,"DT_HIPROC",E,R[158],N,N],[17,"DT_ADDRRNGLO",E,"DT_* entries which fall between DT_ADDRRNGHI &…",N,N],[17,"DT_GNU_HASH",E,"GNU-style hash table",N,N],[17,"DT_TLSDESC_PLT",E,E,N,N],[17,"DT_TLSDESC_GOT",E,E,N,N],[17,"DT_GNU_CONFLICT",E,"Start of conflict section",N,N],[17,"DT_GNU_LIBLIST",E,"Library list",N,N],[17,"DT_CONFIG",E,"Configuration information",N,N],[17,"DT_DEPAUDIT",E,"Dependency auditing",N,N],[17,"DT_AUDIT",E,"Object auditing",N,N],[17,"DT_PLTPAD",E,"PLT padding",N,N],[17,"DT_MOVETAB",E,"Move table",N,N],[17,"DT_SYMINFO",E,"Syminfo table",N,N],[17,"DT_ADDRRNGHI",E,E,N,N],[17,"DT_ADDRNUM",E,E,N,N],[17,"DT_VERSYM",E,"The versioning entry types. The next are defined as part…",N,N],[17,"DT_RELACOUNT",E,E,N,N],[17,"DT_RELCOUNT",E,E,N,N],[17,"DT_FLAGS_1",E,"State flags, see DF_1_* below",N,N],[17,"DT_VERDEF",E,"Address of version definition table",N,N],[17,"DT_VERDEFNUM",E,"Number of version definitions",N,N],[17,"DT_VERNEED",E,"Address of table with needed versions",N,N],[17,"DT_VERNEEDNUM",E,"Number of needed versions",N,N],[17,"DF_ORIGIN",E,"Object may use DF_ORIGIN.",N,N],[17,"DF_SYMBOLIC",E,"Symbol resolutions starts here.",N,N],[17,"DF_TEXTREL",E,"Object contains text relocations.",N,N],[17,"DF_BIND_NOW",E,"No lazy binding for this object.",N,N],[17,"DF_STATIC_TLS",E,"Module uses the static TLS model.",N,N],[17,"DF_1_NOW",E,"=== State flags === selectable in the `d_un.d_val` element…",N,N],[17,"DF_1_GLOBAL",E,"Set RTLD_GLOBAL for this object.",N,N],[17,"DF_1_GROUP",E,"Set RTLD_GROUP for this object.",N,N],[17,"DF_1_NODELETE",E,"Set RTLD_NODELETE for this object.",N,N],[17,"DF_1_LOADFLTR",E,"Trigger filtee loading at runtime.",N,N],[17,"DF_1_INITFIRST",E,"Set RTLD_INITFIRST for this object.",N,N],[17,"DF_1_NOOPEN",E,"Set RTLD_NOOPEN for this object.",N,N],[17,"DF_1_ORIGIN",E,"$ORIGIN must be handled.",N,N],[17,"DF_1_DIRECT",E,"Direct binding enabled.",N,N],[17,"DF_1_TRANS",E,E,N,N],[17,"DF_1_INTERPOSE",E,"Object is used to interpose.",N,N],[17,"DF_1_NODEFLIB",E,"Ignore default lib search path.",N,N],[17,"DF_1_NODUMP",E,"Object can't be dldump'ed.",N,N],[17,"DF_1_CONFALT",E,"Configuration alternative created.",N,N],[17,"DF_1_ENDFILTEE",E,"Filtee terminates filters search.",N,N],[17,"DF_1_DISPRELDNE",E,"Disp reloc applied at build time.",N,N],[17,"DF_1_DISPRELPND",E,"Disp reloc applied at run-time.",N,N],[17,"DF_1_NODIRECT",E,"Object has no-direct binding.",N,N],[17,"DF_1_IGNMULDEF",E,E,N,N],[17,"DF_1_NOKSYMS",E,E,N,N],[17,"DF_1_NOHDR",E,E,N,N],[17,"DF_1_EDITED",E,"Object is modified after built.",N,N],[17,"DF_1_NORELOC",E,E,N,N],[17,"DF_1_SYMINTPOSE",E,"Object has individual interposers.",N,N],[17,"DF_1_GLOBAUDIT",E,"Global auditing required.",N,N],[17,"DF_1_SINGLETON",E,"Singleton dyn are used.",N,N],[11,"size",E,E,25,[[[R[8]]],[R[6]]]],[11,"parse",E,"Returns a vector of dynamic entries from the underlying…",26,[[["ctx"]],[[R[2],[R[7]]],[R[7]]]]],[11,"get_libraries",E,E,26,[[[R[5]],["self"]],[["str"],["vec",["str"]]]]],[11,"update",E,E,27,[[["self"],["dyn"]]]],[11,"new",E,E,27,[[],[R[155]]]],[0,"reloc",R[45],"Relocation computations",N,N],[3,"Reloc",R[160],"A unified ELF relocation structure",N,N],[12,R[159],E,"Address",32,N],[12,R[163],E,"Addend",32,N],[12,"r_sym",E,"The index into the corresponding symbol table - either…",32,N],[12,"r_type",E,"The relocation type",32,N],[3,R[214],E,"An ELF section containing relocations, allowing lazy…",N,N],[3,R[583],E,E,N,N],[5,"r_to_str",E,E,N,[[["u16"],["u32"]],["str"]]],[0,"reloc32",E,E,N,N],[3,"Rela",R[424],R[161],N,N],[12,R[159],E,"Address",33,N],[12,"r_info",E,R[162],33,N],[12,R[163],E,"Addend",33,N],[3,"Rel",E,R[164],N,N],[12,R[159],E,"address",34,N],[12,"r_info",E,R[165],34,N],[5,"r_sym",E,E,N,[[["u32"]],["u32"]]],[5,"r_type",E,E,N,[[["u32"]],["u32"]]],[5,"r_info",E,E,N,[[["u32"]],["u32"]]],[5,R[166],E,R[167],N,[[[R[6]]]]],[5,R[168],E,R[169],N,[[[R[6]]]]],[5,R[50],E,E,N,[[["file"],[R[6]]],[["vec",["rela"]],[R[2],["vec"]]]]],[17,R[170],E,E,N,N],[17,R[171],E,E,N,N],[0,"reloc64",R[160],E,N,N],[3,"Rela",R[425],R[161],N,N],[12,R[159],E,"Address",35,N],[12,"r_info",E,R[162],35,N],[12,R[163],E,"Addend",35,N],[3,"Rel",E,R[164],N,N],[12,R[159],E,"address",36,N],[12,"r_info",E,R[165],36,N],[5,"r_sym",E,E,N,[[["u64"]],["u32"]]],[5,"r_type",E,E,N,[[["u64"]],["u32"]]],[5,"r_info",E,E,N,[[["u64"]],["u64"]]],[5,R[166],E,R[167],N,[[[R[6]]]]],[5,R[168],E,R[169],N,[[[R[6]]]]],[5,R[50],E,E,N,[[["file"],[R[6]]],[[R[2],["vec"]],["vec",["rela"]]]]],[17,R[170],E,E,N,N],[17,R[171],E,E,N,N],[17,"R_X86_64_NONE",R[160],"No reloc.",N,N],[17,"R_X86_64_64",E,"Direct 64 bit.",N,N],[17,"R_X86_64_PC32",E,"PC relative 32 bit signed.",N,N],[17,"R_X86_64_GOT32",E,"32 bit GOT entry.",N,N],[17,"R_X86_64_PLT32",E,"32 bit PLT address.",N,N],[17,"R_X86_64_COPY",E,"Copy symbol at runtime.",N,N],[17,"R_X86_64_GLOB_DAT",E,"Create GOT entry.",N,N],[17,"R_X86_64_JUMP_SLOT",E,"Create PLT entry.",N,N],[17,"R_X86_64_RELATIVE",E,"Adjust by program base.",N,N],[17,"R_X86_64_GOTPCREL",E,"32 bit signed PC relative offset to GOT.",N,N],[17,"R_X86_64_32",E,"Direct 32 bit zero extended.",N,N],[17,"R_X86_64_32S",E,"Direct 32 bit sign extended.",N,N],[17,"R_X86_64_16",E,"Direct 16 bit zero extended.",N,N],[17,"R_X86_64_PC16",E,"16 bit sign extended pc relative.",N,N],[17,"R_X86_64_8",E,"Direct 8 bit sign extended.",N,N],[17,"R_X86_64_PC8",E,"8 bit sign extended pc relative.",N,N],[17,"R_X86_64_DTPMOD64",E,"ID of module containing symbol.",N,N],[17,"R_X86_64_DTPOFF64",E,"Offset in module's TLS block.",N,N],[17,"R_X86_64_TPOFF64",E,R[172],N,N],[17,"R_X86_64_TLSGD",E,"32 bit signed PC relative offset to two GOT entries for GD…",N,N],[17,"R_X86_64_TLSLD",E,"32 bit signed PC relative offset to two GOT entries for LD…",N,N],[17,"R_X86_64_DTPOFF32",E,"Offset in TLS block.",N,N],[17,"R_X86_64_GOTTPOFF",E,"32 bit signed PC relative offset to GOT entry for IE symbol.",N,N],[17,"R_X86_64_TPOFF32",E,R[172],N,N],[17,"R_X86_64_PC64",E,"PC relative 64 bit.",N,N],[17,"R_X86_64_GOTOFF64",E,"64 bit offset to GOT.",N,N],[17,"R_X86_64_GOTPC32",E,"32 bit signed pc relative offset to GOT.",N,N],[17,"R_X86_64_GOT64",E,"64-bit GOT entry offset.",N,N],[17,"R_X86_64_GOTPCREL64",E,"64-bit PC relative offset to GOT entry.",N,N],[17,"R_X86_64_GOTPC64",E,"64-bit PC relative offset to GOT.",N,N],[17,"R_X86_64_GOTPLT64",E,"like GOT64, says PLT entry needed.",N,N],[17,"R_X86_64_PLTOFF64",E,"64-bit GOT relative offset to PLT entry.",N,N],[17,"R_X86_64_SIZE32",E,"Size of symbol plus 32-bit addend.",N,N],[17,"R_X86_64_SIZE64",E,"Size of symbol plus 64-bit addend.",N,N],[17,"R_X86_64_GOTPC32_TLSDESC",E,"GOT offset for TLS descriptor..",N,N],[17,"R_X86_64_TLSDESC_CALL",E,"Marker for call through TLS descriptor..",N,N],[17,"R_X86_64_TLSDESC",E,"TLS descriptor..",N,N],[17,"R_X86_64_IRELATIVE",E,"Adjust indirectly by program base.",N,N],[17,"R_X86_64_RELATIVE64",E,"64-bit adjust by program base.",N,N],[17,"R_X86_64_GOTPCRELX",E,R[173],N,N],[17,"R_X86_64_REX_GOTPCRELX",E,R[173],N,N],[17,"R_X86_64_NUM",E,E,N,N],[17,"R_386_NONE",E,R[206],N,N],[17,"R_386_32",E,R[174],N,N],[17,"R_386_PC32",E,R[186],N,N],[17,"R_386_GOT32",E,R[193],N,N],[17,"R_386_PLT32",E,"32 bit PLT address",N,N],[17,"R_386_COPY",E,R[175],N,N],[17,"R_386_GLOB_DAT",E,R[176],N,N],[17,"R_386_JMP_SLOT",E,R[177],N,N],[17,"R_386_RELATIVE",E,R[178],N,N],[17,"R_386_GOTOFF",E,R[191],N,N],[17,"R_386_GOTPC",E,R[192],N,N],[17,"R_386_32PLT",E,E,N,N],[17,"R_386_TLS_TPOFF",E,R[190],N,N],[17,"R_386_TLS_IE",E,"Address of GOT entry for static TLS block offset",N,N],[17,"R_386_TLS_GOTIE",E,"GOT entry for static TLS block offset",N,N],[17,"R_386_TLS_LE",E,"Offset relative to static TLS block",N,N],[17,"R_386_TLS_GD",E,"Direct 32 bit for GNU version of general dynamic thread…",N,N],[17,"R_386_TLS_LDM",E,"Direct 32 bit for GNU version of local dynamic thread…",N,N],[17,"R_386_16",E,E,N,N],[17,"R_386_PC16",E,E,N,N],[17,"R_386_8",E,E,N,N],[17,"R_386_PC8",E,E,N,N],[17,"R_386_TLS_GD_32",E,"Direct 32 bit for general dynamic thread local data",N,N],[17,"R_386_TLS_GD_PUSH",E,"Tag for pushl in GD TLS code",N,N],[17,"R_386_TLS_GD_CALL",E,"Relocation for call to __tls_get_addr()",N,N],[17,"R_386_TLS_GD_POP",E,"Tag for popl in GD TLS code",N,N],[17,"R_386_TLS_LDM_32",E,"Direct 32 bit for local dynamic thread local data in LE code",N,N],[17,"R_386_TLS_LDM_PUSH",E,"Tag for pushl in LDM TLS code",N,N],[17,"R_386_TLS_LDM_CALL",E,"Relocation for call to __tls_get_addr() in LDM code",N,N],[17,"R_386_TLS_LDM_POP",E,"Tag for popl in LDM TLS code",N,N],[17,"R_386_TLS_LDO_32",E,"Offset relative to TLS block",N,N],[17,"R_386_TLS_IE_32",E,"GOT entry for negated static TLS block offset",N,N],[17,"R_386_TLS_LE_32",E,"Negated offset relative to static TLS block",N,N],[17,"R_386_TLS_DTPMOD32",E,R[188],N,N],[17,"R_386_TLS_DTPOFF32",E,R[189],N,N],[17,"R_386_TLS_TPOFF32",E,"Negated offset in static TLS block",N,N],[17,"R_386_SIZE32",E,"32-bit symbol size",N,N],[17,"R_386_TLS_GOTDESC",E,"GOT offset for TLS descriptor.",N,N],[17,"R_386_TLS_DESC_CALL",E,"Marker of call through TLS descriptor for relaxation",N,N],[17,"R_386_TLS_DESC",E,"TLS descriptor containing pointer to code and to argument,…",N,N],[17,"R_386_IRELATIVE",E,"Adjust indirectly by program base",N,N],[17,"R_386_GOT32X",E,"Load from 32 bit GOT entry, relaxable",N,N],[17,"R_386_NUM",E,R[205],N,N],[17,"R_AARCH64_NONE",E,"No relocation",N,N],[17,"R_AARCH64_P32_ABS32",E,R[174],N,N],[17,"R_AARCH64_P32_COPY",E,R[175],N,N],[17,"R_AARCH64_P32_GLOB_DAT",E,R[176],N,N],[17,"R_AARCH64_P32_JUMP_SLOT",E,R[177],N,N],[17,"R_AARCH64_P32_RELATIVE",E,R[178],N,N],[17,"R_AARCH64_P32_TLS_DTPMOD",E,"Module number, 32 bit",N,N],[17,"R_AARCH64_P32_TLS_DTPREL",E,"Module-relative offset, 32 bit",N,N],[17,"R_AARCH64_P32_TLS_TPREL",E,"TP-relative offset, 32 bit",N,N],[17,"R_AARCH64_P32_TLSDESC",E,R[184],N,N],[17,"R_AARCH64_P32_IRELATIVE",E,R[185],N,N],[17,"R_AARCH64_ABS64",E,"Direct 64 bit",N,N],[17,"R_AARCH64_ABS32",E,R[174],N,N],[17,"R_AARCH64_ABS16",E,"Direct 16-bit",N,N],[17,"R_AARCH64_PREL64",E,"PC-relative 64-bit",N,N],[17,"R_AARCH64_PREL32",E,"PC-relative 32-bit",N,N],[17,"R_AARCH64_PREL16",E,"PC-relative 16-bit",N,N],[17,"R_AARCH64_MOVW_UABS_G0",E,"Dir. MOVZ imm. from bits 15:0",N,N],[17,"R_AARCH64_MOVW_UABS_G0_NC",E,R[179],N,N],[17,"R_AARCH64_MOVW_UABS_G1",E,"Dir. MOVZ imm. from bits 31:16",N,N],[17,"R_AARCH64_MOVW_UABS_G1_NC",E,R[179],N,N],[17,"R_AARCH64_MOVW_UABS_G2",E,"Dir. MOVZ imm. from bits 47:32",N,N],[17,"R_AARCH64_MOVW_UABS_G2_NC",E,R[179],N,N],[17,"R_AARCH64_MOVW_UABS_G3",E,"Dir. MOV{K,Z} imm. from 63:48",N,N],[17,"R_AARCH64_MOVW_SABS_G0",E,"Dir. MOV{N,Z} imm. from 15:0",N,N],[17,"R_AARCH64_MOVW_SABS_G1",E,"Dir. MOV{N,Z} imm. from 31:16",N,N],[17,"R_AARCH64_MOVW_SABS_G2",E,"Dir. MOV{N,Z} imm. from 47:32",N,N],[17,"R_AARCH64_LD_PREL_LO19",E,"PC-rel. LD imm. from bits 20:2",N,N],[17,"R_AARCH64_ADR_PREL_LO21",E,"PC-rel. ADR imm. from bits 20:0",N,N],[17,"R_AARCH64_ADR_PREL_PG_HI21",E,"Page-rel. ADRP imm. from 32:12",N,N],[17,"R_AARCH64_ADR_PREL_PG_HI21_NC",E,"Likewise; no overflow check",N,N],[17,"R_AARCH64_ADD_ABS_LO12_NC",E,"Dir. ADD imm. from bits 11:0",N,N],[17,"R_AARCH64_LDST8_ABS_LO12_NC",E,"Likewise for LD/ST; no check.",N,N],[17,"R_AARCH64_TSTBR14",E,"PC-rel. TBZ/TBNZ imm. from 15:2",N,N],[17,"R_AARCH64_CONDBR19",E,"PC-rel. cond. br. imm. from 20:2.",N,N],[17,"R_AARCH64_JUMP26",E,"PC-rel. B imm. from bits 27:2",N,N],[17,"R_AARCH64_CALL26",E,"Likewise for CALL",N,N],[17,"R_AARCH64_LDST16_ABS_LO12_NC",E,"Dir. ADD imm. from bits 11:1",N,N],[17,"R_AARCH64_LDST32_ABS_LO12_NC",E,"Likewise for bits 11:2",N,N],[17,"R_AARCH64_LDST64_ABS_LO12_NC",E,"Likewise for bits 11:3",N,N],[17,"R_AARCH64_MOVW_PREL_G0",E,"PC-rel. MOV{N,Z} imm. from 15:0",N,N],[17,"R_AARCH64_MOVW_PREL_G0_NC",E,R[179],N,N],[17,"R_AARCH64_MOVW_PREL_G1",E,"PC-rel. MOV{N,Z} imm. from 31:16.",N,N],[17,"R_AARCH64_MOVW_PREL_G1_NC",E,R[179],N,N],[17,"R_AARCH64_MOVW_PREL_G2",E,"PC-rel. MOV{N,Z} imm. from 47:32.",N,N],[17,"R_AARCH64_MOVW_PREL_G2_NC",E,R[179],N,N],[17,"R_AARCH64_MOVW_PREL_G3",E,"PC-rel. MOV{N,Z} imm. from 63:48.",N,N],[17,"R_AARCH64_LDST128_ABS_LO12_NC",E,"Dir. ADD imm. from bits 11:4",N,N],[17,"R_AARCH64_MOVW_GOTOFF_G0",E,"GOT-rel. off. MOV{N,Z} imm. 15:0.",N,N],[17,"R_AARCH64_MOVW_GOTOFF_G0_NC",E,R[179],N,N],[17,"R_AARCH64_MOVW_GOTOFF_G1",E,"GOT-rel. o. MOV{N,Z} imm. 31:16",N,N],[17,"R_AARCH64_MOVW_GOTOFF_G1_NC",E,R[179],N,N],[17,"R_AARCH64_MOVW_GOTOFF_G2",E,"GOT-rel. o. MOV{N,Z} imm. 47:32",N,N],[17,"R_AARCH64_MOVW_GOTOFF_G2_NC",E,R[179],N,N],[17,"R_AARCH64_MOVW_GOTOFF_G3",E,"GOT-rel. o. MOV{N,Z} imm. 63:48",N,N],[17,"R_AARCH64_GOTREL64",E,"GOT-relative 64-bit",N,N],[17,"R_AARCH64_GOTREL32",E,"GOT-relative 32-bit",N,N],[17,"R_AARCH64_GOT_LD_PREL19",E,"PC-rel. GOT off. load imm. 20:2",N,N],[17,"R_AARCH64_LD64_GOTOFF_LO15",E,"GOT-rel. off. LD/ST imm. 14:3",N,N],[17,"R_AARCH64_ADR_GOT_PAGE",E,"P-page-rel. GOT off. ADRP 32:12",N,N],[17,"R_AARCH64_LD64_GOT_LO12_NC",E,"Dir. GOT off. LD/ST imm. 11:3",N,N],[17,"R_AARCH64_LD64_GOTPAGE_LO15",E,"GOT-page-rel. GOT off. LD/ST 14:3",N,N],[17,"R_AARCH64_TLSGD_ADR_PREL21",E,"PC-relative ADR imm. 20:0",N,N],[17,"R_AARCH64_TLSGD_ADR_PAGE21",E,"page-rel. ADRP imm. 32:12",N,N],[17,"R_AARCH64_TLSGD_ADD_LO12_NC",E,"direct ADD imm. from 11:0",N,N],[17,"R_AARCH64_TLSGD_MOVW_G1",E,R[182],N,N],[17,"R_AARCH64_TLSGD_MOVW_G0_NC",E,"GOT-rel. MOVK imm. 15:0",N,N],[17,"R_AARCH64_TLSLD_ADR_PREL21",E,"Like 512; local dynamic model",N,N],[17,"R_AARCH64_TLSLD_ADR_PAGE21",E,"Like 513; local dynamic model",N,N],[17,"R_AARCH64_TLSLD_ADD_LO12_NC",E,"Like 514; local dynamic model",N,N],[17,"R_AARCH64_TLSLD_MOVW_G1",E,"Like 515; local dynamic model",N,N],[17,"R_AARCH64_TLSLD_MOVW_G0_NC",E,"Like 516; local dynamic model",N,N],[17,"R_AARCH64_TLSLD_LD_PREL19",E,"TLS PC-rel. load imm. 20:2",N,N],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G2",E,"TLS DTP-rel. MOV{N,Z} 47:32",N,N],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G1",E,"TLS DTP-rel. MOV{N,Z} 31:16",N,N],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC",E,R[180],N,N],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G0",E,"TLS DTP-rel. MOV{N,Z} 15:0",N,N],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC",E,R[180],N,N],[17,"R_AARCH64_TLSLD_ADD_DTPREL_HI12",E,"DTP-rel. ADD imm. from 23:12.",N,N],[17,"R_AARCH64_TLSLD_ADD_DTPREL_LO12",E,"DTP-rel. ADD imm. from 11:0",N,N],[17,"R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC",E,R[183],N,N],[17,"R_AARCH64_TLSLD_LDST8_DTPREL_LO12",E,"DTP-rel. LD/ST imm. 11:0",N,N],[17,"R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC",E,R[181],N,N],[17,"R_AARCH64_TLSLD_LDST16_DTPREL_LO12",E,"DTP-rel. LD/ST imm. 11:1",N,N],[17,"R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC",E,R[181],N,N],[17,"R_AARCH64_TLSLD_LDST32_DTPREL_LO12",E,"DTP-rel. LD/ST imm. 11:2",N,N],[17,"R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC",E,R[181],N,N],[17,"R_AARCH64_TLSLD_LDST64_DTPREL_LO12",E,"DTP-rel. LD/ST imm. 11:3",N,N],[17,"R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC",E,R[181],N,N],[17,"R_AARCH64_TLSIE_MOVW_GOTTPREL_G1",E,R[182],N,N],[17,"R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC",E,"GOT-rel. MOVK 15:0",N,N],[17,"R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21",E,"Page-rel. ADRP 32:12",N,N],[17,"R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC",E,"Direct LD off. 11:3",N,N],[17,"R_AARCH64_TLSIE_LD_GOTTPREL_PREL19",E,"PC-rel. load imm. 20:2",N,N],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G2",E,"TLS TP-rel. MOV{N,Z} 47:32",N,N],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G1",E,"TLS TP-rel. MOV{N,Z} 31:16",N,N],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G1_NC",E,R[180],N,N],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G0",E,"TLS TP-rel. MOV{N,Z} 15:0",N,N],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G0_NC",E,R[180],N,N],[17,"R_AARCH64_TLSLE_ADD_TPREL_HI12",E,"TP-rel. ADD imm. 23:12",N,N],[17,"R_AARCH64_TLSLE_ADD_TPREL_LO12",E,"TP-rel. ADD imm. 11:0",N,N],[17,"R_AARCH64_TLSLE_ADD_TPREL_LO12_NC",E,R[183],N,N],[17,"R_AARCH64_TLSLE_LDST8_TPREL_LO12",E,"TP-rel. LD/ST off. 11:0",N,N],[17,"R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC",E,"Likewise; no ovfl. check.",N,N],[17,"R_AARCH64_TLSLE_LDST16_TPREL_LO12",E,"TP-rel. LD/ST off. 11:1",N,N],[17,"R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC",E,R[181],N,N],[17,"R_AARCH64_TLSLE_LDST32_TPREL_LO12",E,"TP-rel. LD/ST off. 11:2",N,N],[17,"R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC",E,R[181],N,N],[17,"R_AARCH64_TLSLE_LDST64_TPREL_LO12",E,"TP-rel. LD/ST off. 11:3",N,N],[17,"R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC",E,R[181],N,N],[17,"R_AARCH64_TLSDESC_LD_PREL19",E,"PC-rel. load immediate 20:2",N,N],[17,"R_AARCH64_TLSDESC_ADR_PREL21",E,"PC-rel. ADR immediate 20:0",N,N],[17,"R_AARCH64_TLSDESC_ADR_PAGE21",E,"Page-rel. ADRP imm. 32:12",N,N],[17,"R_AARCH64_TLSDESC_LD64_LO12",E,"Direct LD off. from 11:3",N,N],[17,"R_AARCH64_TLSDESC_ADD_LO12",E,"Direct ADD imm. from 11:0",N,N],[17,"R_AARCH64_TLSDESC_OFF_G1",E,"GOT-rel. MOV{N,Z} imm. 31:16",N,N],[17,"R_AARCH64_TLSDESC_OFF_G0_NC",E,"GOT-rel. MOVK imm. 15:0; no ck",N,N],[17,"R_AARCH64_TLSDESC_LDR",E,"Relax LDR",N,N],[17,"R_AARCH64_TLSDESC_ADD",E,"Relax ADD",N,N],[17,"R_AARCH64_TLSDESC_CALL",E,"Relax BLR",N,N],[17,"R_AARCH64_TLSLE_LDST128_TPREL_LO12",E,"TP-rel. LD/ST off. 11:4",N,N],[17,"R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC",E,R[181],N,N],[17,"R_AARCH64_TLSLD_LDST128_DTPREL_LO12",E,"DTP-rel. LD/ST imm. 11:4.",N,N],[17,"R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC",E,R[181],N,N],[17,"R_AARCH64_COPY",E,R[175],N,N],[17,"R_AARCH64_GLOB_DAT",E,R[176],N,N],[17,"R_AARCH64_JUMP_SLOT",E,R[177],N,N],[17,"R_AARCH64_RELATIVE",E,R[178],N,N],[17,"R_AARCH64_TLS_DTPMOD",E,"Module number, 64 bit",N,N],[17,"R_AARCH64_TLS_DTPREL",E,"Module-relative offset, 64 bit",N,N],[17,"R_AARCH64_TLS_TPREL",E,R[208],N,N],[17,"R_AARCH64_TLSDESC",E,R[184],N,N],[17,"R_AARCH64_IRELATIVE",E,R[185],N,N],[17,"R_ARM_NONE",E,R[206],N,N],[17,"R_ARM_PC24",E,"Deprecated PC relative 26 bit branch",N,N],[17,"R_ARM_ABS32",E,R[174],N,N],[17,"R_ARM_REL32",E,R[186],N,N],[17,"R_ARM_PC13",E,E,N,N],[17,"R_ARM_ABS16",E,R[207],N,N],[17,"R_ARM_ABS12",E,"Direct 12 bit",N,N],[17,"R_ARM_THM_ABS5",E,"Direct & 0x7C (LDR, STR)",N,N],[17,"R_ARM_ABS8",E,"Direct 8 bit",N,N],[17,"R_ARM_SBREL32",E,E,N,N],[17,"R_ARM_THM_PC22",E,"PC relative 24 bit (Thumb32 BL)",N,N],[17,"R_ARM_THM_PC8",E,"PC relative & 0x3FC(Thumb16 LDR, ADD, ADR).",N,N],[17,"R_ARM_AMP_VCALL9",E,E,N,N],[17,"R_ARM_SWI24",E,"Obsolete static relocation",N,N],[17,"R_ARM_TLS_DESC",E,"Dynamic relocation",N,N],[17,"R_ARM_THM_SWI8",E,R[187],N,N],[17,"R_ARM_XPC25",E,R[187],N,N],[17,"R_ARM_THM_XPC22",E,R[187],N,N],[17,"R_ARM_TLS_DTPMOD32",E,R[188],N,N],[17,"R_ARM_TLS_DTPOFF32",E,R[189],N,N],[17,"R_ARM_TLS_TPOFF32",E,R[190],N,N],[17,"R_ARM_COPY",E,R[175],N,N],[17,"R_ARM_GLOB_DAT",E,R[176],N,N],[17,"R_ARM_JUMP_SLOT",E,R[177],N,N],[17,"R_ARM_RELATIVE",E,R[178],N,N],[17,"R_ARM_GOTOFF",E,R[191],N,N],[17,"R_ARM_GOTPC",E,R[192],N,N],[17,"R_ARM_GOT32",E,R[193],N,N],[17,"R_ARM_PLT32",E,"Deprecated, 32 bit PLT address",N,N],[17,"R_ARM_CALL",E,"PC relative 24 bit (BL, BLX)",N,N],[17,"R_ARM_JUMP24",E,"PC relative 24 bit (B, BL)",N,N],[17,"R_ARM_THM_JUMP24",E,"PC relative 24 bit (Thumb32 B.W)",N,N],[17,"R_ARM_BASE_ABS",E,R[178],N,N],[17,"R_ARM_ALU_PCREL_7_0",E,R[194],N,N],[17,"R_ARM_ALU_PCREL_15_8",E,R[194],N,N],[17,"R_ARM_ALU_PCREL_23_15",E,R[194],N,N],[17,"R_ARM_LDR_SBREL_11_0",E,R[195],N,N],[17,"R_ARM_ALU_SBREL_19_12",E,R[195],N,N],[17,"R_ARM_ALU_SBREL_27_20",E,R[195],N,N],[17,"R_ARM_TARGET1",E,E,N,N],[17,"R_ARM_SBREL31",E,"Program base relative",N,N],[17,"R_ARM_V4BX",E,E,N,N],[17,"R_ARM_TARGET2",E,E,N,N],[17,"R_ARM_PREL31",E,"32 bit PC relative",N,N],[17,"R_ARM_MOVW_ABS_NC",E,"Direct 16-bit (MOVW)",N,N],[17,"R_ARM_MOVT_ABS",E,"Direct high 16-bit (MOVT)",N,N],[17,"R_ARM_MOVW_PREL_NC",E,"PC relative 16-bit (MOVW)",N,N],[17,"R_ARM_MOVT_PREL",E,"PC relative (MOVT)",N,N],[17,"R_ARM_THM_MOVW_ABS_NC",E,"Direct 16 bit (Thumb32 MOVW)",N,N],[17,"R_ARM_THM_MOVT_ABS",E,"Direct high 16 bit (Thumb32 MOVT)",N,N],[17,"R_ARM_THM_MOVW_PREL_NC",E,"PC relative 16 bit (Thumb32 MOVW)",N,N],[17,"R_ARM_THM_MOVT_PREL",E,"PC relative high 16 bit (Thumb32 MOVT)",N,N],[17,"R_ARM_THM_JUMP19",E,"PC relative 20 bit (Thumb32 B.W)",N,N],[17,"R_ARM_THM_JUMP6",E,"PC relative X & 0x7E (Thumb16 CBZ, CBNZ)",N,N],[17,"R_ARM_THM_ALU_PREL_11_0",E,"PC relative 12 bit (Thumb32 ADR.W)",N,N],[17,"R_ARM_THM_PC12",E,"PC relative 12 bit (Thumb32 LDR{D,SB,H,SH})",N,N],[17,"R_ARM_ABS32_NOI",E,"Direct 32-bit",N,N],[17,"R_ARM_REL32_NOI",E,"PC relative 32-bit",N,N],[17,"R_ARM_ALU_PC_G0_NC",E,R[196],N,N],[17,"R_ARM_ALU_PC_G0",E,R[196],N,N],[17,"R_ARM_ALU_PC_G1_NC",E,R[196],N,N],[17,"R_ARM_ALU_PC_G1",E,R[196],N,N],[17,"R_ARM_ALU_PC_G2",E,R[196],N,N],[17,"R_ARM_LDR_PC_G1",E,R[197],N,N],[17,"R_ARM_LDR_PC_G2",E,R[197],N,N],[17,"R_ARM_LDRS_PC_G0",E,R[198],N,N],[17,"R_ARM_LDRS_PC_G1",E,R[198],N,N],[17,"R_ARM_LDRS_PC_G2",E,R[198],N,N],[17,"R_ARM_LDC_PC_G0",E,R[199],N,N],[17,"R_ARM_LDC_PC_G1",E,R[199],N,N],[17,"R_ARM_LDC_PC_G2",E,R[199],N,N],[17,"R_ARM_ALU_SB_G0_NC",E,R[200],N,N],[17,"R_ARM_ALU_SB_G0",E,R[200],N,N],[17,"R_ARM_ALU_SB_G1_NC",E,R[200],N,N],[17,"R_ARM_ALU_SB_G1",E,R[200],N,N],[17,"R_ARM_ALU_SB_G2",E,R[200],N,N],[17,"R_ARM_LDR_SB_G0",E,"Program base relative (LDR,STR, LDRB, STRB)",N,N],[17,"R_ARM_LDR_SB_G1",E,R[201],N,N],[17,"R_ARM_LDR_SB_G2",E,R[201],N,N],[17,"R_ARM_LDRS_SB_G0",E,R[201],N,N],[17,"R_ARM_LDRS_SB_G1",E,R[201],N,N],[17,"R_ARM_LDRS_SB_G2",E,R[201],N,N],[17,"R_ARM_LDC_SB_G0",E,R[202],N,N],[17,"R_ARM_LDC_SB_G1",E,R[202],N,N],[17,"R_ARM_LDC_SB_G2",E,R[202],N,N],[17,"R_ARM_MOVW_BREL_NC",E,R[203],N,N],[17,"R_ARM_MOVT_BREL",E,"Program base relative high 16 bit (MOVT)",N,N],[17,"R_ARM_MOVW_BREL",E,R[203],N,N],[17,"R_ARM_THM_MOVW_BREL_NC",E,R[204],N,N],[17,"R_ARM_THM_MOVT_BREL",E,"Program base relative high 16 bit (Thumb32 MOVT)",N,N],[17,"R_ARM_THM_MOVW_BREL",E,R[204],N,N],[17,"R_ARM_TLS_GOTDESC",E,E,N,N],[17,"R_ARM_TLS_CALL",E,E,N,N],[17,"R_ARM_TLS_DESCSEQ",E,"TLS relaxation",N,N],[17,"R_ARM_THM_TLS_CALL",E,E,N,N],[17,"R_ARM_PLT32_ABS",E,E,N,N],[17,"R_ARM_GOT_ABS",E,"GOT entry",N,N],[17,"R_ARM_GOT_PREL",E,"PC relative GOT entry",N,N],[17,"R_ARM_GOT_BREL12",E,"GOT entry relative to GOT origin (LDR)",N,N],[17,"R_ARM_GOTOFF12",E,"12 bit, GOT entry relative to GOT origin (LDR, STR)",N,N],[17,"R_ARM_GOTRELAX",E,E,N,N],[17,"R_ARM_GNU_VTENTRY",E,E,N,N],[17,"R_ARM_GNU_VTINHERIT",E,E,N,N],[17,"R_ARM_THM_PC11",E,"PC relative & 0xFFE (Thumb16 B)",N,N],[17,"R_ARM_THM_PC9",E,"PC relative & 0x1FE (Thumb16 B/B)",N,N],[17,"R_ARM_TLS_GD32",E,"PC-rel 32 bit for global dynamic thread local data",N,N],[17,"R_ARM_TLS_LDM32",E,"PC-rel 32 bit for local dynamic thread local data",N,N],[17,"R_ARM_TLS_LDO32",E,"32 bit offset relative to TLS block",N,N],[17,"R_ARM_TLS_IE32",E,"PC-rel 32 bit for GOT entry of static TLS block offset",N,N],[17,"R_ARM_TLS_LE32",E,"32 bit offset relative to static TLS block",N,N],[17,"R_ARM_TLS_LDO12",E,"12 bit relative to TLS block (LDR, STR)",N,N],[17,"R_ARM_TLS_LE12",E,"12 bit relative to static TLS block (LDR, STR)",N,N],[17,"R_ARM_TLS_IE12GP",E,"12 bit GOT entry relative to GOT origin (LDR)",N,N],[17,"R_ARM_ME_TOO",E,R[194],N,N],[17,"R_ARM_THM_TLS_DESCSEQ",E,E,N,N],[17,"R_ARM_THM_TLS_DESCSEQ16",E,E,N,N],[17,"R_ARM_THM_TLS_DESCSEQ32",E,E,N,N],[17,"R_ARM_THM_GOT_BREL12",E,"GOT entry relative to GOT origin, 12 bit (Thumb32 LDR)",N,N],[17,"R_ARM_IRELATIVE",E,E,N,N],[17,"R_ARM_RXPC25",E,E,N,N],[17,"R_ARM_RSBREL32",E,E,N,N],[17,"R_ARM_THM_RPC22",E,E,N,N],[17,"R_ARM_RREL32",E,E,N,N],[17,"R_ARM_RABS22",E,E,N,N],[17,"R_ARM_RPC24",E,E,N,N],[17,"R_ARM_RBASE",E,E,N,N],[17,"R_ARM_NUM",E,R[205],N,N],[17,"R_OR1K_NONE",E,E,N,N],[17,"R_OR1K_32",E,E,N,N],[17,"R_OR1K_16",E,E,N,N],[17,"R_OR1K_8",E,E,N,N],[17,"R_OR1K_LO_16_IN_INSN",E,E,N,N],[17,"R_OR1K_HI_16_IN_INSN",E,E,N,N],[17,"R_OR1K_INSN_REL_26",E,E,N,N],[17,"R_OR1K_GNU_VTENTRY",E,E,N,N],[17,"R_OR1K_GNU_VTINHERIT",E,E,N,N],[17,"R_OR1K_32_PCREL",E,E,N,N],[17,"R_OR1K_16_PCREL",E,E,N,N],[17,"R_OR1K_8_PCREL",E,E,N,N],[17,"R_OR1K_GOTPC_HI16",E,E,N,N],[17,"R_OR1K_GOTPC_LO16",E,E,N,N],[17,"R_OR1K_GOT16",E,E,N,N],[17,"R_OR1K_PLT26",E,E,N,N],[17,"R_OR1K_GOTOFF_HI16",E,E,N,N],[17,"R_OR1K_GOTOFF_LO16",E,E,N,N],[17,"R_OR1K_COPY",E,E,N,N],[17,"R_OR1K_GLOB_DAT",E,E,N,N],[17,"R_OR1K_JMP_SLOT",E,E,N,N],[17,"R_OR1K_RELATIVE",E,E,N,N],[17,"R_OR1K_TLS_GD_HI16",E,E,N,N],[17,"R_OR1K_TLS_GD_LO16",E,E,N,N],[17,"R_OR1K_TLS_LDM_HI16",E,E,N,N],[17,"R_OR1K_TLS_LDM_LO16",E,E,N,N],[17,"R_OR1K_TLS_LDO_HI16",E,E,N,N],[17,"R_OR1K_TLS_LDO_LO16",E,E,N,N],[17,"R_OR1K_TLS_IE_HI16",E,E,N,N],[17,"R_OR1K_TLS_IE_LO16",E,E,N,N],[17,"R_OR1K_TLS_LE_HI16",E,E,N,N],[17,"R_OR1K_TLS_LE_LO16",E,E,N,N],[17,"R_OR1K_TLS_TPOFF",E,E,N,N],[17,"R_OR1K_TLS_DTPOFF",E,E,N,N],[17,"R_OR1K_TLS_DTPMOD",E,E,N,N],[17,"R_OR1K_NUM",E,E,N,N],[17,"R_MIPS_NONE",E,R[206],N,N],[17,"R_MIPS_16",E,R[207],N,N],[17,"R_MIPS_32",E,R[174],N,N],[17,"R_MIPS_REL32",E,R[186],N,N],[17,"R_MIPS_26",E,"Direct 26 bit shifted",N,N],[17,"R_MIPS_HI16",E,"High 16 bit",N,N],[17,"R_MIPS_LO16",E,"Low 16 bit",N,N],[17,"R_MIPS_GPREL16",E,"GP relative 16 bit",N,N],[17,"R_MIPS_LITERAL",E,"16 bit literal entry",N,N],[17,"R_MIPS_GOT16",E,"16 bit GOT entry",N,N],[17,"R_MIPS_PC16",E,"PC relative 16 bit",N,N],[17,"R_MIPS_CALL16",E,"16 bit GOT entry for function",N,N],[17,"R_MIPS_GPREL32",E,"GP relative 32 bit",N,N],[17,"R_MIPS_SHIFT5",E,E,N,N],[17,"R_MIPS_SHIFT6",E,E,N,N],[17,"R_MIPS_64",E,E,N,N],[17,"R_MIPS_GOT_DISP",E,E,N,N],[17,"R_MIPS_GOT_PAGE",E,E,N,N],[17,"R_MIPS_GOT_OFST",E,E,N,N],[17,"R_MIPS_GOT_HI16",E,E,N,N],[17,"R_MIPS_GOT_LO16",E,E,N,N],[17,"R_MIPS_SUB",E,E,N,N],[17,"R_MIPS_INSERT_A",E,E,N,N],[17,"R_MIPS_INSERT_B",E,E,N,N],[17,"R_MIPS_DELETE",E,E,N,N],[17,"R_MIPS_HIGHER",E,E,N,N],[17,"R_MIPS_HIGHEST",E,E,N,N],[17,"R_MIPS_CALL_HI16",E,E,N,N],[17,"R_MIPS_CALL_LO16",E,E,N,N],[17,"R_MIPS_SCN_DISP",E,E,N,N],[17,"R_MIPS_REL16",E,E,N,N],[17,"R_MIPS_ADD_IMMEDIATE",E,E,N,N],[17,"R_MIPS_PJUMP",E,E,N,N],[17,"R_MIPS_RELGOT",E,E,N,N],[17,"R_MIPS_JALR",E,E,N,N],[17,"R_MIPS_TLS_DTPMOD32",E,"Module number 32 bit",N,N],[17,"R_MIPS_TLS_DTPREL32",E,"Module-relative offset 32 bit",N,N],[17,"R_MIPS_TLS_DTPMOD64",E,"Module number 64 bit",N,N],[17,"R_MIPS_TLS_DTPREL64",E,"Module-relative offset 64 bit",N,N],[17,"R_MIPS_TLS_GD",E,"16 bit GOT offset for GD",N,N],[17,"R_MIPS_TLS_LDM",E,"16 bit GOT offset for LDM",N,N],[17,"R_MIPS_TLS_DTPREL_HI16",E,"Module-relative offset, high 16 bits",N,N],[17,"R_MIPS_TLS_DTPREL_LO16",E,"Module-relative offset, low 16 bits",N,N],[17,"R_MIPS_TLS_GOTTPREL",E,"16 bit GOT offset for IE",N,N],[17,"R_MIPS_TLS_TPREL32",E,"TP-relative offset, 32 bit6",N,N],[17,"R_MIPS_TLS_TPREL64",E,R[208],N,N],[17,"R_MIPS_TLS_TPREL_HI16",E,"TP-relative offset, high 16 bits",N,N],[17,"R_MIPS_TLS_TPREL_LO16",E,"TP-relative offset, low 16 bits",N,N],[17,"R_MIPS_GLOB_DAT",E,E,N,N],[17,"R_MIPS_COPY",E,E,N,N],[17,"R_MIPS_JUMP_SLOT",E,E,N,N],[17,"R_MIPS_NUM",E,E,N,N],[17,"R_RISCV_NONE",E,"None",N,N],[17,"R_RISCV_32",E,"Runtime relocation: word32 = S + A",N,N],[17,"R_RISCV_64",E,"Runtime relocation: word64 = S + A",N,N],[17,"R_RISCV_RELATIVE",E,"Runtime relocation: word32,64 = B + A",N,N],[17,"R_RISCV_COPY",E,"Runtime relocation: must be in executable, not allowed in…",N,N],[17,"R_RISCV_JUMP_SLOT",E,"Runtime relocation: word32,64 = S; handled by PLT unless…",N,N],[17,"R_RISCV_TLS_DTPMOD32",E,"TLS relocation: word32 = S->TLSINDEX",N,N],[17,"R_RISCV_TLS_DTPMOD64",E,"TLS relocation: word64 = S->TLSINDEX",N,N],[17,"R_RISCV_TLS_DTPREL32",E,"TLS relocation: word32 = TLS + S + A - TLS_TP_OFFSET",N,N],[17,"R_RISCV_TLS_DTPREL64",E,"TLS relocation: word64 = TLS + S + A - TLS_TP_OFFSET",N,N],[17,"R_RISCV_TLS_TPREL32",E,"TLS relocation: word32 = TLS + S + A + S_TLS_OFFSET -…",N,N],[17,"R_RISCV_TLS_TPREL64",E,"TLS relocation: word64 = TLS + S + A + S_TLS_OFFSET -…",N,N],[17,"R_RISCV_BRANCH",E,"PC-relative branch (SB-Type)",N,N],[17,"R_RISCV_JAL",E,"PC-relative jump (UJ-Type)",N,N],[17,"R_RISCV_CALL",E,"PC-relative call: MACRO call,tail (auipc+jalr pair)",N,N],[17,"R_RISCV_CALL_PLT",E,"PC-relative call (PLT): MACRO call,tail (auipc+jalr pair)…",N,N],[17,"R_RISCV_GOT_HI20",E,"PC-relative GOT reference: MACRO la",N,N],[17,"R_RISCV_TLS_GOT_HI20",E,"PC-relative TLS IE GOT offset: MACRO la.tls.ie",N,N],[17,"R_RISCV_TLS_GD_HI20",E,"PC-relative TLS GD reference: MACRO la.tls.gd",N,N],[17,"R_RISCV_PCREL_HI20",E,"PC-relative reference: %pcrel_hi(symbol) (U-Type)",N,N],[17,"R_RISCV_PCREL_LO12_I",E,"PC-relative reference: %pcrel_lo(symbol) (I-Type)",N,N],[17,"R_RISCV_PCREL_LO12_S",E,"PC-relative reference: %pcrel_lo(symbol) (S-Type)",N,N],[17,"R_RISCV_HI20",E,"Absolute address: %hi(symbol) (U-Type)",N,N],[17,"R_RISCV_LO12_I",E,"Absolute address: %lo(symbol) (I-Type)",N,N],[17,"R_RISCV_LO12_S",E,"Absolute address: %lo(symbol) (S-Type)",N,N],[17,"R_RISCV_TPREL_HI20",E,"TLS LE thread offset: %tprel_hi(symbol) (U-Type)",N,N],[17,"R_RISCV_TPREL_LO12_I",E,"TLS LE thread offset: %tprel_lo(symbol) (I-Type)",N,N],[17,"R_RISCV_TPREL_LO12_S",E,"TLS LE thread offset: %tprel_lo(symbol) (S-Type)",N,N],[17,"R_RISCV_TPREL_ADD",E,"TLS LE thread usage: %tprel_add(symbol)",N,N],[17,"R_RISCV_ADD8",E,"8-bit label addition: word8 = S + A",N,N],[17,"R_RISCV_ADD16",E,"16-bit label addition: word16 = S + A",N,N],[17,"R_RISCV_ADD32",E,"32-bit label addition: word32 = S + A",N,N],[17,"R_RISCV_ADD64",E,"64-bit label addition: word64 = S + A",N,N],[17,"R_RISCV_SUB8",E,"8-bit label subtraction: word8 = S - A",N,N],[17,"R_RISCV_SUB16",E,"16-bit label subtraction: word16 = S - A",N,N],[17,"R_RISCV_SUB32",E,"32-bit label subtraction: word32 = S - A",N,N],[17,"R_RISCV_SUB64",E,"64-bit label subtraction: word64 = S - A",N,N],[17,"R_RISCV_GNU_VTINHERIT",E,"GNU C++ vtable hierarchy",N,N],[17,"R_RISCV_GNU_VTENTRY",E,"GNU C++ vtable member usage",N,N],[17,"R_RISCV_ALIGN",E,"Alignment statement",N,N],[17,"R_RISCV_RVC_BRANCH",E,"PC-relative branch offset (CB-Type)",N,N],[17,"R_RISCV_RVC_JUMP",E,"PC-relative jump offset (CJ-Type)",N,N],[17,"R_RISCV_RVC_LUI",E,"Absolute address (CI-Type)",N,N],[17,"R_RISCV_GPREL_I",E,"GP-relative reference (I-Type)",N,N],[17,"R_RISCV_GPREL_S",E,"GP-relative reference (S-Type)",N,N],[17,"R_RISCV_TPREL_I",E,"TP-relative TLS LE load (I-Type)",N,N],[17,"R_RISCV_TPREL_S",E,"TP-relative TLS LE store (S-Type)",N,N],[17,"R_RISCV_RELAX",E,"Instruction pair can be relaxed",N,N],[17,"R_RISCV_SUB6",E,R[209],N,N],[17,"R_RISCV_SET6",E,R[209],N,N],[17,"R_RISCV_SET8",E,R[209],N,N],[17,"R_RISCV_SET16",E,R[209],N,N],[17,"R_RISCV_SET32",E,R[209],N,N],[11,"size",E,E,32,[[["ctx"],["bool"]],[R[6]]]],[11,"parse",E,"Parse a REL or RELA section of size `filesz` from `offset`.",37,[[[R[6]],["ctx"],["bool"]],[[R[2],[R[210]]],[R[210]]]]],[11,"get",E,"Try to parse a single relocation from the binary, at…",37,[[["self"],[R[6]]],[[R[7],["reloc"]],["reloc"]]]],[11,"len",E,"The number of relocations in the section.",37,[[["self"]],[R[6]]]],[11,R[380],E,"Returns true if section has no relocations.",37,[[["self"]],["bool"]]],[11,"iter",E,"Iterate over all relocations.",37,[[["self"]],["relociterator"]]],[11,"to_vec",E,"Parse all relocations into a vector.",37,[[["self"]],[["reloc"],["vec",["reloc"]]]]],[0,"note",R[45],E,N,N],[3,"Nhdr32",R[426],R[211],N,N],[12,"n_namesz",E,R[212],38,N],[12,"n_descsz",E,"Length of the note's descriptor",38,N],[12,"n_type",E,"Type of the note",38,N],[3,"Nhdr64",E,R[211],N,N],[12,"n_namesz",E,R[212],39,N],[12,"n_descsz",E,"Length of the note's descriptor.",39,N],[12,"n_type",E,"Type of the note.",39,N],[3,R[492],E,"An iterator over ELF binary notes in a note section or…",N,N],[12,"data",E,E,40,N],[12,"size",E,E,40,N],[12,"offset",E,E,40,N],[12,"ctx",E,E,40,N],[3,R[493],E,"An iterator over ELF binary notes",N,N],[12,"iters",E,E,41,N],[12,"index",E,E,41,N],[3,"Note",E,"A 32/64 bit Note struct, with the name and desc pre-parsed",N,N],[12,"n_type",E,"The type of this note",42,N],[12,"name",E,"NUL terminated string, where `namesz` includes the…",42,N],[12,"desc",E,"arbitrary data of length `descsz`",42,N],[17,"NT_GNU_ABI_TAG",E,"ABI information.",N,N],[17,"ELF_NOTE_ABI",E,"Old name",N,N],[17,"ELF_NOTE_OS_LINUX",E,E,N,N],[17,"ELF_NOTE_OS_GNU",E,E,N,N],[17,"ELF_NOTE_OS_SOLARIS2",E,E,N,N],[17,"ELF_NOTE_OS_FREEBSD",E,E,N,N],[17,"NT_GNU_HWCAP",E,"Synthetic `hwcap` information.",N,N],[17,"NT_GNU_BUILD_ID",E,"Build ID bits as generated by ld --build-id.",N,N],[17,"NT_GNU_GOLD_VERSION",E,"Version note generated by GNU gold containing a version…",N,N],[11,R[213],E,E,42,[[["self"]],["str"]]],[6,"Header",R[45],E,N,N],[6,R[46],E,E,N,N],[6,R[71],E,E,N,N],[6,"Symtab",E,E,N,N],[6,"Sym",E,E,N,N],[6,"Dyn",E,E,N,N],[6,"Dynamic",E,E,N,N],[6,"Reloc",E,E,N,N],[6,R[214],E,E,N,N],[6,"ProgramHeaders",E,E,N,N],[6,"SectionHeaders",E,E,N,N],[6,"ShdrIdx",E,E,N,N],[11,"iter_note_headers",E,"Try to iterate notes in PT_NOTE program headers; returns…",8,[[["self"]],[[R[215]],[R[7],[R[215]]]]]],[11,"iter_note_sections",E,"Try to iterate notes in SHT_NOTE sections; returns `None`…",8,[[[R[7],["str"]],["str"],["self"]],[[R[215]],[R[7],[R[215]]]]]],[11,R[325],E,E,8,[[["self"]],["bool"]]],[11,"parse",E,"Parses the contents of the byte stream in `bytes`, and…",8,[[],[R[2]]]],[0,"elf32",R[4],"The ELF 32-bit struct definitions and associated values,…",N,N],[0,R[146],"goblin::elf32",E,N,N],[3,"GnuHash",R[427],E,N,N],[5,"hash",E,R[216],N,[[["str"]],["u32"]]],[11,"new",E,E,43,[[[R[6]]],["gnuhash"]]],[11,"find",E,R[217],43,[[["str"],["u32"],[R[5]],["self"]],[["sym"],[R[7],["sym"]]]]],[0,"elf64",R[4],"The ELF 64-bit struct definitions and associated values,…",N,N],[0,R[146],"goblin::elf64",E,N,N],[3,"GnuHash",R[428],E,N,N],[5,"hash",E,R[216],N,[[["str"]],["u32"]]],[11,"new",E,E,44,[[[R[6]]],["gnuhash"]]],[11,"find",E,R[217],44,[[["str"],["u32"],[R[5]],["self"]],[["sym"],[R[7],["sym"]]]]],[0,"mach",R[4],"The Mach-o, mostly zero-copy, binary format parser and raw…",N,N],[3,"MachO",R[230],"A cross-platform, zero-copy, endian-aware, 32/64 bit…",N,N],[12,R[16],E,"The mach-o header",45,N],[12,"load_commands",E,"The load commands tell the kernel and dynamic linker how…",45,N],[12,"segments",E,"The load command \"segments\" - typically the pieces of the…",45,N],[12,R[315],E,"The \"Nlist\" style symbols in this binary - strippable",45,N],[12,"libs",E,"The dylibs this library depends on",45,N],[12,"entry",E,"The entry point (as a virtual memory address), 0 if none",45,N],[12,"old_style_entry",E,"Whether `entry` refers to an older `LC_UNIXTHREAD` instead…",45,N],[12,"name",E,"The name of the dylib, if any",45,N],[12,R[218],E,"Are we a little-endian binary?",45,N],[12,"is_64",E,"Are we a 64-bit binary",45,N],[3,R[494],E,"A Mach-o multi architecture (Fat) binary container",N,N],[12,"narches",E,E,46,N],[3,R[584],E,"Iterator over the fat architecture headers in a…",N,N],[3,R[585],E,"Iterator over every `MachO` binary contained in this…",N,N],[4,"Mach",E,"Either a collection of multiple architectures, or a single…",N,N],[13,"Fat",E,"A \"fat\" multi-architecture binary container",47,N],[13,"Binary",E,"A regular Mach-o binary",47,N],[5,"peek",E,"Returns a big endian magical number",N,[[[R[6]]],[[R[2],["u32"]],["u32"]]]],[5,"parse_magic_and_ctx",E,"Parses a magic number, and an accompanying mach-o binary…",N,[[[R[6]]],[R[2]]]],[0,R[16],E,"A header contains minimal architecture information, the…",N,N],[3,"Header32",R[429],"A 32-bit Mach-o header",N,N],[12,"magic",E,R[219],48,N],[12,R[231],E,R[220],48,N],[12,R[221],E,R[222],48,N],[12,R[227],E,R[223],48,N],[12,"ncmds",E,R[224],48,N],[12,R[225],E,R[226],48,N],[12,"flags",E,"flags",48,N],[3,"Header64",E,"A 64-bit Mach-o header",N,N],[12,"magic",E,R[219],49,N],[12,R[231],E,R[220],49,N],[12,R[221],E,R[222],49,N],[12,R[227],E,R[223],49,N],[12,"ncmds",E,R[224],49,N],[12,R[225],E,R[226],49,N],[12,"flags",E,"flags",49,N],[12,R[252],E,E,49,N],[3,"Header",E,"Generic sized header",N,N],[12,"magic",E,E,50,N],[12,R[231],E,E,50,N],[12,R[221],E,E,50,N],[12,R[227],E,R[223],50,N],[12,"ncmds",E,R[224],50,N],[12,R[225],E,R[226],50,N],[12,"flags",E,"flags",50,N],[12,R[252],E,E,50,N],[5,"flag_to_str",E,E,N,[[["u32"]],["str"]]],[5,"filetype_to_str",E,E,N,[[["u32"]],["str"]]],[17,"MH_NOUNDEFS",E,"the object file has no undefined references",N,N],[17,"MH_INCRLINK",E,"the object file is the output of an incremental link…",N,N],[17,"MH_DYLDLINK",E,"the object file is input for the dynamic linker and can't…",N,N],[17,"MH_BINDATLOAD",E,"the object file's undefined references are bound by the…",N,N],[17,"MH_PREBOUND",E,"the file has its dynamic undefined references prebound.",N,N],[17,"MH_SPLIT_SEGS",E,"the file has its read-only and read-write segments split",N,N],[17,"MH_LAZY_INIT",E,"the shared library init routine is to be run lazily via…",N,N],[17,"MH_TWOLEVEL",E,"the image is using two-level name space bindings",N,N],[17,"MH_FORCE_FLAT",E,"the executable is forcing all images to use flat name…",N,N],[17,"MH_NOMULTIDEFS",E,"this umbrella guarantees no multiple defintions of symbols…",N,N],[17,"MH_NOFIXPREBINDING",E,"do not have dyld notify the prebinding agent about this…",N,N],[17,"MH_PREBINDABLE",E,"the binary is not prebound but can have its prebinding…",N,N],[17,"MH_ALLMODSBOUND",E,"indicates that this binary binds to all two-level…",N,N],[17,"MH_SUBSECTIONS_VIA_SYMBOLS",E,"safe to divide up the sections into sub-sections via…",N,N],[17,"MH_CANONICAL",E,"the binary has been canonicalized via the unprebind…",N,N],[17,"MH_WEAK_DEFINES",E,"the final linked image contains external weak symbols",N,N],[17,"MH_BINDS_TO_WEAK",E,"the final linked image uses weak symbols",N,N],[17,"MH_ALLOW_STACK_EXECUTION",E,"When this bit is set, all stacks in the task will be given…",N,N],[17,"MH_ROOT_SAFE",E,R[228],N,N],[17,"MH_SETUID_SAFE",E,R[228],N,N],[17,"MH_NO_REEXPORTED_DYLIBS",E,"When this bit is set on a dylib, the static linker does…",N,N],[17,"MH_PIE",E,"When this bit is set, the OS will load the main executable…",N,N],[17,"MH_DEAD_STRIPPABLE_DYLIB",E,"Only for use on dylibs. When linking against a dylib that…",N,N],[17,"MH_HAS_TLV_DESCRIPTORS",E,"Contains a section of type S_THREAD_LOCAL_VARIABLES",N,N],[17,"MH_NO_HEAP_EXECUTION",E,"When this bit is set, the OS will run the main executable…",N,N],[17,"MH_APP_EXTENSION_SAFE",E,"The code was linked for use in an application extension.",N,N],[17,"MH_MAGIC",E,"Mach Header magic constant",N,N],[17,"MH_CIGAM",E,E,N,N],[17,"MH_MAGIC_64",E,"Mach Header magic constant for 64-bit",N,N],[17,"MH_CIGAM_64",E,E,N,N],[17,"MH_OBJECT",E,"relocatable object file",N,N],[17,"MH_EXECUTE",E,"demand paged executable file",N,N],[17,"MH_FVMLIB",E,"fixed VM shared library file",N,N],[17,"MH_CORE",E,"core file",N,N],[17,"MH_PRELOAD",E,"preloaded executable file",N,N],[17,"MH_DYLIB",E,"dynamically bound shared library",N,N],[17,"MH_DYLINKER",E,"dynamic link editor",N,N],[17,"MH_BUNDLE",E,"dynamically bound bundle file",N,N],[17,"MH_DYLIB_STUB",E,"shared library stub for static linking only, no section…",N,N],[17,"MH_DSYM",E,"companion file with only debug sections",N,N],[17,"MH_KEXT_BUNDLE",E,"x86_64 kexts",N,N],[17,"SIZEOF_HEADER_32",E,E,N,N],[17,"SIZEOF_HEADER_64",E,E,N,N],[11,R[41],E,R[229],48,[[],["self"]]],[11,"size",E,E,48,[[["self"]],[R[6]]]],[11,R[41],E,R[229],49,[[],["self"]]],[11,"size",E,E,49,[[["self"]],[R[6]]]],[11,"new",E,E,50,[[["ctx"]],["self"]]],[11,R[231],E,R[237],50,[[["self"]],[R[231]]]],[11,R[221],E,R[238],50,[[["self"]],[R[221]]]],[11,"cpu_caps",E,R[239],50,[[["self"]],["u32"]]],[0,"constants",R[230],"Miscellaneous constants used inside of and when…",N,N],[0,R[231],R[233],E,N,N],[5,"get_arch_from_flag","goblin::mach::constants::cputype","Get the cputype and cpusubtype from a name",N,[[["str"]],[R[7]]]],[5,"get_arch_name_from_types",E,"Get the architecture name from cputype and cpusubtype",N,[[[R[221]],[R[231]]],[[R[7],["str"]],["str"]]]],[6,"CpuType",E,R[232],N,N],[6,"CpuSubType",E,R[232],N,N],[17,"CPU_SUBTYPE_MASK",E,"the mask for CPU feature flags",N,N],[17,"CPU_ARCH_MASK",E,"mask for architecture bits",N,N],[17,"CPU_ARCH_ABI64",E,"the mask for 64 bit ABI",N,N],[17,"CPU_ARCH_ABI64_32",E,"the mask for ILP32 ABI on 64 bit hardware",N,N],[17,"CPU_TYPE_ANY",E,E,N,N],[17,"CPU_TYPE_VAX",E,E,N,N],[17,"CPU_TYPE_MC680X0",E,E,N,N],[17,"CPU_TYPE_X86",E,E,N,N],[17,"CPU_TYPE_I386",E,E,N,N],[17,"CPU_TYPE_X86_64",E,E,N,N],[17,"CPU_TYPE_MIPS",E,E,N,N],[17,"CPU_TYPE_MC98000",E,E,N,N],[17,"CPU_TYPE_HPPA",E,E,N,N],[17,"CPU_TYPE_ARM",E,E,N,N],[17,"CPU_TYPE_ARM64",E,E,N,N],[17,"CPU_TYPE_ARM64_32",E,E,N,N],[17,"CPU_TYPE_MC88000",E,E,N,N],[17,"CPU_TYPE_SPARC",E,E,N,N],[17,"CPU_TYPE_I860",E,E,N,N],[17,"CPU_TYPE_ALPHA",E,E,N,N],[17,"CPU_TYPE_POWERPC",E,E,N,N],[17,"CPU_TYPE_POWERPC64",E,E,N,N],[17,"CPU_SUBTYPE_MULTIPLE",E,E,N,N],[17,"CPU_SUBTYPE_LITTLE_ENDIAN",E,E,N,N],[17,"CPU_SUBTYPE_BIG_ENDIAN",E,E,N,N],[17,"CPU_SUBTYPE_VAX_ALL",E,E,N,N],[17,"CPU_SUBTYPE_VAX780",E,E,N,N],[17,"CPU_SUBTYPE_VAX785",E,E,N,N],[17,"CPU_SUBTYPE_VAX750",E,E,N,N],[17,"CPU_SUBTYPE_VAX730",E,E,N,N],[17,"CPU_SUBTYPE_UVAXI",E,E,N,N],[17,"CPU_SUBTYPE_UVAXII",E,E,N,N],[17,"CPU_SUBTYPE_VAX8200",E,E,N,N],[17,"CPU_SUBTYPE_VAX8500",E,E,N,N],[17,"CPU_SUBTYPE_VAX8600",E,E,N,N],[17,"CPU_SUBTYPE_VAX8650",E,E,N,N],[17,"CPU_SUBTYPE_VAX8800",E,E,N,N],[17,"CPU_SUBTYPE_UVAXIII",E,E,N,N],[17,"CPU_SUBTYPE_MC680X0_ALL",E,E,N,N],[17,"CPU_SUBTYPE_MC68030",E,E,N,N],[17,"CPU_SUBTYPE_MC68040",E,E,N,N],[17,"CPU_SUBTYPE_MC68030_ONLY",E,E,N,N],[17,"CPU_SUBTYPE_I386_ALL",E,E,N,N],[17,"CPU_SUBTYPE_386",E,E,N,N],[17,"CPU_SUBTYPE_486",E,E,N,N],[17,"CPU_SUBTYPE_486SX",E,E,N,N],[17,"CPU_SUBTYPE_586",E,E,N,N],[17,"CPU_SUBTYPE_PENT",E,E,N,N],[17,"CPU_SUBTYPE_PENTPRO",E,E,N,N],[17,"CPU_SUBTYPE_PENTII_M3",E,E,N,N],[17,"CPU_SUBTYPE_PENTII_M5",E,E,N,N],[17,"CPU_SUBTYPE_CELERON",E,E,N,N],[17,"CPU_SUBTYPE_CELERON_MOBILE",E,E,N,N],[17,"CPU_SUBTYPE_PENTIUM_3",E,E,N,N],[17,"CPU_SUBTYPE_PENTIUM_3_M",E,E,N,N],[17,"CPU_SUBTYPE_PENTIUM_3_XEON",E,E,N,N],[17,"CPU_SUBTYPE_PENTIUM_M",E,E,N,N],[17,"CPU_SUBTYPE_PENTIUM_4",E,E,N,N],[17,"CPU_SUBTYPE_PENTIUM_4_M",E,E,N,N],[17,"CPU_SUBTYPE_ITANIUM",E,E,N,N],[17,"CPU_SUBTYPE_ITANIUM_2",E,E,N,N],[17,"CPU_SUBTYPE_XEON",E,E,N,N],[17,"CPU_SUBTYPE_XEON_MP",E,E,N,N],[17,"CPU_SUBTYPE_INTEL_FAMILY_MAX",E,E,N,N],[17,"CPU_SUBTYPE_INTEL_MODEL_ALL",E,E,N,N],[17,"CPU_SUBTYPE_X86_ALL",E,E,N,N],[17,"CPU_SUBTYPE_X86_64_ALL",E,E,N,N],[17,"CPU_SUBTYPE_X86_ARCH1",E,E,N,N],[17,"CPU_SUBTYPE_X86_64_H",E,E,N,N],[17,"CPU_SUBTYPE_MIPS_ALL",E,E,N,N],[17,"CPU_SUBTYPE_MIPS_R2300",E,E,N,N],[17,"CPU_SUBTYPE_MIPS_R2600",E,E,N,N],[17,"CPU_SUBTYPE_MIPS_R2800",E,E,N,N],[17,"CPU_SUBTYPE_MIPS_R2000A",E,E,N,N],[17,"CPU_SUBTYPE_MIPS_R2000",E,E,N,N],[17,"CPU_SUBTYPE_MIPS_R3000A",E,E,N,N],[17,"CPU_SUBTYPE_MIPS_R3000",E,E,N,N],[17,"CPU_SUBTYPE_MC98000_ALL",E,E,N,N],[17,"CPU_SUBTYPE_MC98601",E,E,N,N],[17,"CPU_SUBTYPE_HPPA_ALL",E,E,N,N],[17,"CPU_SUBTYPE_HPPA_7100",E,E,N,N],[17,"CPU_SUBTYPE_HPPA_7100LC",E,E,N,N],[17,"CPU_SUBTYPE_MC88000_ALL",E,E,N,N],[17,"CPU_SUBTYPE_MC88100",E,E,N,N],[17,"CPU_SUBTYPE_MC88110",E,E,N,N],[17,"CPU_SUBTYPE_SPARC_ALL",E,E,N,N],[17,"CPU_SUBTYPE_I860_ALL",E,E,N,N],[17,"CPU_SUBTYPE_I860_860",E,E,N,N],[17,"CPU_SUBTYPE_POWERPC_ALL",E,E,N,N],[17,"CPU_SUBTYPE_POWERPC_601",E,E,N,N],[17,"CPU_SUBTYPE_POWERPC_602",E,E,N,N],[17,"CPU_SUBTYPE_POWERPC_603",E,E,N,N],[17,"CPU_SUBTYPE_POWERPC_603E",E,E,N,N],[17,"CPU_SUBTYPE_POWERPC_603EV",E,E,N,N],[17,"CPU_SUBTYPE_POWERPC_604",E,E,N,N],[17,"CPU_SUBTYPE_POWERPC_604E",E,E,N,N],[17,"CPU_SUBTYPE_POWERPC_620",E,E,N,N],[17,"CPU_SUBTYPE_POWERPC_750",E,E,N,N],[17,"CPU_SUBTYPE_POWERPC_7400",E,E,N,N],[17,"CPU_SUBTYPE_POWERPC_7450",E,E,N,N],[17,"CPU_SUBTYPE_POWERPC_970",E,E,N,N],[17,"CPU_SUBTYPE_ARM_ALL",E,E,N,N],[17,"CPU_SUBTYPE_ARM_V4T",E,E,N,N],[17,"CPU_SUBTYPE_ARM_V6",E,E,N,N],[17,"CPU_SUBTYPE_ARM_V5TEJ",E,E,N,N],[17,"CPU_SUBTYPE_ARM_XSCALE",E,E,N,N],[17,"CPU_SUBTYPE_ARM_V7",E,E,N,N],[17,"CPU_SUBTYPE_ARM_V7F",E,E,N,N],[17,"CPU_SUBTYPE_ARM_V7S",E,E,N,N],[17,"CPU_SUBTYPE_ARM_V7K",E,E,N,N],[17,"CPU_SUBTYPE_ARM_V6M",E,E,N,N],[17,"CPU_SUBTYPE_ARM_V7M",E,E,N,N],[17,"CPU_SUBTYPE_ARM_V7EM",E,E,N,N],[17,"CPU_SUBTYPE_ARM_V8",E,E,N,N],[17,"CPU_SUBTYPE_ARM64_ALL",E,E,N,N],[17,"CPU_SUBTYPE_ARM64_V8",E,E,N,N],[17,"CPU_SUBTYPE_ARM64_E",E,E,N,N],[17,"CPU_SUBTYPE_ARM64_32_ALL",E,E,N,N],[17,"CPU_SUBTYPE_ARM64_32_V8",E,E,N,N],[17,"DYLD_MACOSX_VERSION_10_4",R[233],E,N,N],[17,"DYLD_MACOSX_VERSION_10_5",E,E,N,N],[17,"DYLD_MACOSX_VERSION_10_6",E,E,N,N],[17,"DYLD_MACOSX_VERSION_10_7",E,E,N,N],[17,"DYLD_MACOSX_VERSION_10_8",E,E,N,N],[17,"DYLD_MACOSX_VERSION_10_9",E,E,N,N],[17,"DYLD_MACOSX_VERSION_10_10",E,E,N,N],[17,"DYLD_MACOSX_VERSION_10_11",E,E,N,N],[17,"DYLD_MACOSX_VERSION_10_12",E,E,N,N],[17,"DYLD_MACOSX_VERSION_10_13",E,E,N,N],[17,"DYLD_IOS_VERSION_2_0",E,E,N,N],[17,"DYLD_IOS_VERSION_2_1",E,E,N,N],[17,"DYLD_IOS_VERSION_2_2",E,E,N,N],[17,"DYLD_IOS_VERSION_3_0",E,E,N,N],[17,"DYLD_IOS_VERSION_3_1",E,E,N,N],[17,"DYLD_IOS_VERSION_3_2",E,E,N,N],[17,"DYLD_IOS_VERSION_4_0",E,E,N,N],[17,"DYLD_IOS_VERSION_4_1",E,E,N,N],[17,"DYLD_IOS_VERSION_4_2",E,E,N,N],[17,"DYLD_IOS_VERSION_4_3",E,E,N,N],[17,"DYLD_IOS_VERSION_5_0",E,E,N,N],[17,"DYLD_IOS_VERSION_5_1",E,E,N,N],[17,"DYLD_IOS_VERSION_6_0",E,E,N,N],[17,"DYLD_IOS_VERSION_6_1",E,E,N,N],[17,"DYLD_IOS_VERSION_7_0",E,E,N,N],[17,"DYLD_IOS_VERSION_7_1",E,E,N,N],[17,"DYLD_IOS_VERSION_8_0",E,E,N,N],[17,"DYLD_IOS_VERSION_9_0",E,E,N,N],[17,"DYLD_IOS_VERSION_10_0",E,E,N,N],[17,"DYLD_IOS_VERSION_11_0",E,E,N,N],[17,"SECTION_TYPE",E,"256 section types",N,N],[17,"SECTION_ATTRIBUTES",E,"24 section attributes",N,N],[17,"S_REGULAR",E,"regular section",N,N],[17,"S_ZEROFILL",E,"zero fill on demand section",N,N],[17,"S_CSTRING_LITERALS",E,"section with only literal C strings",N,N],[17,"S_4BYTE_LITERALS",E,"section with only 4 byte literals",N,N],[17,"S_8BYTE_LITERALS",E,"section with only 8 byte literals",N,N],[17,"S_LITERAL_POINTERS",E,"section with only pointers to",N,N],[17,"S_NON_LAZY_SYMBOL_POINTERS",E,"section with only non-lazy symbol pointers",N,N],[17,"S_LAZY_SYMBOL_POINTERS",E,"section with only lazy symbol pointers",N,N],[17,"S_SYMBOL_STUBS",E,"section with only symbol stubs, byte size of stub in the…",N,N],[17,"S_MOD_INIT_FUNC_POINTERS",E,"section with only function pointers for initialization",N,N],[17,"S_MOD_TERM_FUNC_POINTERS",E,"section with only function pointers for termination",N,N],[17,"S_COALESCED",E,"section contains symbols that are to be coalesced",N,N],[17,"S_GB_ZEROFILL",E,"zero fill on demand section that can be larger than 4…",N,N],[17,"S_INTERPOSING",E,"section with only pairs of function pointers for interposing",N,N],[17,"S_16BYTE_LITERALS",E,"section with only 16 byte literals",N,N],[17,"S_DTRACE_DOF",E,"section contains DTrace Object Format",N,N],[17,"S_LAZY_DYLIB_SYMBOL_POINTERS",E,"section with only lazy symbol pointers to lazy loaded dylibs",N,N],[17,"S_THREAD_LOCAL_REGULAR",E,R[234],N,N],[17,"S_THREAD_LOCAL_ZEROFILL",E,R[234],N,N],[17,"S_THREAD_LOCAL_VARIABLES",E,"TLV descriptors",N,N],[17,"S_THREAD_LOCAL_VARIABLE_POINTERS",E,"pointers to TLV  descriptors",N,N],[17,"S_THREAD_LOCAL_INIT_FUNCTION_POINTERS",E,"functions to call to initialize TLV values",N,N],[17,"SECTION_ATTRIBUTES_USR",E,"User setable attributes",N,N],[17,"S_ATTR_PURE_INSTRUCTIONS",E,"section contains only true machine instructions",N,N],[17,"S_ATTR_NO_TOC",E,"section contains coalesced symbols that are not to be in a…",N,N],[17,"S_ATTR_STRIP_STATIC_SYMS",E,"ok to strip static symbols in this section in files with…",N,N],[17,"S_ATTR_NO_DEAD_STRIP",E,"no dead stripping",N,N],[17,"S_ATTR_LIVE_SUPPORT",E,"blocks are live if they reference live blocks",N,N],[17,"S_ATTR_SELF_MODIFYING_CODE",E,"Used with i386 code stubs written on by dyld",N,N],[17,"S_ATTR_DEBUG",E,"debug section",N,N],[17,"SECTION_ATTRIBUTES_SYS",E,"system setable attributes",N,N],[17,"S_ATTR_SOME_INSTRUCTIONS",E,"section contains some machine instructions",N,N],[17,"S_ATTR_EXT_RELOC",E,"section has external relocation entries",N,N],[17,"S_ATTR_LOC_RELOC",E,"section has local relocation entries",N,N],[17,"SEG_PAGEZERO",E,"the pagezero segment which has no protections and catches…",N,N],[17,"SEG_TEXT",E,"the tradition UNIX text segment",N,N],[17,"SECT_TEXT",E,"the real text part of the text section no headers, and no…",N,N],[17,"SECT_FVMLIB_INIT0",E,"the fvmlib initialization section",N,N],[17,"SECT_FVMLIB_INIT1",E,"the section following the fvmlib initialization section",N,N],[17,"SEG_DATA",E,"the tradition UNIX data segment",N,N],[17,"SECT_DATA",E,"the real initialized data section no padding, no bss overlap",N,N],[17,"SECT_BSS",E,"the real uninitialized data sectionno padding",N,N],[17,"SECT_COMMON",E,"the section common symbols are allocated in by the link…",N,N],[17,"SEG_OBJC",E,"objective-C runtime segment",N,N],[17,"SECT_OBJC_SYMBOLS",E,"symbol table",N,N],[17,"SECT_OBJC_MODULES",E,"module information",N,N],[17,"SECT_OBJC_STRINGS",E,R[235],N,N],[17,"SECT_OBJC_REFS",E,R[235],N,N],[17,"SEG_ICON",E,"the icon segment",N,N],[17,"SECT_ICON_HEADER",E,"the icon headers",N,N],[17,"SECT_ICON_TIFF",E,"the icons in tiff format",N,N],[17,"SEG_LINKEDIT",E,"the segment containing all structs created and maintained…",N,N],[17,"SEG_UNIXSTACK",E,"the unix stack segment",N,N],[17,"SEG_IMPORT",E,"the segment for the self (dyld) modifing code stubs that…",N,N],[17,"VM_PROT_READ",E,"Segment is readable.",N,N],[17,"VM_PROT_WRITE",E,"Segment is writable.",N,N],[17,"VM_PROT_EXECUTE",E,"Segment is executable.",N,N],[0,"fat",R[230],"A Mach-o fat binary is a multi-architecture binary container",N,N],[3,R[495],R[430],"The Mach-o `FatHeader` always has its data bigendian",N,N],[12,"magic",E,"The magic number, `cafebabe`",51,N],[12,"nfat_arch",E,"How many fat architecture headers there are",51,N],[3,"FatArch",E,"The Mach-o `FatArch` always has its data bigendian",N,N],[12,R[231],E,"What kind of CPU this binary is",52,N],[12,R[221],E,E,52,N],[12,"offset",E,"Where in the fat binary it starts",52,N],[12,"size",E,"How big the binary is",52,N],[12,"align",E,E,52,N],[17,"FAT_MAGIC",E,E,N,N],[17,"FAT_CIGAM",E,E,N,N],[17,"SIZEOF_FAT_HEADER",E,E,N,N],[17,"SIZEOF_FAT_ARCH",E,E,N,N],[11,R[41],E,"Reinterpret a `FatHeader` from `bytes`",51,[[],[R[236]]]],[11,R[50],E,"Reads a `FatHeader` from a `File` on disk",51,[[["file"]],[[R[236]],[R[2],[R[236]]]]]],[11,"parse",E,"Parse a mach-o fat header from the `bytes`",51,[[],[[R[236]],[R[2],[R[236]]]]]],[11,"slice",E,"Get the slice of bytes this header describes from `bytes`",52,[[["self"]]]],[11,R[231],E,R[237],52,[[["self"]],[R[231]]]],[11,R[221],E,R[238],52,[[["self"]],[R[221]]]],[11,"cpu_caps",E,R[239],52,[[["self"]],["u32"]]],[11,"is_64",E,"Whether this fat architecture header describes a 64-bit…",52,[[["self"]],["bool"]]],[11,"parse",E,"Parse a `FatArch` header from `bytes` at `offset`",52,[[[R[6]]],[R[2]]]],[0,"load_command",R[230],"Load commands tell the kernel and dynamic linker anything…",N,N],[3,R[496],R[431],"Occurs at the beginning of every load command to serve as…",N,N],[12,"cmd",E,E,53,N],[12,R[255],E,E,53,N],[3,R[497],E,E,N,N],[12,R[320],E,R[240],54,N],[12,R[322],E,R[241],54,N],[12,"addr",E,R[242],54,N],[12,"size",E,R[243],54,N],[12,"offset",E,R[244],54,N],[12,"align",E,R[245],54,N],[12,"reloff",E,R[246],54,N],[12,"nreloc",E,R[247],54,N],[12,"flags",E,"flags (section type and attributes)",54,N],[12,R[248],E,R[249],54,N],[12,R[250],E,R[251],54,N],[3,R[498],E,"for 64-bit architectures",N,N],[12,R[320],E,R[240],55,N],[12,R[322],E,R[241],55,N],[12,"addr",E,R[242],55,N],[12,"size",E,R[243],55,N],[12,"offset",E,R[244],55,N],[12,"align",E,R[245],55,N],[12,"reloff",E,R[246],55,N],[12,"nreloc",E,R[247],55,N],[12,"flags",E,R[321],55,N],[12,R[248],E,R[249],55,N],[12,R[250],E,R[251],55,N],[12,R[258],E,R[252],55,N],[3,R[499],E,E,N,N],[12,"cmd",E,E,56,N],[12,R[255],E,E,56,N],[12,R[322],E,E,56,N],[12,"vmaddr",E,E,56,N],[12,"vmsize",E,E,56,N],[12,"fileoff",E,E,56,N],[12,R[323],E,E,56,N],[12,"maxprot",E,E,56,N],[12,R[324],E,E,56,N],[12,"nsects",E,E,56,N],[12,"flags",E,E,56,N],[3,R[500],E,E,N,N],[12,"cmd",E,E,57,N],[12,R[255],E,E,57,N],[12,R[322],E,E,57,N],[12,"vmaddr",E,E,57,N],[12,"vmsize",E,E,57,N],[12,"fileoff",E,E,57,N],[12,R[323],E,E,57,N],[12,"maxprot",E,E,57,N],[12,R[324],E,E,57,N],[12,"nsects",E,E,57,N],[12,"flags",E,E,57,N],[3,"Fvmlib",E,"Fixed virtual memory shared libraries are identified by…",N,N],[12,"name",E,"library's target pathname",58,N],[12,R[368],E,"library's minor version number",58,N],[12,R[294],E,"library's header address",58,N],[3,R[501],E,"A fixed virtual shared library (fipub constype ==…",N,N],[12,"cmd",E,"LC_IDFVMLIB or LC_LOADFVMLIB",59,N],[12,R[255],E,R[253],59,N],[12,"fvmlib",E,R[254],59,N],[3,"Dylib",E,"A dynamically linked shared library (fipub constype ==…",N,N],[12,"name",E,R[256],60,N],[12,R[400],E,"library's build time stamp",60,N],[12,"current_version",E,"library's current version number",60,N],[12,"compatibility_version",E,"library's compatibility vers number",60,N],[3,R[502],E,E,N,N],[12,"cmd",E,"LC_ID_DYLIB, LC_LOAD_DYLIB, LC_LOAD_WEAK_DYLIB,…",61,N],[12,R[255],E,R[253],61,N],[12,"dylib",E,R[254],61,N],[3,R[503],E,"A dynamically linked shared library may be a subframework…",N,N],[12,"cmd",E,R[299],62,N],[12,R[255],E,"includes umbrella string",62,N],[12,"umbrella",E,"the umbrella framework name",62,N],[3,R[504],E,"For dynamically linked shared libraries that are…",N,N],[12,"cmd",E,R[301],63,N],[12,R[255],E,"includes client string",63,N],[12,"client",E,"the client name",63,N],[3,R[505],E,"A dynamically linked shared library may be a sub_umbrella…",N,N],[12,"cmd",E,R[300],64,N],[12,R[255],E,"includes sub_umbrella string",64,N],[12,"sub_umbrella",E,"the sub_umbrella framework name",64,N],[3,R[506],E,"A dynamically linked shared library may be a sub_library…",N,N],[12,"cmd",E,R[302],65,N],[12,R[255],E,"includes sub_library string",65,N],[12,"sub_library",E,"the sub_library name",65,N],[3,R[507],E,"A program (type == MH_EXECUTE) that is prebound to its…",N,N],[12,"cmd",E,R[297],66,N],[12,R[255],E,"includes strings",66,N],[12,"name",E,R[256],66,N],[12,"nmodules",E,"number of modules in library",66,N],[12,"linked_modules",E,"bit vector of linked modules",66,N],[3,R[508],E,"The name of the dynamic linker",N,N],[12,"cmd",E,E,67,N],[12,R[255],E,E,67,N],[12,"name",E,E,67,N],[3,R[509],E,"Thread commands contain machine-specific data structures…",N,N],[12,"cmd",E,"LC_THREAD or  LC_UNIXTHREAD",68,N],[12,R[255],E,R[257],68,N],[12,"flavor",E,"flavor of thread state (but you also need to know the…",68,N],[12,"count",E,"number of elements in `thread_state` that are valid",68,N],[12,"thread_state",E,"The raw thread state, details of which varies by CPU",68,N],[3,R[510],E,"The routines command contains the address of the dynamic…",N,N],[12,"cmd",E,R[298],69,N],[12,R[255],E,R[257],69,N],[12,R[259],E,R[260],69,N],[12,R[261],E,R[262],69,N],[12,R[248],E,E,69,N],[12,R[250],E,E,69,N],[12,R[258],E,E,69,N],[12,R[263],E,E,69,N],[12,R[264],E,E,69,N],[12,R[265],E,E,69,N],[3,R[511],E,"The 64-bit routines command.  Same use as above.",N,N],[12,"cmd",E,R[305],70,N],[12,R[255],E,R[257],70,N],[12,R[259],E,R[260],70,N],[12,R[261],E,R[262],70,N],[12,R[248],E,E,70,N],[12,R[250],E,E,70,N],[12,R[258],E,E,70,N],[12,R[263],E,E,70,N],[12,R[264],E,E,70,N],[12,R[265],E,E,70,N],[3,R[512],E,E,N,N],[12,"cmd",E,E,71,N],[12,R[255],E,E,71,N],[12,"symoff",E,E,71,N],[12,"nsyms",E,E,71,N],[12,"stroff",E,E,71,N],[12,"strsize",E,E,71,N],[3,R[513],E,"This is the second set of the symbolic information which…",N,N],[12,"cmd",E,E,72,N],[12,R[255],E,E,72,N],[12,R[269],E,"index to local symbols",72,N],[12,R[270],E,R[271],72,N],[12,R[266],E,"index to externally defined symbols",72,N],[12,R[267],E,R[268],72,N],[12,"iundefsym",E,"index to undefined symbols",72,N],[12,"nundefsym",E,"number of undefined symbols",72,N],[12,"tocoff",E,"file offset to table of contents",72,N],[12,"ntoc",E,"number of entries in table of contents",72,N],[12,"modtaboff",E,"file offset to module table",72,N],[12,"nmodtab",E,"number of module table entries",72,N],[12,"extrefsymoff",E,"offset to referenced symbol table",72,N],[12,"nextrefsyms",E,"number of referenced symbol table entries",72,N],[12,"indirectsymoff",E,"file offset to the indirect symbol table",72,N],[12,"nindirectsyms",E,"number of indirect symbol table entries",72,N],[12,"extreloff",E,"offset to external relocation entries",72,N],[12,"nextrel",E,R[272],72,N],[12,"locreloff",E,"offset to local relocation entries",72,N],[12,"nlocrel",E,"number of local relocation entries",72,N],[3,R[514],E,"a table of contents entry",N,N],[12,"symbol_index",E,"the defined external symbol (index into the symbol table)",73,N],[12,"module_index",E,"index into the module table this symbol is defined in",73,N],[3,R[515],E,"a module table entry",N,N],[12,R[273],E,R[274],74,N],[12,R[266],E,R[275],74,N],[12,R[267],E,R[268],74,N],[12,"irefsym",E,R[276],74,N],[12,"nrefsym",E,R[277],74,N],[12,R[269],E,R[278],74,N],[12,R[270],E,R[271],74,N],[12,"iextrel",E,R[279],74,N],[12,"nextrel",E,R[272],74,N],[12,R[280],E,R[281],74,N],[12,R[282],E,R[283],74,N],[12,R[286],E,"the (__OBJC,_module_info) section",74,N],[12,R[284],E,R[285],74,N],[3,R[516],E,"a 64-bit module table entry",N,N],[12,R[273],E,R[274],75,N],[12,R[266],E,R[275],75,N],[12,R[267],E,R[268],75,N],[12,"irefsym",E,R[276],75,N],[12,"nrefsym",E,R[277],75,N],[12,R[269],E,R[278],75,N],[12,R[270],E,R[271],75,N],[12,"iextrel",E,R[279],75,N],[12,"nextrel",E,R[272],75,N],[12,R[280],E,R[281],75,N],[12,R[282],E,R[283],75,N],[12,R[284],E,R[285],75,N],[12,R[286],E,R[285],75,N],[3,R[517],E,"The entries in the reference symbol table are used when…",N,N],[12,"isym",E,"24 bits bit-field index into the symbol table",76,N],[12,"flags",E,"flags to indicate the type of reference",76,N],[3,R[518],E,"The twolevel_hints_command contains the offset and number…",N,N],[12,"cmd",E,R[303],77,N],[12,R[255],E,"sizeof(struct twolevel_hints_command)",77,N],[12,"offset",E,"offset to the hint table",77,N],[12,"nhints",E,"number of hints in the hint table",77,N],[3,R[519],E,"The entries in the two-level namespace lookup hints table…",N,N],[12,"isub_image",E,"index into the sub images",78,N],[12,"itoc",E,"24 bit field index into the table of contents",78,N],[3,R[520],E,"The prebind_cksum_command contains the value of the…",N,N],[12,"cmd",E,R[304],79,N],[12,R[255],E,"sizeof(struct prebind_cksum_command)",79,N],[12,"cksum",E,"the check sum or zero",79,N],[3,R[521],E,"The uuid load command contains a single 128-bit unique…",N,N],[12,"cmd",E,"LC_UUID",80,N],[12,R[255],E,"sizeof(struct uuid_command)",80,N],[12,"uuid",E,"16 bytes the 128-bit uuid",80,N],[3,R[522],E,"The rpath_command contains a path which at runtime should…",N,N],[12,"cmd",E,"LC_RPATH",81,N],[12,R[255],E,"includes string",81,N],[12,"path",E,"path to add to run path",81,N],[3,R[523],E,"The linkedit_data_command contains the offsets and sizes…",N,N],[12,"cmd",E,"LC_CODE_SIGNATURE, LC_SEGMENT_SPLIT_INFO,…",82,N],[12,R[255],E,"sizeof(struct linkedit_data_command)",82,N],[12,"dataoff",E,"file offset of data in __LINKEDIT segment",82,N],[12,"datasize",E,"file size of data in __LINKEDIT segment",82,N],[3,R[524],E,"The encryption_info_command contains the file offset and…",N,N],[12,"cmd",E,R[306],83,N],[12,R[255],E,"sizeof(struct encryption_info_command)",83,N],[12,"cryptoff",E,R[287],83,N],[12,R[288],E,R[289],83,N],[12,"cryptid",E,R[290],83,N],[3,R[525],E,"The encryption_info_command_64 contains the file offset…",N,N],[12,"cmd",E,R[308],84,N],[12,R[255],E,"sizeof(struct encryption_info_command_64)",84,N],[12,"cryptoff",E,R[287],84,N],[12,R[288],E,R[289],84,N],[12,"cryptid",E,R[290],84,N],[12,"pad",E,"padding to make this struct's size a multiple of 8 bytes",84,N],[3,R[526],E,"The version_min_command contains the min OS version on…",N,N],[12,"cmd",E,E,85,N],[12,R[255],E,E,85,N],[12,"version",E,R[291],85,N],[12,"sdk",E,R[291],85,N],[3,R[527],E,E,N,N],[12,"cmd",E,"LC_DYLD_INFO or LC_DYLD_INFO_ONLY",86,N],[12,R[255],E,"sizeof(struct dyld_info_command)",86,N],[12,"rebase_off",E,"file offset to rebase info",86,N],[12,"rebase_size",E,"size of rebase info",86,N],[12,"bind_off",E,"file offset to binding info",86,N],[12,"bind_size",E,"size of binding info",86,N],[12,"weak_bind_off",E,"file offset to weak binding info",86,N],[12,"weak_bind_size",E,"size of weak binding info",86,N],[12,"lazy_bind_off",E,R[292],86,N],[12,"lazy_bind_size",E,R[293],86,N],[12,"export_off",E,R[292],86,N],[12,"export_size",E,R[293],86,N],[3,R[528],E,"The linker_option_command contains linker options embedded…",N,N],[12,"cmd",E,"LC_LINKER_OPTION only used in MH_OBJECT fipub constypes",87,N],[12,R[255],E,E,87,N],[12,"count",E,"number of strings concatenation of zero terminated UTF8…",87,N],[3,R[529],E,"The symseg_command contains the offset and size of the GNU…",N,N],[12,"cmd",E,R[295],88,N],[12,R[255],E,"sizeof(struct symseg_command)",88,N],[12,"offset",E,"symbol segment offset",88,N],[12,"size",E,"symbol segment size in bytes",88,N],[3,R[530],E,"The ident_command contains a free format string table…",N,N],[12,"cmd",E,"LC_IDENT",89,N],[12,R[255],E,"strings that follow this command",89,N],[3,R[531],E,"The fvmfile_command contains a reference to a file to be…",N,N],[12,"cmd",E,R[296],90,N],[12,R[255],E,R[253],90,N],[12,"name",E,"files pathname",90,N],[12,R[294],E,"files virtual address",90,N],[3,R[532],E,"The entry_point_command is a replacement for…",N,N],[12,"cmd",E,E,91,N],[12,R[255],E,E,91,N],[12,"entryoff",E,"uint64_t file __TEXT offset of main",91,N],[12,"stacksize",E,"uint64_t if not zero, initial stack size",91,N],[3,R[533],E,"The source_version_command is an optional load command…",N,N],[12,"cmd",E,R[307],92,N],[12,R[255],E,E,92,N],[12,"version",E,"A.B.C.D.E packed as a24.b10.c10.d10.e10",92,N],[3,R[534],E,"The LC_DATA_IN_CODE load commands uses a…",N,N],[12,"offset",E,"from mach_header to start of data range",93,N],[12,"length",E,"number of bytes in data range",93,N],[12,"kind",E,"a DICE_KIND_* value",93,N],[3,R[535],E,"A tagged LoadCommand union",N,N],[12,"offset",E,"The offset this load command occurs at",94,N],[12,"command",E,"Which load command this is inside a variant",94,N],[4,R[536],E,"The various load commands as a cast-free variant/enum",N,N],[13,"Segment32",E,E,95,N],[13,"Segment64",E,E,95,N],[13,"Uuid",E,E,95,N],[13,"Symtab",E,E,95,N],[13,"Symseg",E,E,95,N],[13,"Thread",E,E,95,N],[13,"Unixthread",E,E,95,N],[13,"LoadFvmlib",E,E,95,N],[13,"IdFvmlib",E,E,95,N],[13,"Ident",E,E,95,N],[13,"Fvmfile",E,E,95,N],[13,"Prepage",E,E,95,N],[13,"Dysymtab",E,E,95,N],[13,"LoadDylib",E,E,95,N],[13,"IdDylib",E,E,95,N],[13,"LoadDylinker",E,E,95,N],[13,"IdDylinker",E,E,95,N],[13,"PreboundDylib",E,E,95,N],[13,"Routines32",E,E,95,N],[13,"Routines64",E,E,95,N],[13,"SubFramework",E,E,95,N],[13,"SubUmbrella",E,E,95,N],[13,"SubClient",E,E,95,N],[13,"SubLibrary",E,E,95,N],[13,"TwolevelHints",E,E,95,N],[13,"PrebindCksum",E,E,95,N],[13,"LoadWeakDylib",E,E,95,N],[13,"Rpath",E,E,95,N],[13,"CodeSignature",E,E,95,N],[13,"SegmentSplitInfo",E,E,95,N],[13,"ReexportDylib",E,E,95,N],[13,"LazyLoadDylib",E,E,95,N],[13,"EncryptionInfo32",E,E,95,N],[13,"EncryptionInfo64",E,E,95,N],[13,"DyldInfo",E,E,95,N],[13,"DyldInfoOnly",E,E,95,N],[13,"LoadUpwardDylib",E,E,95,N],[13,"VersionMinMacosx",E,E,95,N],[13,"VersionMinIphoneos",E,E,95,N],[13,"FunctionStarts",E,E,95,N],[13,"DyldEnvironment",E,E,95,N],[13,"Main",E,E,95,N],[13,"DataInCode",E,E,95,N],[13,"SourceVersion",E,E,95,N],[13,"DylibCodeSignDrs",E,E,95,N],[13,"LinkerOption",E,E,95,N],[13,"LinkerOptimizationHint",E,E,95,N],[13,"Unimplemented",E,E,95,N],[5,"cmd_to_str",E,E,N,[[["u32"]],["str"]]],[6,"LcStr",E,E,N,N],[17,"SIZEOF_LOAD_COMMAND",E,E,N,N],[17,"SIZEOF_LC_STR",E,E,N,N],[17,"SIZEOF_SECTION_32",E,E,N,N],[17,"SIZEOF_SECTION_64",E,E,N,N],[17,"SIZEOF_SEGMENT_COMMAND_32",E,E,N,N],[17,"SIZEOF_SEGMENT_COMMAND_64",E,E,N,N],[17,"SIZEOF_FVMLIB",E,E,N,N],[17,"SIZEOF_FVMLIB_COMMAND",E,E,N,N],[17,"SIZEOF_DYLIB",E,E,N,N],[17,"SIZEOF_DYLIB_COMMAND",E,E,N,N],[17,"SIZEOF_SUB_FRAMEWORK_COMMAND",E,E,N,N],[17,"SIZEOF_SUB_CLIENT_COMMAND",E,E,N,N],[17,"SIZEOF_SUB_UMBRELLA_COMMAND",E,E,N,N],[17,"SIZEOF_SUB_LIBRARY_COMMAND",E,E,N,N],[17,"SIZEOF_PREBOUND_DYLIB_COMMAND",E,E,N,N],[17,"SIZEOF_DYLINKER_COMMAND",E,E,N,N],[17,"SIZEOF_SYMTAB_COMMAND",E,E,N,N],[17,"SIZEOF_DYSYMTAB_COMMAND",E,E,N,N],[17,"SIZEOF_UUID_COMMAND",E,E,N,N],[17,"SIZEOF_RPATH_COMMAND",E,E,N,N],[17,"SIZEOF_LINKEDIT_DATA_COMMAND",E,E,N,N],[17,"SIZEOF_ENCRYPTION_INFO_COMMAND_32",E,E,N,N],[17,"SIZEOF_ENCRYPTION_INFO_COMMAND_64",E,E,N,N],[17,"SIZEOF_VERSION_MIN_COMMAND",E,E,N,N],[17,"SIZEOF_DYLIB_INFO_COMMAND",E,E,N,N],[17,"SIZEOF_LINKER_OPTION_COMMAND",E,E,N,N],[17,"SIZEOF_SYMSEG_COMMAND",E,E,N,N],[17,"SIZEOF_IDENT_COMMAND",E,E,N,N],[17,"SIZEOF_FVMFILE_COMMAND",E,E,N,N],[17,"SIZEOF_ENTRY_POINT_COMMAND",E,E,N,N],[17,"LC_REQ_DYLD",E,E,N,N],[17,"LC_LOAD_WEAK_DYLIB",E,E,N,N],[17,"LC_RPATH",E,E,N,N],[17,"LC_REEXPORT_DYLIB",E,E,N,N],[17,"LC_DYLD_INFO_ONLY",E,E,N,N],[17,"LC_LOAD_UPWARD_DYLIB",E,E,N,N],[17,"LC_MAIN",E,E,N,N],[17,"LC_SEGMENT",E,E,N,N],[17,"LC_SYMTAB",E,E,N,N],[17,R[295],E,E,N,N],[17,"LC_THREAD",E,E,N,N],[17,"LC_UNIXTHREAD",E,E,N,N],[17,"LC_LOADFVMLIB",E,E,N,N],[17,"LC_IDFVMLIB",E,E,N,N],[17,"LC_IDENT",E,E,N,N],[17,R[296],E,E,N,N],[17,"LC_PREPAGE",E,E,N,N],[17,"LC_DYSYMTAB",E,E,N,N],[17,"LC_LOAD_DYLIB",E,E,N,N],[17,"LC_ID_DYLIB",E,E,N,N],[17,"LC_LOAD_DYLINKER",E,E,N,N],[17,"LC_ID_DYLINKER",E,E,N,N],[17,R[297],E,E,N,N],[17,R[298],E,E,N,N],[17,R[299],E,E,N,N],[17,R[300],E,E,N,N],[17,R[301],E,E,N,N],[17,R[302],E,E,N,N],[17,R[303],E,E,N,N],[17,R[304],E,E,N,N],[17,"LC_SEGMENT_64",E,E,N,N],[17,R[305],E,E,N,N],[17,"LC_UUID",E,E,N,N],[17,"LC_CODE_SIGNATURE",E,E,N,N],[17,"LC_SEGMENT_SPLIT_INFO",E,E,N,N],[17,"LC_LAZY_LOAD_DYLIB",E,E,N,N],[17,R[306],E,E,N,N],[17,"LC_DYLD_INFO",E,E,N,N],[17,"LC_VERSION_MIN_MACOSX",E,E,N,N],[17,"LC_VERSION_MIN_IPHONEOS",E,E,N,N],[17,"LC_FUNCTION_STARTS",E,E,N,N],[17,"LC_DYLD_ENVIRONMENT",E,E,N,N],[17,"LC_DATA_IN_CODE",E,E,N,N],[17,R[307],E,E,N,N],[17,"LC_DYLIB_CODE_SIGN_DRS",E,E,N,N],[17,R[308],E,E,N,N],[17,"LC_LINKER_OPTION",E,E,N,N],[17,"LC_LINKER_OPTIMIZATION_HINT",E,E,N,N],[11,"name",E,E,56,[[["self"]],[[R[2],["str"]],["str"]]]],[11,"name",E,E,57,[[["self"]],[[R[2],["str"]],["str"]]]],[11,"instruction_pointer",E,E,68,[[["self"],[R[231]]],[[R[2],["u64"]],["u64"]]]],[11,"new",E,E,71,[[],["self"]]],[11,"new",E,E,72,[[],["self"]]],[11,"new",E,E,85,[[["bool"]],["self"]]],[11,R[255],E,E,95,[[["self"]],[R[6]]]],[11,"cmd",E,E,95,[[["self"]],["u32"]]],[11,"parse",E,"Parse a load command from `bytes` at `offset` with the…",94,[[[R[66]],[R[6]]],[R[2]]]],[0,R[315],R[230],"\"Nlist\" style symbols in this binary - beware, like most…",N,N],[3,"Nlist32",R[433],E,N,N],[12,"n_strx",E,R[309],96,N],[12,"n_type",E,R[310],96,N],[12,"n_sect",E,R[311],96,N],[12,"n_desc",E,R[312],96,N],[12,"n_value",E,R[313],96,N],[3,"Nlist64",E,E,N,N],[12,"n_strx",E,R[309],97,N],[12,"n_type",E,R[310],97,N],[12,"n_sect",E,R[311],97,N],[12,"n_desc",E,R[312],97,N],[12,"n_value",E,R[313],97,N],[3,"Nlist",E,E,N,N],[12,"n_strx",E,R[309],98,N],[12,"n_type",E,R[310],98,N],[12,"n_sect",E,R[311],98,N],[12,"n_desc",E,R[312],98,N],[12,"n_value",E,R[313],98,N],[3,R[537],E,E,N,N],[12,"nsyms",E,E,99,N],[12,R[5],E,E,99,N],[12,"ctx",E,E,99,N],[3,R[387],E,E,N,N],[3,"Symbols",E,"A zero-copy \"nlist\" style symbol table (\"stab\"), including…",N,N],[5,"n_type_to_str",E,E,N,[[["u8"]],["str"]]],[17,"N_STAB",E,"if any of these bits set, a symbolic debugging entry",N,N],[17,"N_PEXT",E,"private external symbol bit",N,N],[17,"N_TYPE",E,"mask for the type bits",N,N],[17,"N_EXT",E,"external symbol bit, set for external symbols",N,N],[17,"NO_SECT",E,"symbol is not in any section",N,N],[17,"MAX_SECT",E,"1 thru 255 inclusive",N,N],[17,"N_UNDF",E,"undefined, n_sect == NO_SECT",N,N],[17,"N_ABS",E,"absolute, n_sect == NO_SECT",N,N],[17,"N_SECT",E,"defined in section number n_sect",N,N],[17,"N_PBUD",E,"prebound undefined (defined in a dylib)",N,N],[17,"N_INDR",E,"indirect",N,N],[17,"N_GSYM",E,E,N,N],[17,"N_FNAME",E,E,N,N],[17,"N_FUN",E,E,N,N],[17,"N_STSYM",E,E,N,N],[17,"N_LCSYM",E,E,N,N],[17,"N_BNSYM",E,E,N,N],[17,"N_PC",E,E,N,N],[17,"N_AST",E,E,N,N],[17,"N_OPT",E,E,N,N],[17,"N_RSYM",E,E,N,N],[17,"N_SLINE",E,E,N,N],[17,"N_ENSYM",E,E,N,N],[17,"N_SSYM",E,E,N,N],[17,"N_SO",E,E,N,N],[17,"N_OSO",E,E,N,N],[17,"N_LSYM",E,E,N,N],[17,"N_BINCL",E,E,N,N],[17,"N_SOL",E,E,N,N],[17,"N_PARAMS",E,E,N,N],[17,"N_VERSION",E,E,N,N],[17,"N_OLEVEL",E,E,N,N],[17,"N_PSYM",E,E,N,N],[17,"N_EINCL",E,E,N,N],[17,"N_ENTRY",E,E,N,N],[17,"N_LBRAC",E,E,N,N],[17,"N_EXCL",E,E,N,N],[17,"N_RBRAC",E,E,N,N],[17,"N_BCOMM",E,E,N,N],[17,"N_ECOMM",E,E,N,N],[17,"N_ECOML",E,E,N,N],[17,"N_LENG",E,E,N,N],[17,"NLIST_TYPE_MASK",E,E,N,N],[17,"NLIST_TYPE_GLOBAL",E,E,N,N],[17,"NLIST_TYPE_LOCAL",E,E,N,N],[17,"REFERENCE_TYPE",E,"Mask for reference flags of `n_desc` field.",N,N],[17,"REFERENCE_FLAG_UNDEFINED_NON_LAZY",E,"This symbol is a reference to an external non-lazy (data)…",N,N],[17,"REFERENCE_FLAG_UNDEFINED_LAZY",E,"This symbol is a reference to an external lazy symbol—that…",N,N],[17,"REFERENCE_FLAG_DEFINED",E,"This symbol is defined in this module.",N,N],[17,"REFERENCE_FLAG_PRIVATE_DEFINED",E,"This symbol is defined in this module and is visible only…",N,N],[17,"REFERENCE_FLAG_PRIVATE_UNDEFINED_NON_LAZY",E,R[314],N,N],[17,"REFERENCE_FLAG_PRIVATE_UNDEFINED_LAZY",E,R[314],N,N],[17,"REFERENCED_DYNAMICALLY",E,"Must be set for any defined symbol that is referenced by…",N,N],[17,"N_DESC_DISCARDED",E,"Sometimes used by the dynamic linker at runtime in a fully…",N,N],[17,"N_NO_DEAD_STRIP",E,"When set in a relocatable object file (file type…",N,N],[17,"N_WEAK_REF",E,"Indicates that this undefined symbol is a weak reference.…",N,N],[17,"N_WEAK_DEF",E,"Indicates that this symbol is a weak definition. If the…",N,N],[17,"SIZEOF_NLIST_32",E,E,N,N],[17,"SIZEOF_NLIST_64",E,E,N,N],[11,"get_type",E,"Gets this symbol's type in bits 0xe",98,[[["self"]],["u8"]]],[11,"type_str",E,"Gets the str representation of the type of this symbol",98,[[["self"]],["str"]]],[11,"is_global",E,"Whether this symbol is global or not",98,[[["self"]],["bool"]]],[11,"is_weak",E,"Whether this symbol is weak or not",98,[[["self"]],["bool"]]],[11,"is_undefined",E,"Whether this symbol is undefined or not",98,[[["self"]],["bool"]]],[11,"is_stab",E,"Whether this symbol is a symbolic debugging entry",98,[[["self"]],["bool"]]],[11,"new",E,"Creates a new symbol table with `count` elements, from the…",100,[[[R[6]]],[[R[2],[R[315]]],[R[315]]]]],[11,"parse",E,E,100,[[[R[458]],["ctx"]],[[R[2],[R[315]]],[R[315]]]]],[11,"iter",E,E,100,[[["self"]],[R[326]]]],[11,"get",E,"Parses a single Nlist symbol from the binary, with its…",100,[[["self"],[R[6]]],[R[2]]]],[0,"exports",R[230],"Symbols exported by this binary and available for dynamic…",N,N],[3,"Export",R[316],"A finalized symbolic export reconstructed from the export…",N,N],[12,"name",E,"The reconsituted export name which dyld matches against",101,N],[12,"info",E,"The export info in the node data",101,N],[12,"size",E,"How large this export is",101,N],[12,"offset",E,"The offset this symbol export is found in the binary",101,N],[3,R[540],E,"An export trie efficiently encodes all of the symbols…",N,N],[4,R[538],E,E,N,N],[13,"Regular",E,E,102,N],[13,"Absolute",E,E,102,N],[13,"ThreadLocal",E,E,102,N],[13,"UnknownSymbolKind",E,E,102,N],[4,R[539],E,"An export can be a regular export, a re-export, or a stub",N,N],[13,"Regular",E,"A regular exported symbol, which is an address where it is…",103,N],[12,"address",R[317],E,103,N],[12,"flags",E,E,103,N],[13,R[557],R[316],"if lib_symbol_name None then same symbol name, otherwise…",103,N],[12,"lib",R[317],E,103,N],[12,"lib_symbol_name",E,E,103,N],[12,"flags",E,E,103,N],[13,"Stub",R[316],"If the flags is `EXPORT_SYMBOL_FLAGS_STUB_AND_RESOLVER`,…",103,N],[12,"stub_offset",R[317],E,103,N],[12,"resolver_offset",E,E,103,N],[12,"flags",E,E,103,N],[17,"EXPORT_SYMBOL_FLAGS_KIND_MASK",R[316],E,N,N],[17,"EXPORT_SYMBOL_FLAGS_KIND_REGULAR",E,E,N,N],[17,"EXPORT_SYMBOL_FLAGS_KIND_ABSOLUTE",E,E,N,N],[17,"EXPORT_SYMBOL_FLAGS_KIND_THREAD_LOCAL",E,E,N,N],[17,"EXPORT_SYMBOL_FLAGS_WEAK_DEFINITION",E,E,N,N],[17,"EXPORT_SYMBOL_FLAGS_REEXPORT",E,E,N,N],[17,"EXPORT_SYMBOL_FLAGS_STUB_AND_RESOLVER",E,E,N,N],[11,"new",E,E,102,[[["u64"]],["symbolkind"]]],[11,"to_str",E,E,102,[[["self"]],["str"]]],[11,"parse",E,"Parse out the export info from `bytes`, at `offset`",103,[[[R[6]],["u64"]],[[R[318]],[R[2],[R[318]]]]]],[11,"new",E,"Create a new export from `name` and `info`",101,[[["string"],[R[318]]],["export"]]],[11,"exports",E,"Walk the export trie for symbols exported by this binary,…",104,[[["self"]],[[R[2],["vec"]],["vec",["export"]]]]],[11,"new",E,"Create a new, lazy, zero-copy export trie from the…",104,[[[R[319]]],["self"]]],[0,"imports",R[230],"Dynamically linked symbolic imports",N,N],[3,"Import",R[434],"An dynamically linked symbolic import",N,N],[12,"name",E,"The symbol name dyld uses to resolve this import",105,N],[12,"dylib",E,"The library this symbol belongs to (thanks to two-level…",105,N],[12,"is_lazy",E,"Whether the symbol is lazily resolved or not",105,N],[12,"offset",E,"The offset in the binary this import is found",105,N],[12,"size",E,"The size of this import",105,N],[12,"address",E,"The virtual memory address at which this import is found",105,N],[12,"addend",E,"The addend of this import",105,N],[12,"is_weak",E,"Whether this import is weak",105,N],[12,"start_of_sequence_offset",E,"The offset in the stream of bind opcodes that caused this…",105,N],[3,R[541],E,"An interpreter for mach BIND opcodes. Runs on prebound…",N,N],[11,"new",E,"Construct a new import binding interpreter from `bytes`…",106,[[[R[319]]],["self"]]],[11,"imports",E,"Return the imports in this binary",106,[[["ctx"],["self"]],[[R[2],["vec"]],["vec",["import"]]]]],[0,"bind_opcodes",R[230],"Bind opcodes are interpreted by the dynamic linker to…",N,N],[5,"opcode_to_str","goblin::mach::bind_opcodes",E,N,[[["opcode"]],["str"]]],[6,"Opcode",E,E,N,N],[17,"BIND_TYPE_POINTER",E,E,N,N],[17,"BIND_TYPE_TEXT_ABSOLUTE32",E,E,N,N],[17,"BIND_TYPE_TEXT_PCREL32",E,E,N,N],[17,"BIND_SPECIAL_DYLIB_SELF",E,E,N,N],[17,"BIND_SPECIAL_DYLIB_MAIN_EXECUTABLE",E,E,N,N],[17,"BIND_SPECIAL_DYLIB_FLAT_LOOKUP",E,E,N,N],[17,"BIND_SYMBOL_FLAGS_WEAK_IMPORT",E,E,N,N],[17,"BIND_SYMBOL_FLAGS_NON_WEAK_DEFINITION",E,E,N,N],[17,"BIND_OPCODE_MASK",E,E,N,N],[17,"BIND_IMMEDIATE_MASK",E,E,N,N],[17,"BIND_OPCODE_DONE",E,E,N,N],[17,"BIND_OPCODE_SET_DYLIB_ORDINAL_IMM",E,E,N,N],[17,"BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB",E,E,N,N],[17,"BIND_OPCODE_SET_DYLIB_SPECIAL_IMM",E,E,N,N],[17,"BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM",E,E,N,N],[17,"BIND_OPCODE_SET_TYPE_IMM",E,E,N,N],[17,"BIND_OPCODE_SET_ADDEND_SLEB",E,E,N,N],[17,"BIND_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB",E,E,N,N],[17,"BIND_OPCODE_ADD_ADDR_ULEB",E,E,N,N],[17,"BIND_OPCODE_DO_BIND",E,E,N,N],[17,"BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB",E,E,N,N],[17,"BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED",E,E,N,N],[17,"BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB",E,E,N,N],[0,R[395],R[230],E,N,N],[3,R[542],R[435],E,N,N],[12,"r_address",E,"Offset in the section to what is being relocated",107,N],[12,"r_info",E,"Contains all of the relocation info as a bitfield.…",107,N],[5,"reloc_to_str",E,E,N,[[["reloctype"],[R[231]]],["str"]]],[6,"RelocType",E,E,N,N],[17,"SIZEOF_RELOCATION_INFO",E,E,N,N],[17,"R_ABS",E,"Absolute relocation type for Mach-O files",N,N],[17,"X86_64_RELOC_UNSIGNED",E,"Absolute address",N,N],[17,"X86_64_RELOC_SIGNED",E,"Signed 32-bit displacement",N,N],[17,"X86_64_RELOC_BRANCH",E,"A CALL/JMP instruction with 32-bit displacement",N,N],[17,"X86_64_RELOC_GOT_LOAD",E,"A MOVQ load of a GOT entry",N,N],[17,"X86_64_RELOC_GOT",E,"Other GOT references",N,N],[17,"X86_64_RELOC_SUBTRACTOR",E,"Must be followed by a X86_64_RELOC_UNSIGNED relocation",N,N],[17,"X86_64_RELOC_SIGNED_1",E,"for signed 32-bit displacement with a -1 addend",N,N],[17,"X86_64_RELOC_SIGNED_2",E,"for signed 32-bit displacement with a -2 addend",N,N],[17,"X86_64_RELOC_SIGNED_4",E,"for signed 32-bit displacement with a -4 addend",N,N],[17,"X86_64_RELOC_TLV",E,"for thread local variables",N,N],[17,"GENERIC_RELOC_VANILLA",E,E,N,N],[17,"GENERIC_RELOC_PAIR",E,E,N,N],[17,"GENERIC_RELOC_SECTDIFF",E,E,N,N],[17,"GENERIC_RELOC_LOCAL_SECTDIFF",E,E,N,N],[17,"GENERIC_RELOC_PB_LA_P",E,E,N,N],[17,"ARM_RELOC_VANILLA",E,E,N,N],[17,"ARM_RELOC_PAIR",E,E,N,N],[17,"ARM_RELOC_SECTDIFF",E,E,N,N],[17,"ARM_RELOC_LOCAL_SECTDIFF",E,E,N,N],[17,"ARM_RELOC_PB_LA_PTR",E,E,N,N],[17,"ARM_RELOC_BR24",E,E,N,N],[17,"ARM_THUMB_RELOC_BR22",E,E,N,N],[17,"ARM_THUMB_32BIT_BRANCH",E,R[194],N,N],[17,"ARM_RELOC_HALF",E,E,N,N],[17,"ARM_RELOC_HALF_SECTDIFF",E,E,N,N],[17,"ARM64_RELOC_UNSIGNED",E,"For pointers.",N,N],[17,"ARM64_RELOC_SUBTRACTOR",E,"Must be followed by an ARM64_RELOC_UNSIGNED",N,N],[17,"ARM64_RELOC_BRANCH26",E,"A B/BL instruction with 26-bit displacement.",N,N],[17,"ARM64_RELOC_PAGE21",E,"PC-rel distance to page of target.",N,N],[17,"ARM64_RELOC_PAGEOFF12",E,"Offset within page, scaled by r_length.",N,N],[17,"ARM64_RELOC_GOT_LOAD_PAGE21",E,"PC-rel distance to page of GOT slot.",N,N],[17,"ARM64_RELOC_GOT_LOAD_PAGEOFF12",E,"Offset within page of GOT slot, scaled by r_length.",N,N],[17,"ARM64_RELOC_POINTER_TO_GOT",E,"For pointers to GOT slots.",N,N],[17,"ARM64_RELOC_TLVP_LOAD_PAGE21",E,"PC-rel distance to page of TLVP slot.",N,N],[17,"ARM64_RELOC_TLVP_LOAD_PAGEOFF12",E,"Offset within page of TLVP slot, scaled by r_length.",N,N],[17,"ARM64_RELOC_ADDEND",E,"Must be followed by ARM64_RELOC_PAGE21 or…",N,N],[11,"r_symbolnum",E,"Symbol index if `r_extern` == 1 or section ordinal if…",107,[[],[R[6]]]],[11,"r_pcrel",E,"Was relocated pc relative already, 1 bit",107,[[],["u8"]]],[11,"r_length",E,"The length of the relocation, 0=byte, 1=word, 2=long,…",107,[[],["u8"]]],[11,"r_extern",E,"Does not include value of sym referenced, 1 bit",107,[[],["u8"]]],[11,"r_type",E,"Ff not 0, machine specific relocation type, in bits :4",107,[[],["u8"]]],[11,"is_extern",E,"If true, this relocation is for a symbol; if false, or a…",107,[[],["bool"]]],[11,"is_pic",E,"If true, this is a PIC relocation",107,[[],["bool"]]],[11,"to_str",E,"Returns a string representation of this relocation, given…",107,[[[R[231]]],["str"]]],[0,"segment",R[230],E,N,N],[3,R[586],R[436],E,N,N],[3,"Section",E,"Generalized 32/64 bit Section",N,N],[12,R[320],E,R[240],108,N],[12,R[322],E,R[241],108,N],[12,"addr",E,R[242],108,N],[12,"size",E,R[243],108,N],[12,"offset",E,R[244],108,N],[12,"align",E,R[245],108,N],[12,"reloff",E,R[246],108,N],[12,"nreloc",E,R[247],108,N],[12,"flags",E,R[321],108,N],[3,R[587],E,E,N,N],[3,"Segment",E,"Generalized 32/64 bit Segment Command",N,N],[12,"cmd",E,E,109,N],[12,R[255],E,E,109,N],[12,R[322],E,E,109,N],[12,"vmaddr",E,E,109,N],[12,"vmsize",E,E,109,N],[12,"fileoff",E,E,109,N],[12,R[323],E,E,109,N],[12,"maxprot",E,E,109,N],[12,R[324],E,E,109,N],[12,"nsects",E,E,109,N],[12,"flags",E,E,109,N],[12,"data",E,E,109,N],[3,"Segments",E,"An opaque 32/64-bit container for Mach-o segments",N,N],[6,"SectionData",E,E,N,N],[11,"name",E,"The name of this section",108,[[["self"]],[[R[2],["str"]],["str"]]]],[11,R[322],E,"The containing segment's name",108,[[["self"]],[[R[2],["str"]],["str"]]]],[11,"iter_relocations",E,"Iterate this sections relocations given `data`; `data`…",108,[[["ctx"],["self"]],["relocationiterator"]]],[11,"new",E,"Create a new, blank segment, with cmd either…",109,[[["ctx"]],["self"]]],[11,"name",E,"Get the name of this segment",109,[[["self"]],[[R[2],["str"]],["str"]]]],[11,R[327],E,"Get the sections from this segment, erroring if any…",109,[[["self"]],[[R[2],["vec"]],["vec"]]]],[11,"from_32",E,"Convert the raw C 32-bit segment command to a generalized…",109,[[[R[6]],["ctx"],[R[456]]],[[R[2],["error"]],["error"]]]],[11,"from_64",E,"Convert the raw C 64-bit segment command to a generalized…",109,[[[R[457]],[R[6]],["ctx"]],[[R[2],["error"]],["error"]]]],[11,"new",E,"Construct a new generalized segment container from this…",110,[[["ctx"]],["self"]]],[11,R[327],E,"Get every section from every segment",110,[[["self"]],[["iterator"],["box",["iterator"]]]]],[11,R[325],R[230],"Is this a relocatable object file?",45,[[["self"]],["bool"]]],[11,R[315],E,"Return an iterator over all the symbols in this binary",45,[[["self"]],[R[326]]]],[11,R[364],E,"Return a vector of the relocations in this binary",45,[[["self"]],[[R[2],["vec"]],["vec"]]]],[11,"exports",E,"Return the exported symbols in this binary (if any)",45,[[["self"]],[[R[2],["vec"]],["vec",["export"]]]]],[11,"imports",E,"Return the imported symbols in this binary that dyld knows…",45,[[["self"]],[[R[2],["vec"]],["vec",["import"]]]]],[11,"parse",E,"Parses the Mach-o binary from `bytes` at `offset`",45,[[[R[6]]],[["macho"],[R[2],["macho"]]]]],[11,"new",E,"Lazily construct `Self`",46,[[],[R[2]]]],[11,"iter_arches",E,"Iterate every fat arch header",46,[[["self"]],["fatarchiterator"]]],[11,"arches",E,"Return all the architectures in this binary",46,[[["self"]],[[R[2],["vec"]],["vec",["fatarch"]]]]],[11,"get",E,"Try to get the Mach-o binary at `index`",46,[[["self"],[R[6]]],[["macho"],[R[2],["macho"]]]]],[11,"find",E,E,46,[[["self"],["fn"]],[[R[2],["macho"]],[R[7],[R[2]]]]]],[11,"find_cputype",E,"Try and find the `cputype` in `Self`, if there is one",46,[[["u32"],["self"]],[[R[7],["fatarch"]],[R[2],[R[7]]]]]],[11,"parse",E,"Parse from `bytes` either a multi-arch binary or a regular…",47,[[],[R[2]]]],[0,"pe",R[4],"A PE32 and PE32+ parser",N,N],[3,"PE",R[332],"An analyzed PE32/PE32+ binary",N,N],[12,R[16],E,"The PE header",111,N],[12,R[327],E,"A list of the sections in this PE binary",111,N],[12,"size",E,"The size of the binary",111,N],[12,"name",E,"The name of this `dll`, if it has one",111,N],[12,"is_lib",E,"Whether this is a `dll` or not",111,N],[12,"is_64",E,"Whether the binary is 64-bit (PE32+)",111,N],[12,"entry",E,"the entry point of the binary",111,N],[12,R[342],E,"The binary's RVA, or image base - useful for computing…",111,N],[12,"export_data",E,"Data about any exported symbols in this binary (e.g., if…",111,N],[12,R[373],E,"Data for any imported symbols, and from which `dll`, etc.,…",111,N],[12,"exports",E,"The list of exported symbols in this binary, contains…",111,N],[12,"imports",E,"The list symbols imported by this binary from other `dll`s",111,N],[12,R[328],E,"The list of libraries which this binary imports symbols from",111,N],[12,"debug_data",E,"Debug information, if any, contained in the PE header",111,N],[12,"exception_data",E,"Exception handling and stack unwind information, if any,…",111,N],[3,"Coff",E,"An analyzed COFF object",N,N],[12,R[16],E,"The COFF header",112,N],[12,R[327],E,"A list of the sections in this COFF binary",112,N],[12,R[315],E,"The COFF symbol table.",112,N],[12,"strings",E,"The string table.",112,N],[0,R[16],E,E,N,N],[3,R[543],R[437],"DOS header present in all PE binaries",N,N],[12,R[329],E,"Magic number: 5a4d",113,N],[12,"pe_pointer",E,"Pointer to PE header, always at offset 0x3c",113,N],[3,R[544],E,"COFF Header",N,N],[12,"machine",E,"The machine type",114,N],[12,"number_of_sections",E,E,114,N],[12,R[367],E,E,114,N],[12,"pointer_to_symbol_table",E,E,114,N],[12,"number_of_symbol_table",E,E,114,N],[12,"size_of_optional_header",E,E,114,N],[12,R[363],E,E,114,N],[3,"Header",E,E,N,N],[12,"dos_header",E,E,115,N],[12,R[329],E,"PE Magic: PE\\0\\0, little endian",115,N],[12,"coff_header",E,E,115,N],[12,R[331],E,E,115,N],[17,"DOS_MAGIC",E,E,N,N],[17,"PE_POINTER_OFFSET",E,E,N,N],[17,"SIZEOF_COFF_HEADER",E,E,N,N],[17,"PE_MAGIC",E,"PE\\0\\0, little endian",N,N],[17,"SIZEOF_PE_MAGIC",E,E,N,N],[17,"COFF_MACHINE_X86",E,E,N,N],[17,"COFF_MACHINE_X86_64",E,E,N,N],[11,"parse",E,E,113,[[],[R[2]]]],[11,"parse",E,E,114,[[[R[6]]],[R[2]]]],[11,R[327],E,"Parse the COFF section headers.",114,[[["self"],[R[6]]],[["vec",[R[462]]],[R[2],["vec"]]]]],[11,R[315],E,"Return the COFF symbol table.",114,[[["self"]],[[R[2],[R[330]]],[R[330]]]]],[11,"strings",E,"Return the COFF string table.",114,[[["self"]],[[R[5]],[R[2],[R[5]]]]]],[11,"parse",E,E,115,[[],[R[2]]]],[0,R[331],R[332],E,N,N],[3,R[545],R[438],"standard COFF fields",N,N],[12,"magic",E,E,116,N],[12,R[333],E,E,116,N],[12,R[334],E,E,116,N],[12,R[335],E,E,116,N],[12,R[336],E,E,116,N],[12,R[337],E,E,116,N],[12,R[338],E,E,116,N],[12,R[339],E,E,116,N],[12,R[340],E,R[341],116,N],[3,R[546],E,"standard 64-bit COFF fields",N,N],[12,"magic",E,E,117,N],[12,R[333],E,E,117,N],[12,R[334],E,E,117,N],[12,R[335],E,E,117,N],[12,R[336],E,E,117,N],[12,R[337],E,E,117,N],[12,R[338],E,E,117,N],[12,R[339],E,E,117,N],[3,R[547],E,"Unified 32/64-bit COFF fields",N,N],[12,"magic",E,E,118,N],[12,R[333],E,E,118,N],[12,R[334],E,E,118,N],[12,R[335],E,E,118,N],[12,R[336],E,E,118,N],[12,R[337],E,E,118,N],[12,R[338],E,E,118,N],[12,R[339],E,E,118,N],[12,R[340],E,R[341],118,N],[3,R[548],E,"Windows specific fields",N,N],[12,R[342],E,E,119,N],[12,R[343],E,E,119,N],[12,R[344],E,E,119,N],[12,R[345],E,E,119,N],[12,R[346],E,E,119,N],[12,R[347],E,E,119,N],[12,R[348],E,E,119,N],[12,R[349],E,E,119,N],[12,R[350],E,E,119,N],[12,R[351],E,E,119,N],[12,R[352],E,E,119,N],[12,R[353],E,E,119,N],[12,R[354],E,E,119,N],[12,R[355],E,E,119,N],[12,R[356],E,E,119,N],[12,R[357],E,E,119,N],[12,R[358],E,E,119,N],[12,R[359],E,E,119,N],[12,R[360],E,E,119,N],[12,R[361],E,E,119,N],[12,R[362],E,E,119,N],[3,R[549],E,"64-bit Windows specific fields",N,N],[12,R[342],E,E,120,N],[12,R[343],E,E,120,N],[12,R[344],E,E,120,N],[12,R[345],E,E,120,N],[12,R[346],E,E,120,N],[12,R[347],E,E,120,N],[12,R[348],E,E,120,N],[12,R[349],E,E,120,N],[12,R[350],E,E,120,N],[12,R[351],E,E,120,N],[12,R[352],E,E,120,N],[12,R[353],E,E,120,N],[12,R[354],E,E,120,N],[12,R[355],E,E,120,N],[12,R[356],E,E,120,N],[12,R[357],E,E,120,N],[12,R[358],E,E,120,N],[12,R[359],E,E,120,N],[12,R[360],E,E,120,N],[12,R[361],E,E,120,N],[12,R[362],E,E,120,N],[3,R[550],E,E,N,N],[12,"standard_fields",E,E,121,N],[12,"windows_fields",E,E,121,N],[12,R[365],E,E,121,N],[6,R[590],E,E,N,N],[17,"SIZEOF_STANDARD_FIELDS_32",E,E,N,N],[17,"SIZEOF_STANDARD_FIELDS_64",E,E,N,N],[17,"MAGIC_32",E,"Standard fields magic number for 32-bit binary",N,N],[17,"MAGIC_64",E,"Standard fields magic number for 64-bit binary",N,N],[17,"SIZEOF_WINDOWS_FIELDS_32",E,E,N,N],[17,"SIZEOF_WINDOWS_FIELDS_64",E,E,N,N],[11,R[8],E,E,121,[[["self"]],[[R[2],[R[8]]],[R[8]]]]],[0,"characteristic",R[332],E,N,N],[5,"is_dll","goblin::pe::characteristic",E,N,[[["u16"]],["bool"]]],[5,"is_exe",E,E,N,[[["u16"]],["bool"]]],[17,"IMAGE_FILE_RELOCS_STRIPPED",E,E,N,N],[17,"IMAGE_FILE_EXECUTABLE_IMAGE",E,E,N,N],[17,"IMAGE_FILE_LINE_NUMS_STRIPPED",E,E,N,N],[17,"IMAGE_FILE_LOCAL_SYMS_STRIPPED",E,E,N,N],[17,"IMAGE_FILE_AGGRESSIVE_WS_TRIM",E,E,N,N],[17,"IMAGE_FILE_LARGE_ADDRESS_AWARE",E,E,N,N],[17,"RESERVED",E,E,N,N],[17,"IMAGE_FILE_BYTES_REVERSED_LO",E,E,N,N],[17,"IMAGE_FILE_32BIT_MACHINE",E,E,N,N],[17,"IMAGE_FILE_DEBUG_STRIPPED",E,E,N,N],[17,"IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP",E,E,N,N],[17,"IMAGE_FILE_NET_RUN_FROM_SWAP",E,E,N,N],[17,"IMAGE_FILE_SYSTEM",E,E,N,N],[17,"IMAGE_FILE_DLL",E,E,N,N],[17,"IMAGE_FILE_UP_SYSTEM_ONLY",E,E,N,N],[17,"IMAGE_FILE_BYTES_REVERSED_HI",E,E,N,N],[0,"section_table",R[332],E,N,N],[3,R[551],R[439],E,N,N],[12,"name",E,E,122,N],[12,"real_name",E,E,122,N],[12,"virtual_size",E,E,122,N],[12,R[366],E,E,122,N],[12,"size_of_raw_data",E,E,122,N],[12,R[379],E,E,122,N],[12,"pointer_to_relocations",E,E,122,N],[12,"pointer_to_linenumbers",E,E,122,N],[12,R[386],E,E,122,N],[12,"number_of_linenumbers",E,E,122,N],[12,R[363],E,E,122,N],[17,"SIZEOF_SECTION_TABLE",E,E,N,N],[17,"IMAGE_SCN_TYPE_NO_PAD",E,"The section should not be padded to the next boundary.…",N,N],[17,"IMAGE_SCN_CNT_CODE",E,"The section contains executable code.",N,N],[17,"IMAGE_SCN_CNT_INITIALIZED_DATA",E,"The section contains initialized data.",N,N],[17,"IMAGE_SCN_CNT_UNINITIALIZED_DATA",E,"The section contains uninitialized data.",N,N],[17,"IMAGE_SCN_LNK_OTHER",E,E,N,N],[17,"IMAGE_SCN_LNK_INFO",E,"The section contains comments or other information. The…",N,N],[17,"IMAGE_SCN_LNK_REMOVE",E,"The section will not become part of the image. This is…",N,N],[17,"IMAGE_SCN_LNK_COMDAT",E,"The section contains COMDAT data. This is valid only for…",N,N],[17,"IMAGE_SCN_GPREL",E,"The section contains data referenced through the global…",N,N],[17,"IMAGE_SCN_MEM_PURGEABLE",E,E,N,N],[17,"IMAGE_SCN_MEM_16BIT",E,E,N,N],[17,"IMAGE_SCN_MEM_LOCKED",E,E,N,N],[17,"IMAGE_SCN_MEM_PRELOAD",E,E,N,N],[17,"IMAGE_SCN_ALIGN_1BYTES",E,E,N,N],[17,"IMAGE_SCN_ALIGN_2BYTES",E,E,N,N],[17,"IMAGE_SCN_ALIGN_4BYTES",E,E,N,N],[17,"IMAGE_SCN_ALIGN_8BYTES",E,E,N,N],[17,"IMAGE_SCN_ALIGN_16BYTES",E,E,N,N],[17,"IMAGE_SCN_ALIGN_32BYTES",E,E,N,N],[17,"IMAGE_SCN_ALIGN_64BYTES",E,E,N,N],[17,"IMAGE_SCN_ALIGN_128BYTES",E,E,N,N],[17,"IMAGE_SCN_ALIGN_256BYTES",E,E,N,N],[17,"IMAGE_SCN_ALIGN_512BYTES",E,E,N,N],[17,"IMAGE_SCN_ALIGN_1024BYTES",E,E,N,N],[17,"IMAGE_SCN_ALIGN_2048BYTES",E,E,N,N],[17,"IMAGE_SCN_ALIGN_4096BYTES",E,E,N,N],[17,"IMAGE_SCN_ALIGN_8192BYTES",E,E,N,N],[17,"IMAGE_SCN_ALIGN_MASK",E,E,N,N],[17,"IMAGE_SCN_LNK_NRELOC_OVFL",E,"The section contains extended relocations.",N,N],[17,"IMAGE_SCN_MEM_DISCARDABLE",E,"The section can be discarded as needed.",N,N],[17,"IMAGE_SCN_MEM_NOT_CACHED",E,"The section cannot be cached.",N,N],[17,"IMAGE_SCN_MEM_NOT_PAGED",E,"The section is not pageable.",N,N],[17,"IMAGE_SCN_MEM_SHARED",E,"The section can be shared in memory.",N,N],[17,"IMAGE_SCN_MEM_EXECUTE",E,"The section can be executed as code.",N,N],[17,"IMAGE_SCN_MEM_READ",E,"The section can be read.",N,N],[17,"IMAGE_SCN_MEM_WRITE",E,"The section can be written to.",N,N],[11,"parse",E,E,122,[[[R[6]],[R[6]]],[R[2]]]],[11,R[389],E,E,122,[[["self"]],[[R[7],[R[6]]],[R[2],[R[7]]]]]],[11,R[390],E,E,122,[[["self"],[R[6]]],[R[2]]]],[11,"name",E,E,122,[[["self"]],[[R[2],["str"]],["str"]]]],[11,R[364],E,E,122,[[["self"]],[[R[364]],[R[2],[R[364]]]]]],[0,R[365],R[332],E,N,N],[3,R[552],R[440],E,N,N],[12,R[366],E,E,123,N],[12,"size",E,E,123,N],[3,R[553],E,E,N,N],[12,R[365],E,E,124,N],[17,"SIZEOF_DATA_DIRECTORY",E,E,N,N],[11,"parse",E,E,123,[[[R[6]]],[R[2]]]],[11,"parse",E,E,124,[[[R[6]],[R[6]]],[R[2]]]],[11,"get_export_table",E,E,124,[[["self"]],[R[7]]]],[11,"get_import_table",E,E,124,[[["self"]],[R[7]]]],[11,"get_resource_table",E,E,124,[[["self"]],[R[7]]]],[11,"get_exception_table",E,E,124,[[["self"]],[R[7]]]],[11,"get_certificate_table",E,E,124,[[["self"]],[R[7]]]],[11,"get_base_relocation_table",E,E,124,[[["self"]],[R[7]]]],[11,"get_debug_table",E,E,124,[[["self"]],[R[7]]]],[11,"get_architecture",E,E,124,[[["self"]],[R[7]]]],[11,"get_global_ptr",E,E,124,[[["self"]],[R[7]]]],[11,"get_tls_table",E,E,124,[[["self"]],[R[7]]]],[11,"get_load_config_table",E,E,124,[[["self"]],[R[7]]]],[11,"get_bound_import_table",E,E,124,[[["self"]],[R[7]]]],[11,"get_import_address_table",E,E,124,[[["self"]],[R[7]]]],[11,"get_delay_import_descriptor",E,E,124,[[["self"]],[R[7]]]],[11,"get_clr_runtime_header",E,E,124,[[["self"]],[R[7]]]],[0,"export",R[332],E,N,N],[3,R[554],R[369],E,N,N],[12,"export_flags",E,E,125,N],[12,R[367],E,E,125,N],[12,R[378],E,E,125,N],[12,R[368],E,E,125,N],[12,"name_rva",E,E,125,N],[12,"ordinal_base",E,E,125,N],[12,"address_table_entries",E,E,125,N],[12,"number_of_name_pointers",E,E,125,N],[12,"export_address_table_rva",E,E,125,N],[12,"name_pointer_rva",E,E,125,N],[12,"ordinal_table_rva",E,E,125,N],[3,R[555],E,"Export data contains the `dll` name which other libraries…",N,N],[12,"name",E,E,126,N],[12,"export_directory_table",E,E,126,N],[12,"export_name_pointer_table",E,E,126,N],[12,"export_ordinal_table",E,E,126,N],[12,"export_address_table",E,E,126,N],[3,"Export",E,"An exported symbol in this binary, contains synthetic data…",N,N],[12,"name",E,E,127,N],[12,"offset",E,E,127,N],[12,"rva",E,E,127,N],[12,"size",E,E,127,N],[12,R[372],E,E,127,N],[4,R[556],E,E,N,N],[13,"ExportRVA",E,E,128,N],[13,"ForwarderRVA",E,E,128,N],[4,R[557],E,"PE binaries have two kinds of reexports, either specifying…",N,N],[13,"DLLName",E,E,129,N],[12,"export",R[370],E,129,N],[12,"lib",E,E,129,N],[13,"DLLOrdinal",R[369],E,129,N],[12,"ordinal",R[370],E,129,N],[12,"lib",E,E,129,N],[6,"ExportAddressTable",R[369],E,N,N],[6,"ExportNamePointerTable",E,"Array of rvas into the export name table",N,N],[6,"ExportOrdinalTable",E,"Array of indexes into the export address table.",N,N],[17,"SIZEOF_EXPORT_DIRECTORY_TABLE",E,E,N,N],[17,"SIZEOF_EXPORT_ADDRESS_TABLE_ENTRY",E,E,N,N],[11,"parse",E,E,125,[[[R[6]]],[R[2]]]],[11,"parse",E,E,126,[[["u32"],[R[376]]],[[R[371]],[R[2],[R[371]]]]]],[11,"parse",E,E,129,[[[R[6]]],[[R[2],[R[372]]],[R[372]]]]],[11,"parse",E,E,127,[[["u32"],[R[371]]],[[R[2],["vec"]],["vec",["export"]]]]],[0,"import",R[332],E,N,N],[3,R[558],R[441],E,N,N],[12,"hint",E,E,130,N],[12,"name",E,E,130,N],[3,R[559],E,E,N,N],[12,"import_lookup_table_rva",E,E,131,N],[12,R[367],E,E,131,N],[12,"forwarder_chain",E,E,131,N],[12,"name_rva",E,E,131,N],[12,"import_address_table_rva",E,E,131,N],[3,R[560],E,E,N,N],[12,"import_directory_entry",E,E,132,N],[12,"name",E,"Computed",132,N],[12,"import_lookup_table",E,"The import lookup table is a vector of either ordinals, or…",132,N],[12,"import_address_table",E,"Computed",132,N],[3,R[561],E,"Contains a list of synthesized import data for this…",N,N],[12,R[373],E,E,133,N],[3,"Import",E,"A synthesized symbol import, the name is pre-indexed, and…",N,N],[12,"name",E,E,134,N],[12,"dll",E,E,134,N],[12,"ordinal",E,E,134,N],[12,"offset",E,E,134,N],[12,"rva",E,E,134,N],[12,"size",E,E,134,N],[4,R[562],E,E,N,N],[13,"OrdinalNumber",E,E,135,N],[13,"HintNameTableRVA",E,E,135,N],[6,"ImportLookupTable",E,E,N,N],[6,"ImportAddressTable",E,E,N,N],[17,"IMPORT_BY_ORDINAL_32",E,E,N,N],[17,"IMPORT_BY_ORDINAL_64",E,E,N,N],[17,"IMPORT_RVA_MASK_32",E,E,N,N],[17,"IMPORT_RVA_MASK_64",E,E,N,N],[17,"SIZEOF_IMPORT_DIRECTORY_ENTRY",E,E,N,N],[8,"Bitfield",E,E,N,N],[10,"is_ordinal",E,E,136,[[["self"]],["bool"]]],[10,"to_ordinal",E,E,136,[[["self"]],["u16"]]],[10,"to_rva",E,E,136,[[["self"]],["u32"]]],[10,"size_of",E,E,136,[[],[R[6]]]],[10,"is_zero",E,E,136,[[["self"]],["bool"]]],[11,"parse",E,E,135,[[["u32"],[R[6]]],[[R[374]],[R[2],[R[374]]]]]],[11,"is_null",E,E,131,[[["self"]],["bool"]]],[11,"parse",E,E,132,[[["importdirectoryentry"],["u32"]],[[R[2],[R[375]]],[R[375]]]]],[11,"parse",E,E,133,[[["u32"],[R[376]]],[[R[2],[R[377]]],[R[377]]]]],[11,"parse",E,E,134,[[[R[377]]],[[R[2],["vec"]],["vec",["import"]]]]],[0,"debug",R[332],E,N,N],[3,R[563],R[442],E,N,N],[12,"image_debug_directory",E,E,137,N],[12,"codeview_pdb70_debug_info",E,E,137,N],[3,R[564],E,E,N,N],[12,R[363],E,E,138,N],[12,R[367],E,E,138,N],[12,R[378],E,E,138,N],[12,R[368],E,E,138,N],[12,"data_type",E,E,138,N],[12,"size_of_data",E,E,138,N],[12,"address_of_raw_data",E,E,138,N],[12,R[379],E,E,138,N],[3,R[565],E,E,N,N],[12,"codeview_signature",E,E,139,N],[12,R[329],E,E,139,N],[12,"age",E,E,139,N],[12,"filename",E,E,139,N],[17,"IMAGE_DEBUG_TYPE_UNKNOWN",E,E,N,N],[17,"IMAGE_DEBUG_TYPE_COFF",E,E,N,N],[17,"IMAGE_DEBUG_TYPE_CODEVIEW",E,E,N,N],[17,"IMAGE_DEBUG_TYPE_FPO",E,E,N,N],[17,"IMAGE_DEBUG_TYPE_MISC",E,E,N,N],[17,"IMAGE_DEBUG_TYPE_EXCEPTION",E,E,N,N],[17,"IMAGE_DEBUG_TYPE_FIXUP",E,E,N,N],[17,"IMAGE_DEBUG_TYPE_BORLAND",E,E,N,N],[17,"CODEVIEW_PDB70_MAGIC",E,E,N,N],[17,"CODEVIEW_PDB20_MAGIC",E,E,N,N],[17,"CODEVIEW_CV50_MAGIC",E,E,N,N],[17,"CODEVIEW_CV41_MAGIC",E,E,N,N],[11,"parse",E,E,137,[[["u32"],[R[376]]],[R[2]]]],[11,"guid",E,"Return this executable's debugging GUID, suitable for…",137,[[["self"]],[R[7]]]],[11,"parse",E,E,139,[[[R[463]]],[[R[2],[R[7]]],[R[7]]]]],[0,"exception",R[332],"Exception handling and stack unwinding for x64.",N,N],[3,R[566],R[443],"An unwind entry for a range of a function.",N,N],[12,"begin_address",E,"Function start address.",140,N],[12,"end_address",E,"Function end address.",140,N],[12,"unwind_info_address",E,"Unwind info address.",140,N],[3,R[588],E,"Iterator over runtime function entries in `ExceptionData`.",N,N],[3,"Register",E,"An x64 register used during unwinding.",N,N],[12,"0",E,E,141,N],[3,R[567],E,"An unwind operation that is executed at a particular place…",N,N],[12,"code_offset",E,"Offset of the corresponding instruction in the function…",142,N],[12,"operation",E,"The operation that was performed by the code in the prolog.",142,N],[3,R[589],E,"An iterator over unwind codes for a function or part of a…",N,N],[3,R[568],E,"Unwind information for a function or portion of a function.",N,N],[12,"version",E,"Version of this unwind info.",143,N],[12,"size_of_prolog",E,"Length of the function prolog in bytes.",143,N],[12,"frame_register",E,"The nonvolatile register used as the frame pointer of this…",143,N],[12,"frame_register_offset",E,"Offset from RSP that is applied to the FP register when it…",143,N],[12,"chained_info",E,"A record pointing to chained unwind information.",143,N],[12,"handler",E,"An exception or termination handler called as part of the…",143,N],[3,R[572],E,"Exception handling and stack unwind information for…",N,N],[4,R[569],E,"An unsigned offset to a value in the local stack frame.",N,N],[13,"RSP",E,"Offset from the current RSP, that is, the lowest address…",144,N],[13,"FP",E,"Offset from the value of the frame pointer register.",144,N],[4,R[570],E,"An unwind operation corresponding to code in the function…",N,N],[13,"PushNonVolatile",E,"Push a nonvolatile integer register, decrementing `RSP` by…",145,N],[13,"Alloc",E,"Allocate a fixed-size area on the stack.",145,N],[13,"SetFPRegister",E,"Establish the frame pointer register by setting the…",145,N],[13,"SaveNonVolatile",E,"Save a nonvolatile integer register on the stack using a…",145,N],[13,"SaveXMM",E,"Save the lower 64 bits of a nonvolatile XMM register on…",145,N],[13,"Epilog",E,"Describes the function epilog.",145,N],[13,"SaveXMM128",E,"Save all 128 bits of a nonvolatile XMM register on the…",145,N],[13,"PushMachineFrame",E,"Push a machine frame. This is used to record the effect of…",145,N],[13,"Noop",E,"A reserved operation without effect.",145,N],[4,R[571],E,"A language-specific handler that is called as part of the…",N,N],[13,"ExceptionHandler",E,"The image-relative address of an exception handler and its…",146,N],[13,"TerminationHandler",E,"The image-relative address of a termination handler and…",146,N],[11,"name",E,"Returns the x64 register name.",141,[[],["str"]]],[11,"parse",E,"Parses unwind information from the image at the given…",143,[[[R[6]]],[R[2]]]],[11,"unwind_codes",E,"Returns an iterator over unwind codes in this unwind info.",143,[[["self"]],[R[464]]]],[11,"parse",E,"Parses exception data from the image at the given offset.",147,[[["u32"],[R[376]]],[R[2]]]],[11,"len",E,"The number of function entries described by this exception…",147,[[["self"]],[R[6]]]],[11,R[380],E,"Indicating whether there are functions in this entry.",147,[[["self"]],["bool"]]],[11,"functions",E,"Iterates all function entries in order of their code offset.",147,[[["self"]],["runtimefunctioniterator"]]],[11,"get_function",E,"Returns the function at the given index.",147,[[["self"],[R[6]]],[[R[381]],[R[2],[R[381]]]]]],[11,"find_function",E,"Performs a binary search to find a function entry covering…",147,[[["u32"],["self"]],[[R[2],[R[7]]],[R[7],[R[381]]]]]],[11,"get_unwind_info",E,"Resolves unwind information for the given function entry.",147,[[[R[381]],["self"]],[[R[2],[R[382]]],[R[382]]]]],[0,"symbol",R[332],E,N,N],[3,"Symbol",R[444],"A COFF symbol.",N,N],[12,"name",E,"The name of the symbol.",148,N],[12,"value",E,"The value that is associated with the symbol.",148,N],[12,"section_number",E,"A one-based index into the section table. Zero and…",148,N],[12,"typ",E,"A number that represents type.",148,N],[12,"storage_class",E,"An enumerated value that represents storage class.",148,N],[12,"number_of_aux_symbols",E,"The number of auxiliary symbol table entries that follow…",148,N],[3,R[573],E,"Auxiliary symbol record for function definitions.",N,N],[12,R[385],E,"The symbol-table index of the corresponding `.bf` (begin…",149,N],[12,"total_size",E,"The size of the executable code for the function itself.",149,N],[12,"pointer_to_line_number",E,"The file offset of the first COFF line-number entry for…",149,N],[12,R[384],E,"The symbol-table index of the record for the next function.",149,N],[12,"unused",E,R[383],149,N],[3,R[574],E,"Auxiliary symbol record for symbols with storage class…",N,N],[12,"unused1",E,R[383],150,N],[12,"line_number",E,"The actual ordinal line number within the source file,…",150,N],[12,"unused2",E,R[383],150,N],[12,R[384],E,"The symbol-table index of the next `.bf` symbol record.",150,N],[12,"unused3",E,R[383],150,N],[3,R[575],E,"Auxiliary symbol record for weak external symbols.",N,N],[12,R[385],E,"The symbol-table index of the symbol to be linked if an…",151,N],[12,R[363],E,"Flags that control how the symbol should be linked.",151,N],[12,"unused",E,R[383],151,N],[3,R[576],E,"Auxiliary symbol record for section definitions.",N,N],[12,"length",E,"The size of section data; the same as `size_of_raw_data`…",152,N],[12,R[386],E,"The number of relocation entries for the section.",152,N],[12,"number_of_line_numbers",E,"The number of line-number entries for the section.",152,N],[12,"checksum",E,"The checksum for communal data.",152,N],[12,"number",E,"One-based index into the section table for the associated…",152,N],[12,"selection",E,"The COMDAT selection number.",152,N],[12,"unused",E,R[383],152,N],[3,R[577],E,"A COFF symbol table.",N,N],[3,R[387],E,"An iterator for COFF symbols.",N,N],[17,"COFF_SYMBOL_SIZE",E,"Size of a single symbol in the COFF Symbol Table.",N,N],[17,"IMAGE_SYM_UNDEFINED",E,"The symbol record is not yet assigned a section. A `value`…",N,N],[17,"IMAGE_SYM_ABSOLUTE",E,"The symbol has an absolute (non-relocatable) `value` and…",N,N],[17,"IMAGE_SYM_DEBUG",E,"The symbol provides general type or debugging information…",N,N],[17,"IMAGE_SYM_TYPE_NULL",E,"No type information or unknown base type. Microsoft tools…",N,N],[17,"IMAGE_SYM_TYPE_VOID",E,"No valid type; used with void pointers and functions",N,N],[17,"IMAGE_SYM_TYPE_CHAR",E,"A character (signed byte)",N,N],[17,"IMAGE_SYM_TYPE_SHORT",E,"A 2-byte signed integer",N,N],[17,"IMAGE_SYM_TYPE_INT",E,"A natural integer type (normally 4 bytes in Windows)",N,N],[17,"IMAGE_SYM_TYPE_LONG",E,"A 4-byte signed integer",N,N],[17,"IMAGE_SYM_TYPE_FLOAT",E,"A 4-byte floating-point number",N,N],[17,"IMAGE_SYM_TYPE_DOUBLE",E,"An 8-byte floating-point number",N,N],[17,"IMAGE_SYM_TYPE_STRUCT",E,"A structure",N,N],[17,"IMAGE_SYM_TYPE_UNION",E,"A union",N,N],[17,"IMAGE_SYM_TYPE_ENUM",E,"An enumerated type",N,N],[17,"IMAGE_SYM_TYPE_MOE",E,"A member of enumeration (a specific value)",N,N],[17,"IMAGE_SYM_TYPE_BYTE",E,"A byte; unsigned 1-byte integer",N,N],[17,"IMAGE_SYM_TYPE_WORD",E,"A word; unsigned 2-byte integer",N,N],[17,"IMAGE_SYM_TYPE_UINT",E,"An unsigned integer of natural size (normally, 4 bytes)",N,N],[17,"IMAGE_SYM_TYPE_DWORD",E,"An unsigned 4-byte integer",N,N],[17,"IMAGE_SYM_DTYPE_NULL",E,"No derived type; the symbol is a simple scalar variable.",N,N],[17,"IMAGE_SYM_DTYPE_POINTER",E,"The symbol is a pointer to base type.",N,N],[17,"IMAGE_SYM_DTYPE_FUNCTION",E,"The symbol is a function that returns a base type.",N,N],[17,"IMAGE_SYM_DTYPE_ARRAY",E,"The symbol is an array of base type.",N,N],[17,"IMAGE_SYM_TYPE_MASK",E,E,N,N],[17,"IMAGE_SYM_DTYPE_SHIFT",E,E,N,N],[17,"IMAGE_SYM_CLASS_END_OF_FUNCTION",E,"A special symbol that represents the end of function, for…",N,N],[17,"IMAGE_SYM_CLASS_NULL",E,"No assigned storage class.",N,N],[17,"IMAGE_SYM_CLASS_AUTOMATIC",E,"The automatic (stack) variable.",N,N],[17,"IMAGE_SYM_CLASS_EXTERNAL",E,"A value that Microsoft tools use for external symbols.",N,N],[17,"IMAGE_SYM_CLASS_STATIC",E,"A static symbol.",N,N],[17,"IMAGE_SYM_CLASS_REGISTER",E,"A register variable.",N,N],[17,"IMAGE_SYM_CLASS_EXTERNAL_DEF",E,"A symbol that is defined externally.",N,N],[17,"IMAGE_SYM_CLASS_LABEL",E,"A code label that is defined within the module.",N,N],[17,"IMAGE_SYM_CLASS_UNDEFINED_LABEL",E,"A reference to a code label that is not defined.",N,N],[17,"IMAGE_SYM_CLASS_MEMBER_OF_STRUCT",E,"The structure member.",N,N],[17,"IMAGE_SYM_CLASS_ARGUMENT",E,"A formal argument (parameter) of a function.",N,N],[17,"IMAGE_SYM_CLASS_STRUCT_TAG",E,"The structure tag-name entry.",N,N],[17,"IMAGE_SYM_CLASS_MEMBER_OF_UNION",E,"A union member.",N,N],[17,"IMAGE_SYM_CLASS_UNION_TAG",E,"The Union tag-name entry.",N,N],[17,"IMAGE_SYM_CLASS_TYPE_DEFINITION",E,"A Typedef entry.",N,N],[17,"IMAGE_SYM_CLASS_UNDEFINED_STATIC",E,"A static data declaration.",N,N],[17,"IMAGE_SYM_CLASS_ENUM_TAG",E,"An enumerated type tagname entry.",N,N],[17,"IMAGE_SYM_CLASS_MEMBER_OF_ENUM",E,"A member of an enumeration.",N,N],[17,"IMAGE_SYM_CLASS_REGISTER_PARAM",E,"A register parameter.",N,N],[17,"IMAGE_SYM_CLASS_BIT_FIELD",E,"A bit-field reference.",N,N],[17,"IMAGE_SYM_CLASS_BLOCK",E,"A .bb (beginning of block) or .eb (end of block) record.",N,N],[17,"IMAGE_SYM_CLASS_FUNCTION",E,"A value that Microsoft tools use for symbol records that…",N,N],[17,"IMAGE_SYM_CLASS_END_OF_STRUCT",E,"An end-of-structure entry.",N,N],[17,"IMAGE_SYM_CLASS_FILE",E,"The source-file symbol record.",N,N],[17,"IMAGE_SYM_CLASS_SECTION",E,"A definition of a section (Microsoft tools use STATIC…",N,N],[17,"IMAGE_SYM_CLASS_WEAK_EXTERNAL",E,"A weak external.",N,N],[17,"IMAGE_SYM_CLASS_CLR_TOKEN",E,"A CLR token symbol.",N,N],[17,"IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY",E,"Indicates that no library search for the symbol should be…",N,N],[17,"IMAGE_WEAK_EXTERN_SEARCH_LIBRARY",E,"Indicates that a library search for the symbol should be…",N,N],[17,"IMAGE_WEAK_EXTERN_SEARCH_ALIAS",E,"Indicates that the symbol is an alias for the symbol given…",N,N],[17,"IMAGE_COMDAT_SELECT_NODUPLICATES",E,"If this symbol is already defined, the linker issues a…",N,N],[17,"IMAGE_COMDAT_SELECT_ANY",E,"Any section that defines the same COMDAT symbol can be…",N,N],[17,"IMAGE_COMDAT_SELECT_SAME_SIZE",E,R[388],N,N],[17,"IMAGE_COMDAT_SELECT_EXACT_MATCH",E,R[388],N,N],[17,"IMAGE_COMDAT_SELECT_ASSOCIATIVE",E,"The section is linked if a certain other COMDAT section is…",N,N],[17,"IMAGE_COMDAT_SELECT_LARGEST",E,"The linker chooses the largest definition from among all…",N,N],[11,"parse",E,"Parse the symbol at the given offset.",148,[[[R[6]]],[R[2]]]],[11,"name",E,"Returns the symbol name.",148,[[[R[5]],["self"]],[[R[2],["str"]],["str"]]]],[11,R[389],E,"Return the strtab offset of the symbol name.",148,[[["self"]],[["u32"],[R[7],["u32"]]]]],[11,R[390],E,"Set the strtab offset of the symbol name.",148,[[["self"],["u32"]]]],[11,"base_type",E,"Return the base type of the symbol.",148,[[["self"]],["u16"]]],[11,"derived_type",E,"Return the derived type of the symbol.",148,[[["self"]],["u16"]]],[11,"is_function_definition",E,"Return true for function definitions.",148,[[["self"]],["bool"]]],[11,"is_weak_external",E,"Return true for weak external symbols.",148,[[["self"]],["bool"]]],[11,"is_file",E,"Return true for file symbol records.",148,[[["self"]],["bool"]]],[11,"is_section_definition",E,"Return true for section definitions.",148,[[["self"]],["bool"]]],[11,"parse",E,"Parse a COFF symbol table at the given offset.",153,[[[R[6]]],[[R[330]],[R[2],[R[330]]]]]],[11,"size",E,"Get the size in bytes of the symbol table.",153,[[[R[6]]],[R[6]]]],[11,"get",E,"Get the symbol at the given index.",153,[[["self"],[R[6]]],[R[7]]]],[11,"aux_function_definition",E,"Get the auxiliary symbol record for a function definition.",153,[[["self"],[R[6]]],[[R[7],[R[391]]],[R[391]]]]],[11,"aux_begin_and_end_function",E,"Get the auxiliary symbol record for a `.bf` or `.ef`…",153,[[["self"],[R[6]]],[[R[7],[R[392]]],[R[392]]]]],[11,"aux_weak_external",E,"Get the auxiliary symbol record for a weak external.",153,[[["self"],[R[6]]],[[R[393]],[R[7],[R[393]]]]]],[11,"aux_file",E,"Get the file name from the auxiliary symbol record for a…",153,[[["self"],[R[6]]],[[R[7],["str"]],["str"]]]],[11,"aux_section_definition",E,"Get the auxiliary symbol record for a section definition.",153,[[["self"],[R[6]]],[[R[7],[R[394]]],[R[394]]]]],[11,"iter",E,"Return an iterator for the COFF symbols.",153,[[["self"]],[R[326]]]],[0,R[395],R[332],E,N,N],[3,R[578],R[445],"A COFF relocation.",N,N],[12,R[366],E,"The address of the item to which relocation is applied.",154,N],[12,"symbol_table_index",E,"A zero-based index into the symbol table.",154,N],[12,"typ",E,"A value that indicates the kind of relocation that should…",154,N],[3,R[579],E,"An iterator for COFF relocations.",N,N],[17,"COFF_RELOCATION_SIZE",E,"Size of a single COFF relocation.",N,N],[17,"IMAGE_REL_I386_ABSOLUTE",E,R[397],N,N],[17,"IMAGE_REL_I386_DIR16",E,R[396],N,N],[17,"IMAGE_REL_I386_REL16",E,R[396],N,N],[17,"IMAGE_REL_I386_DIR32",E,"The target's 32-bit VA.",N,N],[17,"IMAGE_REL_I386_DIR32NB",E,"The target's 32-bit RVA.",N,N],[17,"IMAGE_REL_I386_SEG12",E,R[396],N,N],[17,"IMAGE_REL_I386_SECTION",E,R[398],N,N],[17,"IMAGE_REL_I386_SECREL",E,R[399],N,N],[17,"IMAGE_REL_I386_TOKEN",E,"The CLR token.",N,N],[17,"IMAGE_REL_I386_SECREL7",E,"A 7-bit offset from the base of the section that contains…",N,N],[17,"IMAGE_REL_I386_REL32",E,"The 32-bit relative displacement to the target.",N,N],[17,"IMAGE_REL_AMD64_ABSOLUTE",E,R[397],N,N],[17,"IMAGE_REL_AMD64_ADDR64",E,"The 64-bit VA of the relocation target.",N,N],[17,"IMAGE_REL_AMD64_ADDR32",E,"The 32-bit VA of the relocation target.",N,N],[17,"IMAGE_REL_AMD64_ADDR32NB",E,"The 32-bit address without an image base (RVA).",N,N],[17,"IMAGE_REL_AMD64_REL32",E,"The 32-bit relative address from the byte following the…",N,N],[17,"IMAGE_REL_AMD64_REL32_1",E,"The 32-bit address relative to byte distance 1 from the…",N,N],[17,"IMAGE_REL_AMD64_REL32_2",E,"The 32-bit address relative to byte distance 2 from the…",N,N],[17,"IMAGE_REL_AMD64_REL32_3",E,"The 32-bit address relative to byte distance 3 from the…",N,N],[17,"IMAGE_REL_AMD64_REL32_4",E,"The 32-bit address relative to byte distance 4 from the…",N,N],[17,"IMAGE_REL_AMD64_REL32_5",E,"The 32-bit address relative to byte distance 5 from the…",N,N],[17,"IMAGE_REL_AMD64_SECTION",E,R[398],N,N],[17,"IMAGE_REL_AMD64_SECREL",E,R[399],N,N],[17,"IMAGE_REL_AMD64_SECREL7",E,"A 7-bit unsigned offset from the base of the section that…",N,N],[17,"IMAGE_REL_AMD64_TOKEN",E,"CLR tokens.",N,N],[17,"IMAGE_REL_AMD64_SREL32",E,"A 32-bit signed span-dependent value emitted into the…",N,N],[17,"IMAGE_REL_AMD64_PAIR",E,"A pair that must immediately follow every span-dependent…",N,N],[17,"IMAGE_REL_AMD64_SSPAN32",E,"A 32-bit signed span-dependent value that is applied at…",N,N],[11,"parse",E,"Parse a COFF relocation table at the given offset.",155,[[[R[6]]],[[R[2],[R[364]]],[R[364]]]]],[0,"utils",R[332],E,N,N],[5,"is_in_range","goblin::pe::utils",E,N,[[[R[6]]],["bool"]]],[5,"find_offset",E,E,N,[[["u32"],[R[6]]],[[R[7],[R[6]]],[R[6]]]]],[5,"find_offset_or",E,E,N,[[["str"],["u32"],[R[6]]],[[R[2],[R[6]]],[R[6]]]]],[5,"try_name",E,E,N,[[["u32"],[R[6]]],[[R[2],["str"]],["str"]]]],[5,"get_data",E,E,N,[[["u32"],[R[376]]],[R[2]]]],[11,"parse",R[332],"Reads a PE binary from the underlying `bytes`",111,[[],[R[2]]]],[11,"parse",E,"Reads a COFF object from the underlying `bytes`",112,[[],[R[2]]]],[0,"archive",R[4],"Implements a simple parser and extractor for a Unix Archive.",N,N],[3,R[580],R[446],"A Unix Archive Header - meta data for the file/byte…",N,N],[12,"identifier",E,"The identifier, or name for this file/whatever.",156,N],[12,R[400],E,"The timestamp for when this file was last modified. Base…",156,N],[12,"owner_id",E,"The file's owner's id. Base 10 string number",156,N],[12,"group_id",E,"The file's group id. Base 10 string number",156,N],[12,"mode",E,"The file's permissions mode. Base 8 number number",156,N],[12,"file_size",E,"The size of this file. Base 10 string number",156,N],[12,"terminator",E,"The file header's terminator, always `0x60 0x0A`",156,N],[3,"Header",E,E,N,N],[12,"name",E,E,157,N],[12,"size",E,E,157,N],[3,"Member",E,"Represents a single entry in the archive",N,N],[12,R[16],E,"The entry header",158,N],[12,"header_offset",E,R[401],158,N],[12,"offset",E,R[401],158,N],[3,"Index",E,"The special index member signified by the name `'/'`. The…",N,N],[12,"size",E,"Big Endian number of symbol_indexes and strings",159,N],[12,"symbol_indexes",E,"Big Endian u32 index into the archive for this symbol…",159,N],[12,R[5],E,"Set of zero-terminated strings indexed by above. Number of…",159,N],[3,R[0],E,"An in-memory representation of a parsed Unix Archive",N,N],[4,R[581],E,"The type of symbol index can be present in an archive. Can…",N,N],[13,"None",E,"No symbol index present.",160,N],[13,"SysV",E,"SystemV/GNU style symbol index, used on Windows as well.",160,N],[13,"Windows",E,"Windows specific extension of SysV symbol index, so called…",160,N],[13,"BSD",E,"BSD style symbol index.",160,N],[17,"SIZEOF_MAGIC",E,E,N,N],[17,"MAGIC",E,"The magic number of a Unix Archive",N,N],[17,"SIZEOF_HEADER",E,E,N,N],[11,"name",E,E,156,[[["self"]],[["str"],[R[2],["str"]]]]],[11,"size",E,E,156,[[["self"]],[[R[2],[R[6]]],[R[6]]]]],[11,"parse",E,"Tries to parse the header in `R`, as well as the offset in…",158,[[[R[6]]],[["member"],[R[2],["member"]]]]],[11,"size",E,"The size of the Member's content, in bytes. Does not…",158,[[["self"]],[R[6]]]],[11,"extended_name",E,"The member name, accounting for SysV and BSD `ar` filename…",158,[[["self"]],["str"]]],[11,"raw_name",E,"The untrimmed raw member name, i.e., includes…",158,[[["self"]],["str"]]],[11,"parse_sysv_index",E,"Parses the given byte buffer into an Index. NB: the buffer…",159,[[],[R[2]]]],[11,"parse_bsd_symdef",E,"Parses the given byte buffer into an Index, in BSD style…",159,[[],[R[2]]]],[11,"parse_windows_linker_member",E,E,159,[[],[R[2]]]],[11,"parse",E,E,161,[[],[["archive"],[R[2],["archive"]]]]],[11,"get",E,"Get the member named `member` in this archive, if any",161,[[["str"],["self"]],[[R[7],["member"]],["member"]]]],[11,"extract",E,"Returns a slice of the raw bytes for the given `member` in…",161,[[["str"],["self"]],[R[2]]]],[11,"summarize",E,"Gets a summary of this archive, returning a list of…",161,[[["self"]],["vec"]]],[11,"members",E,"Get the list of member names in this archive",161,[[["self"]],[["str"],["vec",["str"]]]]],[11,"member_of_symbol",E,"Returns the member's name which contains the given…",161,[[["str"],["self"]],[[R[7],["str"]],["str"]]]],[11,"parse",R[4],"Tries to parse an `Object` from `bytes`",2,[[],[["object"],[R[2],["object"]]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[403],E,E,0,[[[U]],[R[2]]]],[11,R[404],E,E,0,[[],[R[2]]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[402],E,E,0,[[["self"]],[T]]],[11,R[408],E,E,0,[[["self"]],["typeid"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[403],E,E,1,[[[U]],[R[2]]]],[11,R[404],E,E,1,[[],[R[2]]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[402],E,E,1,[[["self"]],[T]]],[11,R[408],E,E,1,[[["self"]],["typeid"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[403],E,E,2,[[[U]],[R[2]]]],[11,R[404],E,E,2,[[],[R[2]]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[402],E,E,2,[[["self"]],[T]]],[11,R[408],E,E,2,[[["self"]],["typeid"]]],[11,"into",R[405],E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[432],E,E,3,[[["self"]],["string"]]],[11,R[403],E,E,3,[[[U]],[R[2]]]],[11,R[404],E,E,3,[[],[R[2]]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[402],E,E,3,[[["self"]],[T]]],[11,R[408],E,E,3,[[["self"]],["typeid"]]],[11,"into",R[406],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[403],E,E,4,[[[U]],[R[2]]]],[11,R[404],E,E,4,[[],[R[2]]]],[11,"borrow",E,E,4,[[["self"]],[T]]],[11,R[402],E,E,4,[[["self"]],[T]]],[11,R[408],E,E,4,[[["self"]],["typeid"]]],[11,"into",R[407],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[410],E,E,5,[[["self"]],[T]]],[11,R[409],E,E,5,[[["self"],[T]]]],[11,R[403],E,E,5,[[[U]],[R[2]]]],[11,R[404],E,E,5,[[],[R[2]]]],[11,"borrow",E,E,5,[[["self"]],[T]]],[11,R[402],E,E,5,[[["self"]],[T]]],[11,R[408],E,E,5,[[["self"]],["typeid"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[410],E,E,6,[[["self"]],[T]]],[11,R[409],E,E,6,[[["self"],[T]]]],[11,R[403],E,E,6,[[[U]],[R[2]]]],[11,R[404],E,E,6,[[],[R[2]]]],[11,"borrow",E,E,6,[[["self"]],[T]]],[11,R[402],E,E,6,[[["self"]],[T]]],[11,R[408],E,E,6,[[["self"]],["typeid"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[410],E,E,7,[[["self"]],[T]]],[11,R[409],E,E,7,[[["self"],[T]]]],[11,R[403],E,E,7,[[[U]],[R[2]]]],[11,R[404],E,E,7,[[],[R[2]]]],[11,"borrow",E,E,7,[[["self"]],[T]]],[11,R[402],E,E,7,[[["self"]],[T]]],[11,R[408],E,E,7,[[["self"]],["typeid"]]],[11,"into",R[45],E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[403],E,E,8,[[[U]],[R[2]]]],[11,R[404],E,E,8,[[],[R[2]]]],[11,"borrow",E,E,8,[[["self"]],[T]]],[11,R[402],E,E,8,[[["self"]],[T]]],[11,R[408],E,E,8,[[["self"]],["typeid"]]],[11,"into",R[17],E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[410],E,E,9,[[["self"]],[T]]],[11,R[409],E,E,9,[[["self"],[T]]]],[11,R[403],E,E,9,[[[U]],[R[2]]]],[11,R[404],E,E,9,[[],[R[2]]]],[11,"borrow",E,E,9,[[["self"]],[T]]],[11,R[402],E,E,9,[[["self"]],[T]]],[11,R[408],E,E,9,[[["self"]],["typeid"]]],[11,"into",R[411],E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[410],E,E,10,[[["self"]],[T]]],[11,R[409],E,E,10,[[["self"],[T]]]],[11,R[403],E,E,10,[[[U]],[R[2]]]],[11,R[404],E,E,10,[[],[R[2]]]],[11,"borrow",E,E,10,[[["self"]],[T]]],[11,R[402],E,E,10,[[["self"]],[T]]],[11,R[408],E,E,10,[[["self"]],["typeid"]]],[11,"into",R[412],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[410],E,E,11,[[["self"]],[T]]],[11,R[409],E,E,11,[[["self"],[T]]]],[11,R[403],E,E,11,[[[U]],[R[2]]]],[11,R[404],E,E,11,[[],[R[2]]]],[11,"borrow",E,E,11,[[["self"]],[T]]],[11,R[402],E,E,11,[[["self"]],[T]]],[11,R[408],E,E,11,[[["self"]],["typeid"]]],[11,"into",R[51],E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[410],E,E,12,[[["self"]],[T]]],[11,R[409],E,E,12,[[["self"],[T]]]],[11,R[403],E,E,12,[[[U]],[R[2]]]],[11,R[404],E,E,12,[[],[R[2]]]],[11,"borrow",E,E,12,[[["self"]],[T]]],[11,R[402],E,E,12,[[["self"]],[T]]],[11,R[408],E,E,12,[[["self"]],["typeid"]]],[11,"into",R[413],E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[410],E,E,13,[[["self"]],[T]]],[11,R[409],E,E,13,[[["self"],[T]]]],[11,R[403],E,E,13,[[[U]],[R[2]]]],[11,R[404],E,E,13,[[],[R[2]]]],[11,"borrow",E,E,13,[[["self"]],[T]]],[11,R[402],E,E,13,[[["self"]],[T]]],[11,R[408],E,E,13,[[["self"]],["typeid"]]],[11,"into",R[414],E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[410],E,E,14,[[["self"]],[T]]],[11,R[409],E,E,14,[[["self"],[T]]]],[11,R[403],E,E,14,[[[U]],[R[2]]]],[11,R[404],E,E,14,[[],[R[2]]]],[11,"borrow",E,E,14,[[["self"]],[T]]],[11,R[402],E,E,14,[[["self"]],[T]]],[11,R[408],E,E,14,[[["self"]],["typeid"]]],[11,"into",R[87],E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[410],E,E,15,[[["self"]],[T]]],[11,R[409],E,E,15,[[["self"],[T]]]],[11,R[403],E,E,15,[[[U]],[R[2]]]],[11,R[404],E,E,15,[[],[R[2]]]],[11,"borrow",E,E,15,[[["self"]],[T]]],[11,R[402],E,E,15,[[["self"]],[T]]],[11,R[408],E,E,15,[[["self"]],["typeid"]]],[11,"into",R[415],E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[410],E,E,16,[[["self"]],[T]]],[11,R[409],E,E,16,[[["self"],[T]]]],[11,R[403],E,E,16,[[[U]],[R[2]]]],[11,R[404],E,E,16,[[],[R[2]]]],[11,"borrow",E,E,16,[[["self"]],[T]]],[11,R[402],E,E,16,[[["self"]],[T]]],[11,R[408],E,E,16,[[["self"]],["typeid"]]],[11,"into",R[416],E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[410],E,E,17,[[["self"]],[T]]],[11,R[409],E,E,17,[[["self"],[T]]]],[11,R[403],E,E,17,[[[U]],[R[2]]]],[11,R[404],E,E,17,[[],[R[2]]]],[11,"borrow",E,E,17,[[["self"]],[T]]],[11,R[402],E,E,17,[[["self"]],[T]]],[11,R[408],E,E,17,[[["self"]],["typeid"]]],[11,"into",R[107],E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[410],E,E,18,[[["self"]],[T]]],[11,R[409],E,E,18,[[["self"],[T]]]],[11,R[403],E,E,18,[[[U]],[R[2]]]],[11,R[404],E,E,18,[[],[R[2]]]],[11,"borrow",E,E,18,[[["self"]],[T]]],[11,R[402],E,E,18,[[["self"]],[T]]],[11,R[408],E,E,18,[[["self"]],["typeid"]]],[11,"into",R[417],E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[410],E,E,19,[[["self"]],[T]]],[11,R[409],E,E,19,[[["self"],[T]]]],[11,R[403],E,E,19,[[[U]],[R[2]]]],[11,R[404],E,E,19,[[],[R[2]]]],[11,"borrow",E,E,19,[[["self"]],[T]]],[11,R[402],E,E,19,[[["self"]],[T]]],[11,R[408],E,E,19,[[["self"]],["typeid"]]],[11,"into",R[418],E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[410],E,E,20,[[["self"]],[T]]],[11,R[409],E,E,20,[[["self"],[T]]]],[11,R[403],E,E,20,[[[U]],[R[2]]]],[11,R[404],E,E,20,[[],[R[2]]]],[11,"borrow",E,E,20,[[["self"]],[T]]],[11,R[402],E,E,20,[[["self"]],[T]]],[11,R[408],E,E,20,[[["self"]],["typeid"]]],[11,"into",R[113],E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[410],E,E,21,[[["self"]],[T]]],[11,R[409],E,E,21,[[["self"],[T]]]],[11,R[403],E,E,21,[[[U]],[R[2]]]],[11,R[404],E,E,21,[[],[R[2]]]],[11,"borrow",E,E,21,[[["self"]],[T]]],[11,R[402],E,E,21,[[["self"]],[T]]],[11,R[408],E,E,21,[[["self"]],["typeid"]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[403],E,E,24,[[[U]],[R[2]]]],[11,R[404],E,E,24,[[],[R[2]]]],[11,"borrow",E,E,24,[[["self"]],[T]]],[11,R[402],E,E,24,[[["self"]],[T]]],[11,R[408],E,E,24,[[["self"]],["typeid"]]],[11,"into",E,E,162,[[],[U]]],[11,"from",E,E,162,[[[T]],[T]]],[11,R[423],E,E,162,[[],["i"]]],[11,R[403],E,E,162,[[[U]],[R[2]]]],[11,R[404],E,E,162,[[],[R[2]]]],[11,"borrow",E,E,162,[[["self"]],[T]]],[11,R[402],E,E,162,[[["self"]],[T]]],[11,R[408],E,E,162,[[["self"]],["typeid"]]],[11,"into",R[419],E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[410],E,E,22,[[["self"]],[T]]],[11,R[409],E,E,22,[[["self"],[T]]]],[11,R[403],E,E,22,[[[U]],[R[2]]]],[11,R[404],E,E,22,[[],[R[2]]]],[11,"borrow",E,E,22,[[["self"]],[T]]],[11,R[402],E,E,22,[[["self"]],[T]]],[11,R[408],E,E,22,[[["self"]],["typeid"]]],[11,"into",R[420],E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[410],E,E,23,[[["self"]],[T]]],[11,R[409],E,E,23,[[["self"],[T]]]],[11,R[403],E,E,23,[[[U]],[R[2]]]],[11,R[404],E,E,23,[[],[R[2]]]],[11,"borrow",E,E,23,[[["self"]],[T]]],[11,R[402],E,E,23,[[["self"]],[T]]],[11,R[408],E,E,23,[[["self"]],["typeid"]]],[11,"into",R[141],E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[410],E,E,25,[[["self"]],[T]]],[11,R[409],E,E,25,[[["self"],[T]]]],[11,R[403],E,E,25,[[[U]],[R[2]]]],[11,R[404],E,E,25,[[],[R[2]]]],[11,"borrow",E,E,25,[[["self"]],[T]]],[11,R[402],E,E,25,[[["self"]],[T]]],[11,R[408],E,E,25,[[["self"]],["typeid"]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[403],E,E,26,[[[U]],[R[2]]]],[11,R[404],E,E,26,[[],[R[2]]]],[11,"borrow",E,E,26,[[["self"]],[T]]],[11,R[402],E,E,26,[[["self"]],[T]]],[11,R[408],E,E,26,[[["self"]],["typeid"]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[403],E,E,27,[[[U]],[R[2]]]],[11,R[404],E,E,27,[[],[R[2]]]],[11,"borrow",E,E,27,[[["self"]],[T]]],[11,R[402],E,E,27,[[["self"]],[T]]],[11,R[408],E,E,27,[[["self"]],["typeid"]]],[11,"into",R[421],E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[410],E,E,28,[[["self"]],[T]]],[11,R[409],E,E,28,[[["self"],[T]]]],[11,R[403],E,E,28,[[[U]],[R[2]]]],[11,R[404],E,E,28,[[],[R[2]]]],[11,"borrow",E,E,28,[[["self"]],[T]]],[11,R[402],E,E,28,[[["self"]],[T]]],[11,R[408],E,E,28,[[["self"]],["typeid"]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[403],E,E,29,[[[U]],[R[2]]]],[11,R[404],E,E,29,[[],[R[2]]]],[11,"borrow",E,E,29,[[["self"]],[T]]],[11,R[402],E,E,29,[[["self"]],[T]]],[11,R[408],E,E,29,[[["self"]],["typeid"]]],[11,"into",R[422],E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[410],E,E,30,[[["self"]],[T]]],[11,R[409],E,E,30,[[["self"],[T]]]],[11,R[403],E,E,30,[[[U]],[R[2]]]],[11,R[404],E,E,30,[[],[R[2]]]],[11,"borrow",E,E,30,[[["self"]],[T]]],[11,R[402],E,E,30,[[["self"]],[T]]],[11,R[408],E,E,30,[[["self"]],["typeid"]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[403],E,E,31,[[[U]],[R[2]]]],[11,R[404],E,E,31,[[],[R[2]]]],[11,"borrow",E,E,31,[[["self"]],[T]]],[11,R[402],E,E,31,[[["self"]],[T]]],[11,R[408],E,E,31,[[["self"]],["typeid"]]],[11,"into",R[160],E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[410],E,E,32,[[["self"]],[T]]],[11,R[409],E,E,32,[[["self"],[T]]]],[11,R[403],E,E,32,[[[U]],[R[2]]]],[11,R[404],E,E,32,[[],[R[2]]]],[11,"borrow",E,E,32,[[["self"]],[T]]],[11,R[402],E,E,32,[[["self"]],[T]]],[11,R[408],E,E,32,[[["self"]],["typeid"]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[403],E,E,37,[[[U]],[R[2]]]],[11,R[404],E,E,37,[[],[R[2]]]],[11,"borrow",E,E,37,[[["self"]],[T]]],[11,R[402],E,E,37,[[["self"]],[T]]],[11,R[408],E,E,37,[[["self"]],["typeid"]]],[11,"into",E,E,163,[[],[U]]],[11,"from",E,E,163,[[[T]],[T]]],[11,R[423],E,E,163,[[],["i"]]],[11,R[403],E,E,163,[[[U]],[R[2]]]],[11,R[404],E,E,163,[[],[R[2]]]],[11,"borrow",E,E,163,[[["self"]],[T]]],[11,R[402],E,E,163,[[["self"]],[T]]],[11,R[408],E,E,163,[[["self"]],["typeid"]]],[11,"into",R[424],E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[410],E,E,33,[[["self"]],[T]]],[11,R[409],E,E,33,[[["self"],[T]]]],[11,R[403],E,E,33,[[[U]],[R[2]]]],[11,R[404],E,E,33,[[],[R[2]]]],[11,"borrow",E,E,33,[[["self"]],[T]]],[11,R[402],E,E,33,[[["self"]],[T]]],[11,R[408],E,E,33,[[["self"]],["typeid"]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[410],E,E,34,[[["self"]],[T]]],[11,R[409],E,E,34,[[["self"],[T]]]],[11,R[403],E,E,34,[[[U]],[R[2]]]],[11,R[404],E,E,34,[[],[R[2]]]],[11,"borrow",E,E,34,[[["self"]],[T]]],[11,R[402],E,E,34,[[["self"]],[T]]],[11,R[408],E,E,34,[[["self"]],["typeid"]]],[11,"into",R[425],E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[410],E,E,35,[[["self"]],[T]]],[11,R[409],E,E,35,[[["self"],[T]]]],[11,R[403],E,E,35,[[[U]],[R[2]]]],[11,R[404],E,E,35,[[],[R[2]]]],[11,"borrow",E,E,35,[[["self"]],[T]]],[11,R[402],E,E,35,[[["self"]],[T]]],[11,R[408],E,E,35,[[["self"]],["typeid"]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[410],E,E,36,[[["self"]],[T]]],[11,R[409],E,E,36,[[["self"],[T]]]],[11,R[403],E,E,36,[[[U]],[R[2]]]],[11,R[404],E,E,36,[[],[R[2]]]],[11,"borrow",E,E,36,[[["self"]],[T]]],[11,R[402],E,E,36,[[["self"]],[T]]],[11,R[408],E,E,36,[[["self"]],["typeid"]]],[11,"into",R[426],E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[410],E,E,38,[[["self"]],[T]]],[11,R[409],E,E,38,[[["self"],[T]]]],[11,R[403],E,E,38,[[[U]],[R[2]]]],[11,R[404],E,E,38,[[],[R[2]]]],[11,"borrow",E,E,38,[[["self"]],[T]]],[11,R[402],E,E,38,[[["self"]],[T]]],[11,R[408],E,E,38,[[["self"]],["typeid"]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[410],E,E,39,[[["self"]],[T]]],[11,R[409],E,E,39,[[["self"],[T]]]],[11,R[403],E,E,39,[[[U]],[R[2]]]],[11,R[404],E,E,39,[[],[R[2]]]],[11,"borrow",E,E,39,[[["self"]],[T]]],[11,R[402],E,E,39,[[["self"]],[T]]],[11,R[408],E,E,39,[[["self"]],["typeid"]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[423],E,E,40,[[],["i"]]],[11,R[403],E,E,40,[[[U]],[R[2]]]],[11,R[404],E,E,40,[[],[R[2]]]],[11,"borrow",E,E,40,[[["self"]],[T]]],[11,R[402],E,E,40,[[["self"]],[T]]],[11,R[408],E,E,40,[[["self"]],["typeid"]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[423],E,E,41,[[],["i"]]],[11,R[403],E,E,41,[[[U]],[R[2]]]],[11,R[404],E,E,41,[[],[R[2]]]],[11,"borrow",E,E,41,[[["self"]],[T]]],[11,R[402],E,E,41,[[["self"]],[T]]],[11,R[408],E,E,41,[[["self"]],["typeid"]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[403],E,E,42,[[[U]],[R[2]]]],[11,R[404],E,E,42,[[],[R[2]]]],[11,"borrow",E,E,42,[[["self"]],[T]]],[11,R[402],E,E,42,[[["self"]],[T]]],[11,R[408],E,E,42,[[["self"]],["typeid"]]],[11,"into",R[427],E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[403],E,E,43,[[[U]],[R[2]]]],[11,R[404],E,E,43,[[],[R[2]]]],[11,"borrow",E,E,43,[[["self"]],[T]]],[11,R[402],E,E,43,[[["self"]],[T]]],[11,R[408],E,E,43,[[["self"]],["typeid"]]],[11,"into",R[428],E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[403],E,E,44,[[[U]],[R[2]]]],[11,R[404],E,E,44,[[],[R[2]]]],[11,"borrow",E,E,44,[[["self"]],[T]]],[11,R[402],E,E,44,[[["self"]],[T]]],[11,R[408],E,E,44,[[["self"]],["typeid"]]],[11,"into",R[230],E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[403],E,E,45,[[[U]],[R[2]]]],[11,R[404],E,E,45,[[],[R[2]]]],[11,"borrow",E,E,45,[[["self"]],[T]]],[11,R[402],E,E,45,[[["self"]],[T]]],[11,R[408],E,E,45,[[["self"]],["typeid"]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[403],E,E,46,[[[U]],[R[2]]]],[11,R[404],E,E,46,[[],[R[2]]]],[11,"borrow",E,E,46,[[["self"]],[T]]],[11,R[402],E,E,46,[[["self"]],[T]]],[11,R[408],E,E,46,[[["self"]],["typeid"]]],[11,"into",E,E,164,[[],[U]]],[11,"from",E,E,164,[[[T]],[T]]],[11,R[423],E,E,164,[[],["i"]]],[11,R[403],E,E,164,[[[U]],[R[2]]]],[11,R[404],E,E,164,[[],[R[2]]]],[11,"borrow",E,E,164,[[["self"]],[T]]],[11,R[402],E,E,164,[[["self"]],[T]]],[11,R[408],E,E,164,[[["self"]],["typeid"]]],[11,"into",E,E,165,[[],[U]]],[11,"from",E,E,165,[[[T]],[T]]],[11,R[423],E,E,165,[[],["i"]]],[11,R[403],E,E,165,[[[U]],[R[2]]]],[11,R[404],E,E,165,[[],[R[2]]]],[11,"borrow",E,E,165,[[["self"]],[T]]],[11,R[402],E,E,165,[[["self"]],[T]]],[11,R[408],E,E,165,[[["self"]],["typeid"]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[403],E,E,47,[[[U]],[R[2]]]],[11,R[404],E,E,47,[[],[R[2]]]],[11,"borrow",E,E,47,[[["self"]],[T]]],[11,R[402],E,E,47,[[["self"]],[T]]],[11,R[408],E,E,47,[[["self"]],["typeid"]]],[11,"into",R[429],E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[410],E,E,48,[[["self"]],[T]]],[11,R[409],E,E,48,[[["self"],[T]]]],[11,R[403],E,E,48,[[[U]],[R[2]]]],[11,R[404],E,E,48,[[],[R[2]]]],[11,"borrow",E,E,48,[[["self"]],[T]]],[11,R[402],E,E,48,[[["self"]],[T]]],[11,R[408],E,E,48,[[["self"]],["typeid"]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[410],E,E,49,[[["self"]],[T]]],[11,R[409],E,E,49,[[["self"],[T]]]],[11,R[403],E,E,49,[[[U]],[R[2]]]],[11,R[404],E,E,49,[[],[R[2]]]],[11,"borrow",E,E,49,[[["self"]],[T]]],[11,R[402],E,E,49,[[["self"]],[T]]],[11,R[408],E,E,49,[[["self"]],["typeid"]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[410],E,E,50,[[["self"]],[T]]],[11,R[409],E,E,50,[[["self"],[T]]]],[11,R[403],E,E,50,[[[U]],[R[2]]]],[11,R[404],E,E,50,[[],[R[2]]]],[11,"borrow",E,E,50,[[["self"]],[T]]],[11,R[402],E,E,50,[[["self"]],[T]]],[11,R[408],E,E,50,[[["self"]],["typeid"]]],[11,"into",R[430],E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[410],E,E,51,[[["self"]],[T]]],[11,R[409],E,E,51,[[["self"],[T]]]],[11,R[403],E,E,51,[[[U]],[R[2]]]],[11,R[404],E,E,51,[[],[R[2]]]],[11,"borrow",E,E,51,[[["self"]],[T]]],[11,R[402],E,E,51,[[["self"]],[T]]],[11,R[408],E,E,51,[[["self"]],["typeid"]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[410],E,E,52,[[["self"]],[T]]],[11,R[409],E,E,52,[[["self"],[T]]]],[11,R[403],E,E,52,[[[U]],[R[2]]]],[11,R[404],E,E,52,[[],[R[2]]]],[11,"borrow",E,E,52,[[["self"]],[T]]],[11,R[402],E,E,52,[[["self"]],[T]]],[11,R[408],E,E,52,[[["self"]],["typeid"]]],[11,"into",R[431],E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[410],E,E,53,[[["self"]],[T]]],[11,R[409],E,E,53,[[["self"],[T]]]],[11,R[432],E,E,53,[[["self"]],["string"]]],[11,R[403],E,E,53,[[[U]],[R[2]]]],[11,R[404],E,E,53,[[],[R[2]]]],[11,"borrow",E,E,53,[[["self"]],[T]]],[11,R[402],E,E,53,[[["self"]],[T]]],[11,R[408],E,E,53,[[["self"]],["typeid"]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[410],E,E,54,[[["self"]],[T]]],[11,R[409],E,E,54,[[["self"],[T]]]],[11,R[403],E,E,54,[[[U]],[R[2]]]],[11,R[404],E,E,54,[[],[R[2]]]],[11,"borrow",E,E,54,[[["self"]],[T]]],[11,R[402],E,E,54,[[["self"]],[T]]],[11,R[408],E,E,54,[[["self"]],["typeid"]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[410],E,E,55,[[["self"]],[T]]],[11,R[409],E,E,55,[[["self"],[T]]]],[11,R[403],E,E,55,[[[U]],[R[2]]]],[11,R[404],E,E,55,[[],[R[2]]]],[11,"borrow",E,E,55,[[["self"]],[T]]],[11,R[402],E,E,55,[[["self"]],[T]]],[11,R[408],E,E,55,[[["self"]],["typeid"]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[410],E,E,56,[[["self"]],[T]]],[11,R[409],E,E,56,[[["self"],[T]]]],[11,R[403],E,E,56,[[[U]],[R[2]]]],[11,R[404],E,E,56,[[],[R[2]]]],[11,"borrow",E,E,56,[[["self"]],[T]]],[11,R[402],E,E,56,[[["self"]],[T]]],[11,R[408],E,E,56,[[["self"]],["typeid"]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[410],E,E,57,[[["self"]],[T]]],[11,R[409],E,E,57,[[["self"],[T]]]],[11,R[403],E,E,57,[[[U]],[R[2]]]],[11,R[404],E,E,57,[[],[R[2]]]],[11,"borrow",E,E,57,[[["self"]],[T]]],[11,R[402],E,E,57,[[["self"]],[T]]],[11,R[408],E,E,57,[[["self"]],["typeid"]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[410],E,E,58,[[["self"]],[T]]],[11,R[409],E,E,58,[[["self"],[T]]]],[11,R[403],E,E,58,[[[U]],[R[2]]]],[11,R[404],E,E,58,[[],[R[2]]]],[11,"borrow",E,E,58,[[["self"]],[T]]],[11,R[402],E,E,58,[[["self"]],[T]]],[11,R[408],E,E,58,[[["self"]],["typeid"]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[410],E,E,59,[[["self"]],[T]]],[11,R[409],E,E,59,[[["self"],[T]]]],[11,R[403],E,E,59,[[[U]],[R[2]]]],[11,R[404],E,E,59,[[],[R[2]]]],[11,"borrow",E,E,59,[[["self"]],[T]]],[11,R[402],E,E,59,[[["self"]],[T]]],[11,R[408],E,E,59,[[["self"]],["typeid"]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[410],E,E,60,[[["self"]],[T]]],[11,R[409],E,E,60,[[["self"],[T]]]],[11,R[403],E,E,60,[[[U]],[R[2]]]],[11,R[404],E,E,60,[[],[R[2]]]],[11,"borrow",E,E,60,[[["self"]],[T]]],[11,R[402],E,E,60,[[["self"]],[T]]],[11,R[408],E,E,60,[[["self"]],["typeid"]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[410],E,E,61,[[["self"]],[T]]],[11,R[409],E,E,61,[[["self"],[T]]]],[11,R[403],E,E,61,[[[U]],[R[2]]]],[11,R[404],E,E,61,[[],[R[2]]]],[11,"borrow",E,E,61,[[["self"]],[T]]],[11,R[402],E,E,61,[[["self"]],[T]]],[11,R[408],E,E,61,[[["self"]],["typeid"]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[410],E,E,62,[[["self"]],[T]]],[11,R[409],E,E,62,[[["self"],[T]]]],[11,R[403],E,E,62,[[[U]],[R[2]]]],[11,R[404],E,E,62,[[],[R[2]]]],[11,"borrow",E,E,62,[[["self"]],[T]]],[11,R[402],E,E,62,[[["self"]],[T]]],[11,R[408],E,E,62,[[["self"]],["typeid"]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[410],E,E,63,[[["self"]],[T]]],[11,R[409],E,E,63,[[["self"],[T]]]],[11,R[403],E,E,63,[[[U]],[R[2]]]],[11,R[404],E,E,63,[[],[R[2]]]],[11,"borrow",E,E,63,[[["self"]],[T]]],[11,R[402],E,E,63,[[["self"]],[T]]],[11,R[408],E,E,63,[[["self"]],["typeid"]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[410],E,E,64,[[["self"]],[T]]],[11,R[409],E,E,64,[[["self"],[T]]]],[11,R[403],E,E,64,[[[U]],[R[2]]]],[11,R[404],E,E,64,[[],[R[2]]]],[11,"borrow",E,E,64,[[["self"]],[T]]],[11,R[402],E,E,64,[[["self"]],[T]]],[11,R[408],E,E,64,[[["self"]],["typeid"]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[410],E,E,65,[[["self"]],[T]]],[11,R[409],E,E,65,[[["self"],[T]]]],[11,R[403],E,E,65,[[[U]],[R[2]]]],[11,R[404],E,E,65,[[],[R[2]]]],[11,"borrow",E,E,65,[[["self"]],[T]]],[11,R[402],E,E,65,[[["self"]],[T]]],[11,R[408],E,E,65,[[["self"]],["typeid"]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[410],E,E,66,[[["self"]],[T]]],[11,R[409],E,E,66,[[["self"],[T]]]],[11,R[403],E,E,66,[[[U]],[R[2]]]],[11,R[404],E,E,66,[[],[R[2]]]],[11,"borrow",E,E,66,[[["self"]],[T]]],[11,R[402],E,E,66,[[["self"]],[T]]],[11,R[408],E,E,66,[[["self"]],["typeid"]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[410],E,E,67,[[["self"]],[T]]],[11,R[409],E,E,67,[[["self"],[T]]]],[11,R[403],E,E,67,[[[U]],[R[2]]]],[11,R[404],E,E,67,[[],[R[2]]]],[11,"borrow",E,E,67,[[["self"]],[T]]],[11,R[402],E,E,67,[[["self"]],[T]]],[11,R[408],E,E,67,[[["self"]],["typeid"]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[410],E,E,68,[[["self"]],[T]]],[11,R[409],E,E,68,[[["self"],[T]]]],[11,R[403],E,E,68,[[[U]],[R[2]]]],[11,R[404],E,E,68,[[],[R[2]]]],[11,"borrow",E,E,68,[[["self"]],[T]]],[11,R[402],E,E,68,[[["self"]],[T]]],[11,R[408],E,E,68,[[["self"]],["typeid"]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[410],E,E,69,[[["self"]],[T]]],[11,R[409],E,E,69,[[["self"],[T]]]],[11,R[403],E,E,69,[[[U]],[R[2]]]],[11,R[404],E,E,69,[[],[R[2]]]],[11,"borrow",E,E,69,[[["self"]],[T]]],[11,R[402],E,E,69,[[["self"]],[T]]],[11,R[408],E,E,69,[[["self"]],["typeid"]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[410],E,E,70,[[["self"]],[T]]],[11,R[409],E,E,70,[[["self"],[T]]]],[11,R[403],E,E,70,[[[U]],[R[2]]]],[11,R[404],E,E,70,[[],[R[2]]]],[11,"borrow",E,E,70,[[["self"]],[T]]],[11,R[402],E,E,70,[[["self"]],[T]]],[11,R[408],E,E,70,[[["self"]],["typeid"]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[410],E,E,71,[[["self"]],[T]]],[11,R[409],E,E,71,[[["self"],[T]]]],[11,R[403],E,E,71,[[[U]],[R[2]]]],[11,R[404],E,E,71,[[],[R[2]]]],[11,"borrow",E,E,71,[[["self"]],[T]]],[11,R[402],E,E,71,[[["self"]],[T]]],[11,R[408],E,E,71,[[["self"]],["typeid"]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[410],E,E,72,[[["self"]],[T]]],[11,R[409],E,E,72,[[["self"],[T]]]],[11,R[403],E,E,72,[[[U]],[R[2]]]],[11,R[404],E,E,72,[[],[R[2]]]],[11,"borrow",E,E,72,[[["self"]],[T]]],[11,R[402],E,E,72,[[["self"]],[T]]],[11,R[408],E,E,72,[[["self"]],["typeid"]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[410],E,E,73,[[["self"]],[T]]],[11,R[409],E,E,73,[[["self"],[T]]]],[11,R[403],E,E,73,[[[U]],[R[2]]]],[11,R[404],E,E,73,[[],[R[2]]]],[11,"borrow",E,E,73,[[["self"]],[T]]],[11,R[402],E,E,73,[[["self"]],[T]]],[11,R[408],E,E,73,[[["self"]],["typeid"]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[410],E,E,74,[[["self"]],[T]]],[11,R[409],E,E,74,[[["self"],[T]]]],[11,R[403],E,E,74,[[[U]],[R[2]]]],[11,R[404],E,E,74,[[],[R[2]]]],[11,"borrow",E,E,74,[[["self"]],[T]]],[11,R[402],E,E,74,[[["self"]],[T]]],[11,R[408],E,E,74,[[["self"]],["typeid"]]],[11,"into",E,E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[410],E,E,75,[[["self"]],[T]]],[11,R[409],E,E,75,[[["self"],[T]]]],[11,R[403],E,E,75,[[[U]],[R[2]]]],[11,R[404],E,E,75,[[],[R[2]]]],[11,"borrow",E,E,75,[[["self"]],[T]]],[11,R[402],E,E,75,[[["self"]],[T]]],[11,R[408],E,E,75,[[["self"]],["typeid"]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[410],E,E,76,[[["self"]],[T]]],[11,R[409],E,E,76,[[["self"],[T]]]],[11,R[403],E,E,76,[[[U]],[R[2]]]],[11,R[404],E,E,76,[[],[R[2]]]],[11,"borrow",E,E,76,[[["self"]],[T]]],[11,R[402],E,E,76,[[["self"]],[T]]],[11,R[408],E,E,76,[[["self"]],["typeid"]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[410],E,E,77,[[["self"]],[T]]],[11,R[409],E,E,77,[[["self"],[T]]]],[11,R[403],E,E,77,[[[U]],[R[2]]]],[11,R[404],E,E,77,[[],[R[2]]]],[11,"borrow",E,E,77,[[["self"]],[T]]],[11,R[402],E,E,77,[[["self"]],[T]]],[11,R[408],E,E,77,[[["self"]],["typeid"]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[410],E,E,78,[[["self"]],[T]]],[11,R[409],E,E,78,[[["self"],[T]]]],[11,R[403],E,E,78,[[[U]],[R[2]]]],[11,R[404],E,E,78,[[],[R[2]]]],[11,"borrow",E,E,78,[[["self"]],[T]]],[11,R[402],E,E,78,[[["self"]],[T]]],[11,R[408],E,E,78,[[["self"]],["typeid"]]],[11,"into",E,E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[410],E,E,79,[[["self"]],[T]]],[11,R[409],E,E,79,[[["self"],[T]]]],[11,R[403],E,E,79,[[[U]],[R[2]]]],[11,R[404],E,E,79,[[],[R[2]]]],[11,"borrow",E,E,79,[[["self"]],[T]]],[11,R[402],E,E,79,[[["self"]],[T]]],[11,R[408],E,E,79,[[["self"]],["typeid"]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[410],E,E,80,[[["self"]],[T]]],[11,R[409],E,E,80,[[["self"],[T]]]],[11,R[403],E,E,80,[[[U]],[R[2]]]],[11,R[404],E,E,80,[[],[R[2]]]],[11,"borrow",E,E,80,[[["self"]],[T]]],[11,R[402],E,E,80,[[["self"]],[T]]],[11,R[408],E,E,80,[[["self"]],["typeid"]]],[11,"into",E,E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[410],E,E,81,[[["self"]],[T]]],[11,R[409],E,E,81,[[["self"],[T]]]],[11,R[403],E,E,81,[[[U]],[R[2]]]],[11,R[404],E,E,81,[[],[R[2]]]],[11,"borrow",E,E,81,[[["self"]],[T]]],[11,R[402],E,E,81,[[["self"]],[T]]],[11,R[408],E,E,81,[[["self"]],["typeid"]]],[11,"into",E,E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[410],E,E,82,[[["self"]],[T]]],[11,R[409],E,E,82,[[["self"],[T]]]],[11,R[403],E,E,82,[[[U]],[R[2]]]],[11,R[404],E,E,82,[[],[R[2]]]],[11,"borrow",E,E,82,[[["self"]],[T]]],[11,R[402],E,E,82,[[["self"]],[T]]],[11,R[408],E,E,82,[[["self"]],["typeid"]]],[11,"into",E,E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[410],E,E,83,[[["self"]],[T]]],[11,R[409],E,E,83,[[["self"],[T]]]],[11,R[403],E,E,83,[[[U]],[R[2]]]],[11,R[404],E,E,83,[[],[R[2]]]],[11,"borrow",E,E,83,[[["self"]],[T]]],[11,R[402],E,E,83,[[["self"]],[T]]],[11,R[408],E,E,83,[[["self"]],["typeid"]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[410],E,E,84,[[["self"]],[T]]],[11,R[409],E,E,84,[[["self"],[T]]]],[11,R[403],E,E,84,[[[U]],[R[2]]]],[11,R[404],E,E,84,[[],[R[2]]]],[11,"borrow",E,E,84,[[["self"]],[T]]],[11,R[402],E,E,84,[[["self"]],[T]]],[11,R[408],E,E,84,[[["self"]],["typeid"]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[410],E,E,85,[[["self"]],[T]]],[11,R[409],E,E,85,[[["self"],[T]]]],[11,R[403],E,E,85,[[[U]],[R[2]]]],[11,R[404],E,E,85,[[],[R[2]]]],[11,"borrow",E,E,85,[[["self"]],[T]]],[11,R[402],E,E,85,[[["self"]],[T]]],[11,R[408],E,E,85,[[["self"]],["typeid"]]],[11,"into",E,E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[410],E,E,86,[[["self"]],[T]]],[11,R[409],E,E,86,[[["self"],[T]]]],[11,R[403],E,E,86,[[[U]],[R[2]]]],[11,R[404],E,E,86,[[],[R[2]]]],[11,"borrow",E,E,86,[[["self"]],[T]]],[11,R[402],E,E,86,[[["self"]],[T]]],[11,R[408],E,E,86,[[["self"]],["typeid"]]],[11,"into",E,E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[410],E,E,87,[[["self"]],[T]]],[11,R[409],E,E,87,[[["self"],[T]]]],[11,R[403],E,E,87,[[[U]],[R[2]]]],[11,R[404],E,E,87,[[],[R[2]]]],[11,"borrow",E,E,87,[[["self"]],[T]]],[11,R[402],E,E,87,[[["self"]],[T]]],[11,R[408],E,E,87,[[["self"]],["typeid"]]],[11,"into",E,E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[410],E,E,88,[[["self"]],[T]]],[11,R[409],E,E,88,[[["self"],[T]]]],[11,R[403],E,E,88,[[[U]],[R[2]]]],[11,R[404],E,E,88,[[],[R[2]]]],[11,"borrow",E,E,88,[[["self"]],[T]]],[11,R[402],E,E,88,[[["self"]],[T]]],[11,R[408],E,E,88,[[["self"]],["typeid"]]],[11,"into",E,E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[410],E,E,89,[[["self"]],[T]]],[11,R[409],E,E,89,[[["self"],[T]]]],[11,R[403],E,E,89,[[[U]],[R[2]]]],[11,R[404],E,E,89,[[],[R[2]]]],[11,"borrow",E,E,89,[[["self"]],[T]]],[11,R[402],E,E,89,[[["self"]],[T]]],[11,R[408],E,E,89,[[["self"]],["typeid"]]],[11,"into",E,E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[410],E,E,90,[[["self"]],[T]]],[11,R[409],E,E,90,[[["self"],[T]]]],[11,R[403],E,E,90,[[[U]],[R[2]]]],[11,R[404],E,E,90,[[],[R[2]]]],[11,"borrow",E,E,90,[[["self"]],[T]]],[11,R[402],E,E,90,[[["self"]],[T]]],[11,R[408],E,E,90,[[["self"]],["typeid"]]],[11,"into",E,E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[410],E,E,91,[[["self"]],[T]]],[11,R[409],E,E,91,[[["self"],[T]]]],[11,R[403],E,E,91,[[[U]],[R[2]]]],[11,R[404],E,E,91,[[],[R[2]]]],[11,"borrow",E,E,91,[[["self"]],[T]]],[11,R[402],E,E,91,[[["self"]],[T]]],[11,R[408],E,E,91,[[["self"]],["typeid"]]],[11,"into",E,E,92,[[],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[410],E,E,92,[[["self"]],[T]]],[11,R[409],E,E,92,[[["self"],[T]]]],[11,R[403],E,E,92,[[[U]],[R[2]]]],[11,R[404],E,E,92,[[],[R[2]]]],[11,"borrow",E,E,92,[[["self"]],[T]]],[11,R[402],E,E,92,[[["self"]],[T]]],[11,R[408],E,E,92,[[["self"]],["typeid"]]],[11,"into",E,E,93,[[],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[410],E,E,93,[[["self"]],[T]]],[11,R[409],E,E,93,[[["self"],[T]]]],[11,R[403],E,E,93,[[[U]],[R[2]]]],[11,R[404],E,E,93,[[],[R[2]]]],[11,"borrow",E,E,93,[[["self"]],[T]]],[11,R[402],E,E,93,[[["self"]],[T]]],[11,R[408],E,E,93,[[["self"]],["typeid"]]],[11,"into",E,E,94,[[],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[403],E,E,94,[[[U]],[R[2]]]],[11,R[404],E,E,94,[[],[R[2]]]],[11,"borrow",E,E,94,[[["self"]],[T]]],[11,R[402],E,E,94,[[["self"]],[T]]],[11,R[408],E,E,94,[[["self"]],["typeid"]]],[11,"into",E,E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[403],E,E,95,[[[U]],[R[2]]]],[11,R[404],E,E,95,[[],[R[2]]]],[11,"borrow",E,E,95,[[["self"]],[T]]],[11,R[402],E,E,95,[[["self"]],[T]]],[11,R[408],E,E,95,[[["self"]],["typeid"]]],[11,"into",R[433],E,96,[[],[U]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[410],E,E,96,[[["self"]],[T]]],[11,R[409],E,E,96,[[["self"],[T]]]],[11,R[403],E,E,96,[[[U]],[R[2]]]],[11,R[404],E,E,96,[[],[R[2]]]],[11,"borrow",E,E,96,[[["self"]],[T]]],[11,R[402],E,E,96,[[["self"]],[T]]],[11,R[408],E,E,96,[[["self"]],["typeid"]]],[11,"into",E,E,97,[[],[U]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[410],E,E,97,[[["self"]],[T]]],[11,R[409],E,E,97,[[["self"],[T]]]],[11,R[403],E,E,97,[[[U]],[R[2]]]],[11,R[404],E,E,97,[[],[R[2]]]],[11,"borrow",E,E,97,[[["self"]],[T]]],[11,R[402],E,E,97,[[["self"]],[T]]],[11,R[408],E,E,97,[[["self"]],["typeid"]]],[11,"into",E,E,98,[[],[U]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[410],E,E,98,[[["self"]],[T]]],[11,R[409],E,E,98,[[["self"],[T]]]],[11,R[403],E,E,98,[[[U]],[R[2]]]],[11,R[404],E,E,98,[[],[R[2]]]],[11,"borrow",E,E,98,[[["self"]],[T]]],[11,R[402],E,E,98,[[["self"]],[T]]],[11,R[408],E,E,98,[[["self"]],["typeid"]]],[11,"into",E,E,99,[[],[U]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[410],E,E,99,[[["self"]],[T]]],[11,R[409],E,E,99,[[["self"],[T]]]],[11,R[403],E,E,99,[[[U]],[R[2]]]],[11,R[404],E,E,99,[[],[R[2]]]],[11,"borrow",E,E,99,[[["self"]],[T]]],[11,R[402],E,E,99,[[["self"]],[T]]],[11,R[408],E,E,99,[[["self"]],["typeid"]]],[11,"into",E,E,166,[[],[U]]],[11,"from",E,E,166,[[[T]],[T]]],[11,R[423],E,E,166,[[],["i"]]],[11,R[403],E,E,166,[[[U]],[R[2]]]],[11,R[404],E,E,166,[[],[R[2]]]],[11,"borrow",E,E,166,[[["self"]],[T]]],[11,R[402],E,E,166,[[["self"]],[T]]],[11,R[408],E,E,166,[[["self"]],["typeid"]]],[11,"into",E,E,100,[[],[U]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[403],E,E,100,[[[U]],[R[2]]]],[11,R[404],E,E,100,[[],[R[2]]]],[11,"borrow",E,E,100,[[["self"]],[T]]],[11,R[402],E,E,100,[[["self"]],[T]]],[11,R[408],E,E,100,[[["self"]],["typeid"]]],[11,"into",R[316],E,101,[[],[U]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[403],E,E,101,[[[U]],[R[2]]]],[11,R[404],E,E,101,[[],[R[2]]]],[11,"borrow",E,E,101,[[["self"]],[T]]],[11,R[402],E,E,101,[[["self"]],[T]]],[11,R[408],E,E,101,[[["self"]],["typeid"]]],[11,"into",E,E,104,[[],[U]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[403],E,E,104,[[[U]],[R[2]]]],[11,R[404],E,E,104,[[],[R[2]]]],[11,"borrow",E,E,104,[[["self"]],[T]]],[11,R[402],E,E,104,[[["self"]],[T]]],[11,R[408],E,E,104,[[["self"]],["typeid"]]],[11,"into",E,E,102,[[],[U]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[403],E,E,102,[[[U]],[R[2]]]],[11,R[404],E,E,102,[[],[R[2]]]],[11,"borrow",E,E,102,[[["self"]],[T]]],[11,R[402],E,E,102,[[["self"]],[T]]],[11,R[408],E,E,102,[[["self"]],["typeid"]]],[11,"into",E,E,103,[[],[U]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[403],E,E,103,[[[U]],[R[2]]]],[11,R[404],E,E,103,[[],[R[2]]]],[11,"borrow",E,E,103,[[["self"]],[T]]],[11,R[402],E,E,103,[[["self"]],[T]]],[11,R[408],E,E,103,[[["self"]],["typeid"]]],[11,"into",R[434],E,105,[[],[U]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[403],E,E,105,[[[U]],[R[2]]]],[11,R[404],E,E,105,[[],[R[2]]]],[11,"borrow",E,E,105,[[["self"]],[T]]],[11,R[402],E,E,105,[[["self"]],[T]]],[11,R[408],E,E,105,[[["self"]],["typeid"]]],[11,"into",E,E,106,[[],[U]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[403],E,E,106,[[[U]],[R[2]]]],[11,R[404],E,E,106,[[],[R[2]]]],[11,"borrow",E,E,106,[[["self"]],[T]]],[11,R[402],E,E,106,[[["self"]],[T]]],[11,R[408],E,E,106,[[["self"]],["typeid"]]],[11,"into",R[435],E,107,[[],[U]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[410],E,E,107,[[["self"]],[T]]],[11,R[409],E,E,107,[[["self"],[T]]]],[11,R[403],E,E,107,[[[U]],[R[2]]]],[11,R[404],E,E,107,[[],[R[2]]]],[11,"borrow",E,E,107,[[["self"]],[T]]],[11,R[402],E,E,107,[[["self"]],[T]]],[11,R[408],E,E,107,[[["self"]],["typeid"]]],[11,"into",R[436],E,167,[[],[U]]],[11,"from",E,E,167,[[[T]],[T]]],[11,R[423],E,E,167,[[],["i"]]],[11,R[403],E,E,167,[[[U]],[R[2]]]],[11,R[404],E,E,167,[[],[R[2]]]],[11,"borrow",E,E,167,[[["self"]],[T]]],[11,R[402],E,E,167,[[["self"]],[T]]],[11,R[408],E,E,167,[[["self"]],["typeid"]]],[11,"into",E,E,108,[[],[U]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[403],E,E,108,[[[U]],[R[2]]]],[11,R[404],E,E,108,[[],[R[2]]]],[11,"borrow",E,E,108,[[["self"]],[T]]],[11,R[402],E,E,108,[[["self"]],[T]]],[11,R[408],E,E,108,[[["self"]],["typeid"]]],[11,"into",E,E,168,[[],[U]]],[11,"from",E,E,168,[[[T]],[T]]],[11,R[423],E,E,168,[[],["i"]]],[11,R[403],E,E,168,[[[U]],[R[2]]]],[11,R[404],E,E,168,[[],[R[2]]]],[11,"borrow",E,E,168,[[["self"]],[T]]],[11,R[402],E,E,168,[[["self"]],[T]]],[11,R[408],E,E,168,[[["self"]],["typeid"]]],[11,"into",E,E,109,[[],[U]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[403],E,E,109,[[[U]],[R[2]]]],[11,R[404],E,E,109,[[],[R[2]]]],[11,"borrow",E,E,109,[[["self"]],[T]]],[11,R[402],E,E,109,[[["self"]],[T]]],[11,R[408],E,E,109,[[["self"]],["typeid"]]],[11,"into",E,E,110,[[],[U]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[403],E,E,110,[[[U]],[R[2]]]],[11,R[404],E,E,110,[[],[R[2]]]],[11,"borrow",E,E,110,[[["self"]],[T]]],[11,R[402],E,E,110,[[["self"]],[T]]],[11,R[408],E,E,110,[[["self"]],["typeid"]]],[11,"into",R[332],E,111,[[],[U]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[403],E,E,111,[[[U]],[R[2]]]],[11,R[404],E,E,111,[[],[R[2]]]],[11,"borrow",E,E,111,[[["self"]],[T]]],[11,R[402],E,E,111,[[["self"]],[T]]],[11,R[408],E,E,111,[[["self"]],["typeid"]]],[11,"into",E,E,112,[[],[U]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[403],E,E,112,[[[U]],[R[2]]]],[11,R[404],E,E,112,[[],[R[2]]]],[11,"borrow",E,E,112,[[["self"]],[T]]],[11,R[402],E,E,112,[[["self"]],[T]]],[11,R[408],E,E,112,[[["self"]],["typeid"]]],[11,"into",R[437],E,113,[[],[U]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[410],E,E,113,[[["self"]],[T]]],[11,R[409],E,E,113,[[["self"],[T]]]],[11,R[403],E,E,113,[[[U]],[R[2]]]],[11,R[404],E,E,113,[[],[R[2]]]],[11,"borrow",E,E,113,[[["self"]],[T]]],[11,R[402],E,E,113,[[["self"]],[T]]],[11,R[408],E,E,113,[[["self"]],["typeid"]]],[11,"into",E,E,114,[[],[U]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[410],E,E,114,[[["self"]],[T]]],[11,R[409],E,E,114,[[["self"],[T]]]],[11,R[403],E,E,114,[[[U]],[R[2]]]],[11,R[404],E,E,114,[[],[R[2]]]],[11,"borrow",E,E,114,[[["self"]],[T]]],[11,R[402],E,E,114,[[["self"]],[T]]],[11,R[408],E,E,114,[[["self"]],["typeid"]]],[11,"into",E,E,115,[[],[U]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[410],E,E,115,[[["self"]],[T]]],[11,R[409],E,E,115,[[["self"],[T]]]],[11,R[403],E,E,115,[[[U]],[R[2]]]],[11,R[404],E,E,115,[[],[R[2]]]],[11,"borrow",E,E,115,[[["self"]],[T]]],[11,R[402],E,E,115,[[["self"]],[T]]],[11,R[408],E,E,115,[[["self"]],["typeid"]]],[11,"into",R[438],E,116,[[],[U]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[410],E,E,116,[[["self"]],[T]]],[11,R[409],E,E,116,[[["self"],[T]]]],[11,R[403],E,E,116,[[[U]],[R[2]]]],[11,R[404],E,E,116,[[],[R[2]]]],[11,"borrow",E,E,116,[[["self"]],[T]]],[11,R[402],E,E,116,[[["self"]],[T]]],[11,R[408],E,E,116,[[["self"]],["typeid"]]],[11,"into",E,E,117,[[],[U]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[410],E,E,117,[[["self"]],[T]]],[11,R[409],E,E,117,[[["self"],[T]]]],[11,R[403],E,E,117,[[[U]],[R[2]]]],[11,R[404],E,E,117,[[],[R[2]]]],[11,"borrow",E,E,117,[[["self"]],[T]]],[11,R[402],E,E,117,[[["self"]],[T]]],[11,R[408],E,E,117,[[["self"]],["typeid"]]],[11,"into",E,E,118,[[],[U]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[410],E,E,118,[[["self"]],[T]]],[11,R[409],E,E,118,[[["self"],[T]]]],[11,R[403],E,E,118,[[[U]],[R[2]]]],[11,R[404],E,E,118,[[],[R[2]]]],[11,"borrow",E,E,118,[[["self"]],[T]]],[11,R[402],E,E,118,[[["self"]],[T]]],[11,R[408],E,E,118,[[["self"]],["typeid"]]],[11,"into",E,E,119,[[],[U]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[410],E,E,119,[[["self"]],[T]]],[11,R[409],E,E,119,[[["self"],[T]]]],[11,R[403],E,E,119,[[[U]],[R[2]]]],[11,R[404],E,E,119,[[],[R[2]]]],[11,"borrow",E,E,119,[[["self"]],[T]]],[11,R[402],E,E,119,[[["self"]],[T]]],[11,R[408],E,E,119,[[["self"]],["typeid"]]],[11,"into",E,E,120,[[],[U]]],[11,"from",E,E,120,[[[T]],[T]]],[11,R[410],E,E,120,[[["self"]],[T]]],[11,R[409],E,E,120,[[["self"],[T]]]],[11,R[403],E,E,120,[[[U]],[R[2]]]],[11,R[404],E,E,120,[[],[R[2]]]],[11,"borrow",E,E,120,[[["self"]],[T]]],[11,R[402],E,E,120,[[["self"]],[T]]],[11,R[408],E,E,120,[[["self"]],["typeid"]]],[11,"into",E,E,121,[[],[U]]],[11,"from",E,E,121,[[[T]],[T]]],[11,R[410],E,E,121,[[["self"]],[T]]],[11,R[409],E,E,121,[[["self"],[T]]]],[11,R[403],E,E,121,[[[U]],[R[2]]]],[11,R[404],E,E,121,[[],[R[2]]]],[11,"borrow",E,E,121,[[["self"]],[T]]],[11,R[402],E,E,121,[[["self"]],[T]]],[11,R[408],E,E,121,[[["self"]],["typeid"]]],[11,"into",R[439],E,122,[[],[U]]],[11,"from",E,E,122,[[[T]],[T]]],[11,R[410],E,E,122,[[["self"]],[T]]],[11,R[409],E,E,122,[[["self"],[T]]]],[11,R[403],E,E,122,[[[U]],[R[2]]]],[11,R[404],E,E,122,[[],[R[2]]]],[11,"borrow",E,E,122,[[["self"]],[T]]],[11,R[402],E,E,122,[[["self"]],[T]]],[11,R[408],E,E,122,[[["self"]],["typeid"]]],[11,"into",R[440],E,123,[[],[U]]],[11,"from",E,E,123,[[[T]],[T]]],[11,R[410],E,E,123,[[["self"]],[T]]],[11,R[409],E,E,123,[[["self"],[T]]]],[11,R[403],E,E,123,[[[U]],[R[2]]]],[11,R[404],E,E,123,[[],[R[2]]]],[11,"borrow",E,E,123,[[["self"]],[T]]],[11,R[402],E,E,123,[[["self"]],[T]]],[11,R[408],E,E,123,[[["self"]],["typeid"]]],[11,"into",E,E,124,[[],[U]]],[11,"from",E,E,124,[[[T]],[T]]],[11,R[410],E,E,124,[[["self"]],[T]]],[11,R[409],E,E,124,[[["self"],[T]]]],[11,R[403],E,E,124,[[[U]],[R[2]]]],[11,R[404],E,E,124,[[],[R[2]]]],[11,"borrow",E,E,124,[[["self"]],[T]]],[11,R[402],E,E,124,[[["self"]],[T]]],[11,R[408],E,E,124,[[["self"]],["typeid"]]],[11,"into",R[369],E,125,[[],[U]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[410],E,E,125,[[["self"]],[T]]],[11,R[409],E,E,125,[[["self"],[T]]]],[11,R[403],E,E,125,[[[U]],[R[2]]]],[11,R[404],E,E,125,[[],[R[2]]]],[11,"borrow",E,E,125,[[["self"]],[T]]],[11,R[402],E,E,125,[[["self"]],[T]]],[11,R[408],E,E,125,[[["self"]],["typeid"]]],[11,"into",E,E,126,[[],[U]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[403],E,E,126,[[[U]],[R[2]]]],[11,R[404],E,E,126,[[],[R[2]]]],[11,"borrow",E,E,126,[[["self"]],[T]]],[11,R[402],E,E,126,[[["self"]],[T]]],[11,R[408],E,E,126,[[["self"]],["typeid"]]],[11,"into",E,E,127,[[],[U]]],[11,"from",E,E,127,[[[T]],[T]]],[11,R[403],E,E,127,[[[U]],[R[2]]]],[11,R[404],E,E,127,[[],[R[2]]]],[11,"borrow",E,E,127,[[["self"]],[T]]],[11,R[402],E,E,127,[[["self"]],[T]]],[11,R[408],E,E,127,[[["self"]],["typeid"]]],[11,"into",E,E,128,[[],[U]]],[11,"from",E,E,128,[[[T]],[T]]],[11,R[403],E,E,128,[[[U]],[R[2]]]],[11,R[404],E,E,128,[[],[R[2]]]],[11,"borrow",E,E,128,[[["self"]],[T]]],[11,R[402],E,E,128,[[["self"]],[T]]],[11,R[408],E,E,128,[[["self"]],["typeid"]]],[11,"into",E,E,129,[[],[U]]],[11,"from",E,E,129,[[[T]],[T]]],[11,R[403],E,E,129,[[[U]],[R[2]]]],[11,R[404],E,E,129,[[],[R[2]]]],[11,"borrow",E,E,129,[[["self"]],[T]]],[11,R[402],E,E,129,[[["self"]],[T]]],[11,R[408],E,E,129,[[["self"]],["typeid"]]],[11,"into",R[441],E,130,[[],[U]]],[11,"from",E,E,130,[[[T]],[T]]],[11,R[410],E,E,130,[[["self"]],[T]]],[11,R[409],E,E,130,[[["self"],[T]]]],[11,R[403],E,E,130,[[[U]],[R[2]]]],[11,R[404],E,E,130,[[],[R[2]]]],[11,"borrow",E,E,130,[[["self"]],[T]]],[11,R[402],E,E,130,[[["self"]],[T]]],[11,R[408],E,E,130,[[["self"]],["typeid"]]],[11,"into",E,E,131,[[],[U]]],[11,"from",E,E,131,[[[T]],[T]]],[11,R[403],E,E,131,[[[U]],[R[2]]]],[11,R[404],E,E,131,[[],[R[2]]]],[11,"borrow",E,E,131,[[["self"]],[T]]],[11,R[402],E,E,131,[[["self"]],[T]]],[11,R[408],E,E,131,[[["self"]],["typeid"]]],[11,"into",E,E,132,[[],[U]]],[11,"from",E,E,132,[[[T]],[T]]],[11,R[403],E,E,132,[[[U]],[R[2]]]],[11,R[404],E,E,132,[[],[R[2]]]],[11,"borrow",E,E,132,[[["self"]],[T]]],[11,R[402],E,E,132,[[["self"]],[T]]],[11,R[408],E,E,132,[[["self"]],["typeid"]]],[11,"into",E,E,133,[[],[U]]],[11,"from",E,E,133,[[[T]],[T]]],[11,R[403],E,E,133,[[[U]],[R[2]]]],[11,R[404],E,E,133,[[],[R[2]]]],[11,"borrow",E,E,133,[[["self"]],[T]]],[11,R[402],E,E,133,[[["self"]],[T]]],[11,R[408],E,E,133,[[["self"]],["typeid"]]],[11,"into",E,E,134,[[],[U]]],[11,"from",E,E,134,[[[T]],[T]]],[11,R[403],E,E,134,[[[U]],[R[2]]]],[11,R[404],E,E,134,[[],[R[2]]]],[11,"borrow",E,E,134,[[["self"]],[T]]],[11,R[402],E,E,134,[[["self"]],[T]]],[11,R[408],E,E,134,[[["self"]],["typeid"]]],[11,"into",E,E,135,[[],[U]]],[11,"from",E,E,135,[[[T]],[T]]],[11,R[410],E,E,135,[[["self"]],[T]]],[11,R[409],E,E,135,[[["self"],[T]]]],[11,R[403],E,E,135,[[[U]],[R[2]]]],[11,R[404],E,E,135,[[],[R[2]]]],[11,"borrow",E,E,135,[[["self"]],[T]]],[11,R[402],E,E,135,[[["self"]],[T]]],[11,R[408],E,E,135,[[["self"]],["typeid"]]],[11,"into",R[442],E,137,[[],[U]]],[11,"from",E,E,137,[[[T]],[T]]],[11,R[410],E,E,137,[[["self"]],[T]]],[11,R[409],E,E,137,[[["self"],[T]]]],[11,R[403],E,E,137,[[[U]],[R[2]]]],[11,R[404],E,E,137,[[],[R[2]]]],[11,"borrow",E,E,137,[[["self"]],[T]]],[11,R[402],E,E,137,[[["self"]],[T]]],[11,R[408],E,E,137,[[["self"]],["typeid"]]],[11,"into",E,E,138,[[],[U]]],[11,"from",E,E,138,[[[T]],[T]]],[11,R[410],E,E,138,[[["self"]],[T]]],[11,R[409],E,E,138,[[["self"],[T]]]],[11,R[403],E,E,138,[[[U]],[R[2]]]],[11,R[404],E,E,138,[[],[R[2]]]],[11,"borrow",E,E,138,[[["self"]],[T]]],[11,R[402],E,E,138,[[["self"]],[T]]],[11,R[408],E,E,138,[[["self"]],["typeid"]]],[11,"into",E,E,139,[[],[U]]],[11,"from",E,E,139,[[[T]],[T]]],[11,R[410],E,E,139,[[["self"]],[T]]],[11,R[409],E,E,139,[[["self"],[T]]]],[11,R[403],E,E,139,[[[U]],[R[2]]]],[11,R[404],E,E,139,[[],[R[2]]]],[11,"borrow",E,E,139,[[["self"]],[T]]],[11,R[402],E,E,139,[[["self"]],[T]]],[11,R[408],E,E,139,[[["self"]],["typeid"]]],[11,"into",R[443],E,140,[[],[U]]],[11,"from",E,E,140,[[[T]],[T]]],[11,R[410],E,E,140,[[["self"]],[T]]],[11,R[409],E,E,140,[[["self"],[T]]]],[11,R[403],E,E,140,[[[U]],[R[2]]]],[11,R[404],E,E,140,[[],[R[2]]]],[11,"borrow",E,E,140,[[["self"]],[T]]],[11,R[402],E,E,140,[[["self"]],[T]]],[11,R[408],E,E,140,[[["self"]],["typeid"]]],[11,"into",E,E,169,[[],[U]]],[11,"from",E,E,169,[[[T]],[T]]],[11,R[423],E,E,169,[[],["i"]]],[11,R[403],E,E,169,[[[U]],[R[2]]]],[11,R[404],E,E,169,[[],[R[2]]]],[11,"borrow",E,E,169,[[["self"]],[T]]],[11,R[402],E,E,169,[[["self"]],[T]]],[11,R[408],E,E,169,[[["self"]],["typeid"]]],[11,"into",E,E,141,[[],[U]]],[11,"from",E,E,141,[[[T]],[T]]],[11,R[410],E,E,141,[[["self"]],[T]]],[11,R[409],E,E,141,[[["self"],[T]]]],[11,R[432],E,E,141,[[["self"]],["string"]]],[11,R[403],E,E,141,[[[U]],[R[2]]]],[11,R[404],E,E,141,[[],[R[2]]]],[11,"borrow",E,E,141,[[["self"]],[T]]],[11,R[402],E,E,141,[[["self"]],[T]]],[11,R[408],E,E,141,[[["self"]],["typeid"]]],[11,"into",E,E,142,[[],[U]]],[11,"from",E,E,142,[[[T]],[T]]],[11,R[410],E,E,142,[[["self"]],[T]]],[11,R[409],E,E,142,[[["self"],[T]]]],[11,R[403],E,E,142,[[[U]],[R[2]]]],[11,R[404],E,E,142,[[],[R[2]]]],[11,"borrow",E,E,142,[[["self"]],[T]]],[11,R[402],E,E,142,[[["self"]],[T]]],[11,R[408],E,E,142,[[["self"]],["typeid"]]],[11,"into",E,E,170,[[],[U]]],[11,"from",E,E,170,[[[T]],[T]]],[11,R[423],E,E,170,[[],["i"]]],[11,R[410],E,E,170,[[["self"]],[T]]],[11,R[409],E,E,170,[[["self"],[T]]]],[11,R[403],E,E,170,[[[U]],[R[2]]]],[11,R[404],E,E,170,[[],[R[2]]]],[11,"borrow",E,E,170,[[["self"]],[T]]],[11,R[402],E,E,170,[[["self"]],[T]]],[11,R[408],E,E,170,[[["self"]],["typeid"]]],[11,"into",E,E,143,[[],[U]]],[11,"from",E,E,143,[[[T]],[T]]],[11,R[410],E,E,143,[[["self"]],[T]]],[11,R[409],E,E,143,[[["self"],[T]]]],[11,R[403],E,E,143,[[[U]],[R[2]]]],[11,R[404],E,E,143,[[],[R[2]]]],[11,"borrow",E,E,143,[[["self"]],[T]]],[11,R[402],E,E,143,[[["self"]],[T]]],[11,R[408],E,E,143,[[["self"]],["typeid"]]],[11,"into",E,E,147,[[],[U]]],[11,"from",E,E,147,[[[T]],[T]]],[11,R[403],E,E,147,[[[U]],[R[2]]]],[11,R[404],E,E,147,[[],[R[2]]]],[11,"borrow",E,E,147,[[["self"]],[T]]],[11,R[402],E,E,147,[[["self"]],[T]]],[11,R[408],E,E,147,[[["self"]],["typeid"]]],[11,"into",E,E,144,[[],[U]]],[11,"from",E,E,144,[[[T]],[T]]],[11,R[410],E,E,144,[[["self"]],[T]]],[11,R[409],E,E,144,[[["self"],[T]]]],[11,R[403],E,E,144,[[[U]],[R[2]]]],[11,R[404],E,E,144,[[],[R[2]]]],[11,"borrow",E,E,144,[[["self"]],[T]]],[11,R[402],E,E,144,[[["self"]],[T]]],[11,R[408],E,E,144,[[["self"]],["typeid"]]],[11,"into",E,E,145,[[],[U]]],[11,"from",E,E,145,[[[T]],[T]]],[11,R[410],E,E,145,[[["self"]],[T]]],[11,R[409],E,E,145,[[["self"],[T]]]],[11,R[403],E,E,145,[[[U]],[R[2]]]],[11,R[404],E,E,145,[[],[R[2]]]],[11,"borrow",E,E,145,[[["self"]],[T]]],[11,R[402],E,E,145,[[["self"]],[T]]],[11,R[408],E,E,145,[[["self"]],["typeid"]]],[11,"into",E,E,146,[[],[U]]],[11,"from",E,E,146,[[[T]],[T]]],[11,R[410],E,E,146,[[["self"]],[T]]],[11,R[409],E,E,146,[[["self"],[T]]]],[11,R[403],E,E,146,[[[U]],[R[2]]]],[11,R[404],E,E,146,[[],[R[2]]]],[11,"borrow",E,E,146,[[["self"]],[T]]],[11,R[402],E,E,146,[[["self"]],[T]]],[11,R[408],E,E,146,[[["self"]],["typeid"]]],[11,"into",R[444],E,148,[[],[U]]],[11,"from",E,E,148,[[[T]],[T]]],[11,R[410],E,E,148,[[["self"]],[T]]],[11,R[409],E,E,148,[[["self"],[T]]]],[11,R[403],E,E,148,[[[U]],[R[2]]]],[11,R[404],E,E,148,[[],[R[2]]]],[11,"borrow",E,E,148,[[["self"]],[T]]],[11,R[402],E,E,148,[[["self"]],[T]]],[11,R[408],E,E,148,[[["self"]],["typeid"]]],[11,"into",E,E,149,[[],[U]]],[11,"from",E,E,149,[[[T]],[T]]],[11,R[410],E,E,149,[[["self"]],[T]]],[11,R[409],E,E,149,[[["self"],[T]]]],[11,R[403],E,E,149,[[[U]],[R[2]]]],[11,R[404],E,E,149,[[],[R[2]]]],[11,"borrow",E,E,149,[[["self"]],[T]]],[11,R[402],E,E,149,[[["self"]],[T]]],[11,R[408],E,E,149,[[["self"]],["typeid"]]],[11,"into",E,E,150,[[],[U]]],[11,"from",E,E,150,[[[T]],[T]]],[11,R[410],E,E,150,[[["self"]],[T]]],[11,R[409],E,E,150,[[["self"],[T]]]],[11,R[403],E,E,150,[[[U]],[R[2]]]],[11,R[404],E,E,150,[[],[R[2]]]],[11,"borrow",E,E,150,[[["self"]],[T]]],[11,R[402],E,E,150,[[["self"]],[T]]],[11,R[408],E,E,150,[[["self"]],["typeid"]]],[11,"into",E,E,151,[[],[U]]],[11,"from",E,E,151,[[[T]],[T]]],[11,R[410],E,E,151,[[["self"]],[T]]],[11,R[409],E,E,151,[[["self"],[T]]]],[11,R[403],E,E,151,[[[U]],[R[2]]]],[11,R[404],E,E,151,[[],[R[2]]]],[11,"borrow",E,E,151,[[["self"]],[T]]],[11,R[402],E,E,151,[[["self"]],[T]]],[11,R[408],E,E,151,[[["self"]],["typeid"]]],[11,"into",E,E,152,[[],[U]]],[11,"from",E,E,152,[[[T]],[T]]],[11,R[410],E,E,152,[[["self"]],[T]]],[11,R[409],E,E,152,[[["self"],[T]]]],[11,R[403],E,E,152,[[[U]],[R[2]]]],[11,R[404],E,E,152,[[],[R[2]]]],[11,"borrow",E,E,152,[[["self"]],[T]]],[11,R[402],E,E,152,[[["self"]],[T]]],[11,R[408],E,E,152,[[["self"]],["typeid"]]],[11,"into",E,E,153,[[],[U]]],[11,"from",E,E,153,[[[T]],[T]]],[11,R[403],E,E,153,[[[U]],[R[2]]]],[11,R[404],E,E,153,[[],[R[2]]]],[11,"borrow",E,E,153,[[["self"]],[T]]],[11,R[402],E,E,153,[[["self"]],[T]]],[11,R[408],E,E,153,[[["self"]],["typeid"]]],[11,"into",E,E,171,[[],[U]]],[11,"from",E,E,171,[[[T]],[T]]],[11,R[423],E,E,171,[[],["i"]]],[11,R[403],E,E,171,[[[U]],[R[2]]]],[11,R[404],E,E,171,[[],[R[2]]]],[11,"borrow",E,E,171,[[["self"]],[T]]],[11,R[402],E,E,171,[[["self"]],[T]]],[11,R[408],E,E,171,[[["self"]],["typeid"]]],[11,"into",R[445],E,154,[[],[U]]],[11,"from",E,E,154,[[[T]],[T]]],[11,R[410],E,E,154,[[["self"]],[T]]],[11,R[409],E,E,154,[[["self"],[T]]]],[11,R[403],E,E,154,[[[U]],[R[2]]]],[11,R[404],E,E,154,[[],[R[2]]]],[11,"borrow",E,E,154,[[["self"]],[T]]],[11,R[402],E,E,154,[[["self"]],[T]]],[11,R[408],E,E,154,[[["self"]],["typeid"]]],[11,"into",E,E,155,[[],[U]]],[11,"from",E,E,155,[[[T]],[T]]],[11,R[423],E,E,155,[[],["i"]]],[11,R[403],E,E,155,[[[U]],[R[2]]]],[11,R[404],E,E,155,[[],[R[2]]]],[11,"borrow",E,E,155,[[["self"]],[T]]],[11,R[402],E,E,155,[[["self"]],[T]]],[11,R[408],E,E,155,[[["self"]],["typeid"]]],[11,"into",R[446],E,156,[[],[U]]],[11,"from",E,E,156,[[[T]],[T]]],[11,R[410],E,E,156,[[["self"]],[T]]],[11,R[409],E,E,156,[[["self"],[T]]]],[11,R[403],E,E,156,[[[U]],[R[2]]]],[11,R[404],E,E,156,[[],[R[2]]]],[11,"borrow",E,E,156,[[["self"]],[T]]],[11,R[402],E,E,156,[[["self"]],[T]]],[11,R[408],E,E,156,[[["self"]],["typeid"]]],[11,"into",E,E,157,[[],[U]]],[11,"from",E,E,157,[[[T]],[T]]],[11,R[410],E,E,157,[[["self"]],[T]]],[11,R[409],E,E,157,[[["self"],[T]]]],[11,R[403],E,E,157,[[[U]],[R[2]]]],[11,R[404],E,E,157,[[],[R[2]]]],[11,"borrow",E,E,157,[[["self"]],[T]]],[11,R[402],E,E,157,[[["self"]],[T]]],[11,R[408],E,E,157,[[["self"]],["typeid"]]],[11,"into",E,E,158,[[],[U]]],[11,"from",E,E,158,[[[T]],[T]]],[11,R[410],E,E,158,[[["self"]],[T]]],[11,R[409],E,E,158,[[["self"],[T]]]],[11,R[403],E,E,158,[[[U]],[R[2]]]],[11,R[404],E,E,158,[[],[R[2]]]],[11,"borrow",E,E,158,[[["self"]],[T]]],[11,R[402],E,E,158,[[["self"]],[T]]],[11,R[408],E,E,158,[[["self"]],["typeid"]]],[11,"into",E,E,159,[[],[U]]],[11,"from",E,E,159,[[[T]],[T]]],[11,R[403],E,E,159,[[[U]],[R[2]]]],[11,R[404],E,E,159,[[],[R[2]]]],[11,"borrow",E,E,159,[[["self"]],[T]]],[11,R[402],E,E,159,[[["self"]],[T]]],[11,R[408],E,E,159,[[["self"]],["typeid"]]],[11,"into",E,E,161,[[],[U]]],[11,"from",E,E,161,[[[T]],[T]]],[11,R[403],E,E,161,[[[U]],[R[2]]]],[11,R[404],E,E,161,[[],[R[2]]]],[11,"borrow",E,E,161,[[["self"]],[T]]],[11,R[402],E,E,161,[[["self"]],[T]]],[11,R[408],E,E,161,[[["self"]],["typeid"]]],[11,"into",E,E,160,[[],[U]]],[11,"from",E,E,160,[[[T]],[T]]],[11,R[403],E,E,160,[[[U]],[R[2]]]],[11,R[404],E,E,160,[[],[R[2]]]],[11,"borrow",E,E,160,[[["self"]],[T]]],[11,R[402],E,E,160,[[["self"]],[T]]],[11,R[408],E,E,160,[[["self"]],["typeid"]]],[11,"clone",R[407],E,5,[[["self"]],[R[66]]]],[11,R[465],E,E,5,[[],[R[66]]]],[11,"from",E,E,5,[[["bool"]],[R[66]]]],[11,"fmt",E,E,5,[[[R[483]],["self"]],[["error"],[R[2],["error"]]]]],[11,"eq",E,E,5,[[[R[66]],["self"]],["bool"]]],[11,"from",R[405],E,3,[[["error"]],["error"]]],[11,"from",E,E,3,[[["error"]],["error"]]],[11,"from",R[407],E,6,[[[R[8]]],["self"]]],[11,"from",E,E,6,[[[R[66]]],["self"]]],[11,"from",R[411],E,10,[[[R[447]]],["self"]]],[11,"from",R[17],E,9,[[[R[16]]],["self"]]],[11,"from",R[412],E,11,[[[R[447]]],["self"]]],[11,"from",R[17],E,9,[[[R[16]]],["self"]]],[11,"from",R[51],E,12,[[[R[49]]],["self"]]],[11,"from",R[413],E,13,[[[R[448]]],["self"]]],[11,"from",R[51],E,12,[[[R[49]]],["self"]]],[11,"from",R[414],E,14,[[[R[448]]],["self"]]],[11,"from",R[87],E,15,[[[R[86]]],["self"]]],[11,"from",R[415],E,16,[[[R[449]]],["self"]]],[11,"from",R[87],E,15,[[[R[86]]],["self"]]],[11,"from",R[416],E,17,[[[R[449]]],["self"]]],[11,"from",R[107],E,18,[[[R[106]]],["self"]]],[11,"from",R[417],E,19,[[[R[450]]],["self"]]],[11,"from",R[107],E,18,[[[R[106]]],["self"]]],[11,"from",R[418],E,20,[[[R[450]]],["self"]]],[11,"from",R[113],E,21,[[["sym"]],["self"]]],[11,"from",R[419],E,22,[[["elfsym"]],["self"]]],[11,"from",R[113],E,21,[[["sym"]],["self"]]],[11,"from",R[420],E,23,[[["elfsym"]],["self"]]],[11,"from",R[421],E,28,[[["elfdyn"]],["self"]]],[11,"from",R[141],E,25,[[["dyn"]],["self"]]],[11,"from",R[422],E,30,[[["elfdyn"]],["self"]]],[11,"from",R[141],E,25,[[["dyn"]],["self"]]],[11,"from",R[160],E,32,[[["rela"]],["self"]]],[11,"from",E,E,32,[[["rel"]],["self"]]],[11,"from",R[424],E,33,[[["reloc"]],["self"]]],[11,"from",E,E,34,[[["reloc"]],["self"]]],[11,"from",R[160],E,32,[[["rela"]],["self"]]],[11,"from",E,E,32,[[["rel"]],["self"]]],[11,"from",R[425],E,35,[[["reloc"]],["self"]]],[11,"from",E,E,36,[[["reloc"]],["self"]]],[11,"from",R[429],E,50,[[[R[452]]],["self"]]],[11,"from",E,E,48,[[[R[16]]],["self"]]],[11,"from",E,E,50,[[[R[453]]],["self"]]],[11,"from",E,E,49,[[[R[16]]],["self"]]],[11,"from",R[433],E,98,[[["nlist32"]],["self"]]],[11,"from",E,E,98,[[["nlist64"]],["self"]]],[11,"from",E,E,96,[[["nlist"]],["self"]]],[11,"from",E,E,97,[[["nlist"]],["self"]]],[11,"from",R[431],E,55,[[["section"]],["self"]]],[11,"from",E,E,54,[[["section"]],["self"]]],[11,"from",R[436],E,108,[[[R[454]]],["self"]]],[11,"from",E,E,108,[[[R[455]]],["self"]]],[11,"from",R[431],E,57,[[["segment"]],["self"]]],[11,"from",E,E,56,[[["segment"]],["self"]]],[11,"from",R[438],E,118,[[[R[459]]],["self"]]],[11,"from",E,E,118,[[[R[460]]],["self"]]],[11,"from",R[4],E,172,[[[R[461]]],["self"]]],[11,"next",R[113],E,162,[[["self"]],[R[7]]]],[11,"next",R[160],E,163,[[["self"]],[R[7]]]],[11,"next",R[426],E,40,[[["self"]],[R[7]]]],[11,"next",E,E,41,[[["self"]],[R[7]]]],[11,"next",R[433],E,166,[[["self"]],[R[7]]]],[11,"next",R[436],E,167,[[["self"]],[R[7]]]],[11,"next",E,E,168,[[["self"]],[R[7]]]],[11,"next",R[230],E,164,[[["self"]],[R[7]]]],[11,"next",E,E,165,[[["self"]],[R[7]]]],[11,"next",R[443],E,169,[[["self"]],[R[7]]]],[11,R[451],E,E,169,[[["self"]]]],[11,"next",E,E,170,[[["self"]],[R[7]]]],[11,R[451],E,E,170,[[["self"]]]],[11,"next",R[444],E,171,[[["self"]],[R[7]]]],[11,"next",R[445],E,155,[[["self"]],[R[7]]]],[11,"len",R[113],E,162,[[["self"]],[R[6]]]],[11,"len",R[160],E,163,[[["self"]],[R[6]]]],[11,"len",R[436],E,168,[[["self"]],[R[6]]]],[11,"clone",R[407],E,7,[[["self"]],[R[8]]]],[11,"clone",E,E,6,[[["self"]],["ctx"]]],[11,"clone",R[17],E,9,[[["self"]],[R[16]]]],[11,"clone",R[411],E,10,[[["self"]],[R[16]]]],[11,"clone",R[412],E,11,[[["self"]],[R[16]]]],[11,"clone",R[51],E,12,[[["self"]],[R[49]]]],[11,"clone",R[413],E,13,[[["self"]],[R[49]]]],[11,"clone",R[414],E,14,[[["self"]],[R[49]]]],[11,"clone",R[415],E,16,[[["self"]],[R[86]]]],[11,"clone",R[416],E,17,[[["self"]],[R[86]]]],[11,"clone",R[87],E,15,[[["self"]],[R[86]]]],[11,"clone",R[417],E,19,[[["self"]],[R[106]]]],[11,"clone",R[418],E,20,[[["self"]],[R[106]]]],[11,"clone",R[107],E,18,[[["self"]],[R[106]]]],[11,"clone",R[419],E,22,[[["self"]],["sym"]]],[11,"clone",R[420],E,23,[[["self"]],["sym"]]],[11,"clone",R[113],E,21,[[["self"]],["sym"]]],[11,"clone",R[141],E,25,[[["self"]],["dyn"]]],[11,"clone",R[421],E,28,[[["self"]],["dyn"]]],[11,"clone",R[422],E,30,[[["self"]],["dyn"]]],[11,"clone",R[424],E,33,[[["self"]],["rela"]]],[11,"clone",E,E,34,[[["self"]],["rel"]]],[11,"clone",R[425],E,35,[[["self"]],["rela"]]],[11,"clone",E,E,36,[[["self"]],["rel"]]],[11,"clone",R[160],E,32,[[["self"]],["reloc"]]],[11,"clone",R[426],E,38,[[["self"]],["nhdr32"]]],[11,"clone",E,E,39,[[["self"]],["nhdr64"]]],[11,"clone",R[429],E,48,[[["self"]],[R[452]]]],[11,"clone",E,E,49,[[["self"]],[R[453]]]],[11,"clone",E,E,50,[[["self"]],[R[16]]]],[11,"clone",R[430],E,51,[[["self"]],[R[236]]]],[11,"clone",E,E,52,[[["self"]],["fatarch"]]],[11,"clone",R[431],E,53,[[["self"]],["loadcommandheader"]]],[11,"clone",E,E,54,[[["self"]],[R[454]]]],[11,"clone",E,E,55,[[["self"]],[R[455]]]],[11,"clone",E,E,56,[[["self"]],[R[456]]]],[11,"clone",E,E,57,[[["self"]],[R[457]]]],[11,"clone",E,E,58,[[["self"]],["fvmlib"]]],[11,"clone",E,E,59,[[["self"]],["fvmlibcommand"]]],[11,"clone",E,E,60,[[["self"]],["dylib"]]],[11,"clone",E,E,61,[[["self"]],["dylibcommand"]]],[11,"clone",E,E,62,[[["self"]],["subframeworkcommand"]]],[11,"clone",E,E,63,[[["self"]],["subclientcommand"]]],[11,"clone",E,E,64,[[["self"]],["subumbrellacommand"]]],[11,"clone",E,E,65,[[["self"]],["sublibrarycommand"]]],[11,"clone",E,E,66,[[["self"]],["prebounddylibcommand"]]],[11,"clone",E,E,67,[[["self"]],["dylinkercommand"]]],[11,"clone",E,E,68,[[["self"]],["self"]]],[11,"clone",E,E,69,[[["self"]],["routinescommand32"]]],[11,"clone",E,E,70,[[["self"]],["routinescommand64"]]],[11,"clone",E,E,71,[[["self"]],[R[458]]]],[11,"clone",E,E,72,[[["self"]],["dysymtabcommand"]]],[11,"clone",E,E,73,[[["self"]],["dylibtableofcontents"]]],[11,"clone",E,E,74,[[["self"]],["dylibmodule"]]],[11,"clone",E,E,75,[[["self"]],["dylibmodule64"]]],[11,"clone",E,E,76,[[["self"]],["dylibreference"]]],[11,"clone",E,E,77,[[["self"]],["twolevelhintscommand"]]],[11,"clone",E,E,78,[[["self"]],["twolevelhint"]]],[11,"clone",E,E,79,[[["self"]],["prebindcksumcommand"]]],[11,"clone",E,E,80,[[["self"]],["uuidcommand"]]],[11,"clone",E,E,81,[[["self"]],["rpathcommand"]]],[11,"clone",E,E,82,[[["self"]],["linkeditdatacommand"]]],[11,"clone",E,E,83,[[["self"]],["encryptioninfocommand32"]]],[11,"clone",E,E,84,[[["self"]],["encryptioninfocommand64"]]],[11,"clone",E,E,85,[[["self"]],["versionmincommand"]]],[11,"clone",E,E,86,[[["self"]],[R[319]]]],[11,"clone",E,E,87,[[["self"]],["linkeroptioncommand"]]],[11,"clone",E,E,88,[[["self"]],["symsegcommand"]]],[11,"clone",E,E,89,[[["self"]],["identcommand"]]],[11,"clone",E,E,90,[[["self"]],["fvmfilecommand"]]],[11,"clone",E,E,91,[[["self"]],["entrypointcommand"]]],[11,"clone",E,E,92,[[["self"]],["sourceversioncommand"]]],[11,"clone",E,E,93,[[["self"]],["dataincodeentry"]]],[11,"clone",R[433],E,96,[[["self"]],["nlist32"]]],[11,"clone",E,E,97,[[["self"]],["nlist64"]]],[11,"clone",E,E,98,[[["self"]],["nlist"]]],[11,"clone",E,E,99,[[["self"]],[R[466]]]],[11,"clone",R[435],E,107,[[["self"]],["relocationinfo"]]],[11,"clone",R[437],E,113,[[["self"]],[R[467]]]],[11,"clone",E,E,114,[[["self"]],[R[468]]]],[11,"clone",E,E,115,[[["self"]],[R[16]]]],[11,"clone",R[438],E,116,[[["self"]],[R[459]]]],[11,"clone",E,E,117,[[["self"]],[R[460]]]],[11,"clone",E,E,118,[[["self"]],[R[469]]]],[11,"clone",E,E,119,[[["self"]],[R[461]]]],[11,"clone",E,E,120,[[["self"]],[R[470]]]],[11,"clone",E,E,121,[[["self"]],[R[475]]]],[11,"clone",R[439],E,122,[[["self"]],[R[462]]]],[11,"clone",R[440],E,123,[[["self"]],[R[376]]]],[11,"clone",E,E,124,[[["self"]],[R[471]]]],[11,"clone",R[369],E,125,[[["self"]],[R[472]]]],[11,"clone",R[441],E,130,[[["self"]],["hintnametableentry"]]],[11,"clone",E,E,135,[[["self"]],["syntheticimportlookuptableentry"]]],[11,"clone",R[442],E,137,[[["self"]],[R[473]]]],[11,"clone",E,E,138,[[["self"]],[R[463]]]],[11,"clone",E,E,139,[[["self"]],[R[474]]]],[11,"clone",R[443],E,140,[[["self"]],[R[381]]]],[11,"clone",E,E,141,[[["self"]],[R[476]]]],[11,"clone",E,E,144,[[["self"]],[R[477]]]],[11,"clone",E,E,145,[[["self"]],[R[478]]]],[11,"clone",E,E,142,[[["self"]],[R[479]]]],[11,"clone",E,E,170,[[["self"]],[R[464]]]],[11,"clone",E,E,146,[[["self"]],[R[480]]]],[11,"clone",E,E,143,[[["self"]],[R[382]]]],[11,"clone",R[444],E,148,[[["self"]],["symbol"]]],[11,"clone",E,E,149,[[["self"]],[R[391]]]],[11,"clone",E,E,150,[[["self"]],[R[392]]]],[11,"clone",E,E,151,[[["self"]],[R[393]]]],[11,"clone",E,E,152,[[["self"]],[R[394]]]],[11,"clone",R[445],E,154,[[["self"]],[R[395]]]],[11,"clone",R[446],E,156,[[["self"]],[R[481]]]],[11,"clone",E,E,157,[[["self"]],[R[16]]]],[11,"clone",E,E,158,[[["self"]],["member"]]],[11,R[465],R[406],E,4,[[],[R[5]]]],[11,R[465],R[407],E,7,[[],["self"]]],[11,R[465],E,E,6,[[],["self"]]],[11,R[465],R[4],E,0,[[],["hintdata"]]],[11,R[465],R[411],E,10,[[],[R[16]]]],[11,R[465],R[412],E,11,[[],[R[16]]]],[11,R[465],R[51],E,12,[[],[R[49]]]],[11,R[465],R[413],E,13,[[],[R[49]]]],[11,R[465],R[414],E,14,[[],[R[49]]]],[11,R[465],R[415],E,16,[[],[R[86]]]],[11,R[465],R[416],E,17,[[],[R[86]]]],[11,R[465],R[87],E,15,[[],[R[86]]]],[11,R[465],R[417],E,19,[[],[R[106]]]],[11,R[465],R[418],E,20,[[],[R[106]]]],[11,R[465],R[107],E,18,[[],[R[106]]]],[11,R[465],R[419],E,22,[[],["sym"]]],[11,R[465],R[420],E,23,[[],["sym"]]],[11,R[465],R[113],E,21,[[],["sym"]]],[11,R[465],E,E,24,[[],["symtab"]]],[11,R[465],R[141],E,25,[[],["dyn"]]],[11,R[465],E,E,27,[[],[R[155]]]],[11,R[465],R[421],E,28,[[],["dyn"]]],[11,R[465],E,E,29,[[],[R[155]]]],[11,R[465],R[422],E,30,[[],["dyn"]]],[11,R[465],E,E,31,[[],[R[155]]]],[11,R[465],R[424],E,33,[[],["rela"]]],[11,R[465],E,E,34,[[],["rel"]]],[11,R[465],R[425],E,35,[[],["rela"]]],[11,R[465],E,E,36,[[],["rel"]]],[11,R[465],R[160],E,32,[[],["reloc"]]],[11,R[465],E,E,37,[[],[R[210]]]],[11,R[465],R[429],E,48,[[],[R[452]]]],[11,R[465],E,E,49,[[],[R[453]]]],[11,R[465],E,E,50,[[],[R[16]]]],[11,R[465],R[430],E,51,[[],[R[236]]]],[11,R[465],E,E,52,[[],["fatarch"]]],[11,R[465],R[431],E,71,[[],["self"]]],[11,R[465],E,E,72,[[],["self"]]],[11,R[465],E,E,86,[[],[R[319]]]],[11,R[465],R[433],E,99,[[],[R[466]]]],[11,R[465],E,E,166,[[],[R[326]]]],[11,R[465],R[436],E,108,[[],["section"]]],[11,R[465],E,E,110,[[],["segments"]]],[11,R[465],R[437],E,113,[[],[R[467]]]],[11,R[465],E,E,114,[[],[R[468]]]],[11,R[465],E,E,115,[[],[R[16]]]],[11,R[465],R[438],E,116,[[],[R[459]]]],[11,R[465],E,E,117,[[],[R[460]]]],[11,R[465],E,E,118,[[],[R[469]]]],[11,R[465],E,E,119,[[],[R[461]]]],[11,R[465],E,E,120,[[],[R[470]]]],[11,R[465],R[439],E,122,[[],[R[462]]]],[11,R[465],R[440],E,123,[[],[R[376]]]],[11,R[465],E,E,124,[[],[R[471]]]],[11,R[465],R[369],E,125,[[],[R[472]]]],[11,R[465],E,E,126,[[],[R[371]]]],[11,R[465],E,E,127,[[],["export"]]],[11,R[465],R[442],E,137,[[],[R[473]]]],[11,R[465],E,E,138,[[],[R[463]]]],[11,R[465],E,E,139,[[],[R[474]]]],[11,R[465],R[443],E,140,[[],[R[381]]]],[11,R[465],R[444],E,148,[[],["symbol"]]],[11,R[465],E,E,149,[[],[R[391]]]],[11,R[465],E,E,150,[[],[R[392]]]],[11,R[465],E,E,151,[[],[R[393]]]],[11,R[465],E,E,152,[[],[R[394]]]],[11,R[465],E,E,171,[[],[R[326]]]],[11,R[465],R[445],E,154,[[],[R[395]]]],[11,R[465],E,E,155,[[],[R[364]]]],[11,R[465],R[446],E,159,[[],["index"]]],[11,"cmp",R[443],E,141,[[[R[476]],["self"]],[R[482]]]],[11,"eq",R[407],E,7,[[["self"],[R[8]]],["bool"]]],[11,"eq",E,E,6,[[["ctx"],["self"]],["bool"]]],[11,"ne",E,E,6,[[["ctx"],["self"]],["bool"]]],[11,"eq",R[17],E,9,[[["self"],[R[16]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[16]]],["bool"]]],[11,"eq",R[411],E,10,[[[R[16]],["self"]],["bool"]]],[11,"ne",E,E,10,[[[R[16]],["self"]],["bool"]]],[11,"eq",R[412],E,11,[[["self"],[R[16]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[16]]],["bool"]]],[11,"eq",R[51],E,12,[[["self"],[R[49]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[49]]],["bool"]]],[11,"eq",R[413],E,13,[[["self"],[R[49]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[49]]],["bool"]]],[11,"eq",R[414],E,14,[[[R[49]],["self"]],["bool"]]],[11,"ne",E,E,14,[[[R[49]],["self"]],["bool"]]],[11,"eq",R[415],E,16,[[["self"],[R[86]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[86]]],["bool"]]],[11,"eq",R[416],E,17,[[["self"],[R[86]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[86]]],["bool"]]],[11,"eq",R[87],E,15,[[["self"],[R[86]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[86]]],["bool"]]],[11,"eq",R[417],E,19,[[["self"],[R[106]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[106]]],["bool"]]],[11,"eq",R[418],E,20,[[[R[106]],["self"]],["bool"]]],[11,"ne",E,E,20,[[[R[106]],["self"]],["bool"]]],[11,"eq",R[107],E,18,[[[R[106]],["self"]],["bool"]]],[11,"ne",E,E,18,[[[R[106]],["self"]],["bool"]]],[11,"eq",R[419],E,22,[[["sym"],["self"]],["bool"]]],[11,"ne",E,E,22,[[["sym"],["self"]],["bool"]]],[11,"eq",R[420],E,23,[[["sym"],["self"]],["bool"]]],[11,"ne",E,E,23,[[["sym"],["self"]],["bool"]]],[11,"eq",R[113],E,21,[[["sym"],["self"]],["bool"]]],[11,"ne",E,E,21,[[["sym"],["self"]],["bool"]]],[11,"eq",R[141],E,25,[[["self"],["dyn"]],["bool"]]],[11,"ne",E,E,25,[[["self"],["dyn"]],["bool"]]],[11,"eq",R[421],E,28,[[["self"],["dyn"]],["bool"]]],[11,"ne",E,E,28,[[["self"],["dyn"]],["bool"]]],[11,"eq",R[422],E,30,[[["dyn"],["self"]],["bool"]]],[11,"ne",E,E,30,[[["dyn"],["self"]],["bool"]]],[11,"eq",R[424],E,33,[[["rela"],["self"]],["bool"]]],[11,"ne",E,E,33,[[["rela"],["self"]],["bool"]]],[11,"eq",E,E,34,[[["self"],["rel"]],["bool"]]],[11,"ne",E,E,34,[[["self"],["rel"]],["bool"]]],[11,"eq",R[425],E,35,[[["rela"],["self"]],["bool"]]],[11,"ne",E,E,35,[[["rela"],["self"]],["bool"]]],[11,"eq",E,E,36,[[["rel"],["self"]],["bool"]]],[11,"ne",E,E,36,[[["rel"],["self"]],["bool"]]],[11,"eq",R[160],E,32,[[["reloc"],["self"]],["bool"]]],[11,"ne",E,E,32,[[["reloc"],["self"]],["bool"]]],[11,"eq",R[437],E,113,[[[R[467]],["self"]],["bool"]]],[11,"ne",E,E,113,[[[R[467]],["self"]],["bool"]]],[11,"eq",E,E,114,[[["self"],[R[468]]],["bool"]]],[11,"ne",E,E,114,[[["self"],[R[468]]],["bool"]]],[11,"eq",E,E,115,[[[R[16]],["self"]],["bool"]]],[11,"ne",E,E,115,[[[R[16]],["self"]],["bool"]]],[11,"eq",R[438],E,116,[[["self"],[R[459]]],["bool"]]],[11,"ne",E,E,116,[[["self"],[R[459]]],["bool"]]],[11,"eq",E,E,117,[[[R[460]],["self"]],["bool"]]],[11,"ne",E,E,117,[[[R[460]],["self"]],["bool"]]],[11,"eq",E,E,118,[[[R[469]],["self"]],["bool"]]],[11,"ne",E,E,118,[[[R[469]],["self"]],["bool"]]],[11,"eq",E,E,119,[[["self"],[R[461]]],["bool"]]],[11,"ne",E,E,119,[[["self"],[R[461]]],["bool"]]],[11,"eq",E,E,120,[[["self"],[R[470]]],["bool"]]],[11,"ne",E,E,120,[[["self"],[R[470]]],["bool"]]],[11,"eq",E,E,121,[[[R[475]],["self"]],["bool"]]],[11,"ne",E,E,121,[[[R[475]],["self"]],["bool"]]],[11,"eq",R[439],E,122,[[["self"],[R[462]]],["bool"]]],[11,"ne",E,E,122,[[["self"],[R[462]]],["bool"]]],[11,"eq",R[440],E,123,[[["self"],[R[376]]],["bool"]]],[11,"ne",E,E,123,[[["self"],[R[376]]],["bool"]]],[11,"eq",E,E,124,[[["self"],[R[471]]],["bool"]]],[11,"ne",E,E,124,[[["self"],[R[471]]],["bool"]]],[11,"eq",R[369],E,125,[[[R[472]],["self"]],["bool"]]],[11,"ne",E,E,125,[[[R[472]],["self"]],["bool"]]],[11,"eq",R[442],E,137,[[[R[473]],["self"]],["bool"]]],[11,"ne",E,E,137,[[[R[473]],["self"]],["bool"]]],[11,"eq",E,E,138,[[[R[463]],["self"]],["bool"]]],[11,"ne",E,E,138,[[[R[463]],["self"]],["bool"]]],[11,"eq",E,E,139,[[[R[474]],["self"]],["bool"]]],[11,"ne",E,E,139,[[[R[474]],["self"]],["bool"]]],[11,"eq",R[443],E,140,[[[R[381]],["self"]],["bool"]]],[11,"ne",E,E,140,[[[R[381]],["self"]],["bool"]]],[11,"eq",E,E,141,[[[R[476]],["self"]],["bool"]]],[11,"ne",E,E,141,[[[R[476]],["self"]],["bool"]]],[11,"eq",E,E,144,[[[R[477]],["self"]],["bool"]]],[11,"ne",E,E,144,[[[R[477]],["self"]],["bool"]]],[11,"eq",E,E,145,[[[R[478]],["self"]],["bool"]]],[11,"ne",E,E,145,[[[R[478]],["self"]],["bool"]]],[11,"eq",E,E,142,[[[R[479]],["self"]],["bool"]]],[11,"ne",E,E,142,[[[R[479]],["self"]],["bool"]]],[11,"eq",E,E,146,[[[R[480]],["self"]],["bool"]]],[11,"ne",E,E,146,[[[R[480]],["self"]],["bool"]]],[11,"eq",R[444],E,148,[[["symbol"],["self"]],["bool"]]],[11,"ne",E,E,148,[[["symbol"],["self"]],["bool"]]],[11,"eq",E,E,149,[[["self"],[R[391]]],["bool"]]],[11,"ne",E,E,149,[[["self"],[R[391]]],["bool"]]],[11,"eq",E,E,150,[[["self"],[R[392]]],["bool"]]],[11,"ne",E,E,150,[[["self"],[R[392]]],["bool"]]],[11,"eq",E,E,151,[[[R[393]],["self"]],["bool"]]],[11,"ne",E,E,151,[[[R[393]],["self"]],["bool"]]],[11,"eq",E,E,152,[[["self"],[R[394]]],["bool"]]],[11,"ne",E,E,152,[[["self"],[R[394]]],["bool"]]],[11,"eq",R[445],E,154,[[[R[395]],["self"]],["bool"]]],[11,"ne",E,E,154,[[[R[395]],["self"]],["bool"]]],[11,"eq",R[446],E,156,[[["self"],[R[481]]],["bool"]]],[11,"ne",E,E,156,[[["self"],[R[481]]],["bool"]]],[11,"eq",E,E,157,[[["self"],[R[16]]],["bool"]]],[11,"ne",E,E,157,[[["self"],[R[16]]],["bool"]]],[11,"eq",E,E,158,[[["self"],["member"]],["bool"]]],[11,"ne",E,E,158,[[["self"],["member"]],["bool"]]],[11,"eq",E,E,160,[[["self"],["indextype"]],["bool"]]],[11,"partial_cmp",R[443],E,141,[[[R[476]],["self"]],[[R[7],[R[482]]],[R[482]]]]],[11,"lt",E,E,141,[[[R[476]],["self"]],["bool"]]],[11,"le",E,E,141,[[[R[476]],["self"]],["bool"]]],[11,"gt",E,E,141,[[[R[476]],["self"]],["bool"]]],[11,"ge",E,E,141,[[[R[476]],["self"]],["bool"]]],[11,"fmt",R[405],E,3,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[431],E,53,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[443],E,141,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[405],E,3,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[406],E,4,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[407],E,7,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[4],E,0,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[17],E,9,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[411],E,10,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[412],E,11,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[51],E,12,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[413],E,13,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[414],E,14,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[415],E,16,[[[R[483]],["self"]],[R[2]]]],[11,"fmt",R[416],E,17,[[[R[483]],["self"]],[R[2]]]],[11,"fmt",R[87],E,15,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[417],E,19,[[[R[483]],["self"]],[R[2]]]],[11,"fmt",R[418],E,20,[[[R[483]],["self"]],[R[2]]]],[11,"fmt",R[107],E,18,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[419],E,22,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[420],E,23,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[113],E,21,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,24,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[141],E,25,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,26,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,27,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[421],E,28,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,29,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[422],E,30,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,31,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[424],E,33,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,34,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[425],E,35,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,36,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[160],E,32,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,37,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,163,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[426],E,38,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,39,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,42,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[45],E,8,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[429],E,48,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,49,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,50,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[430],E,51,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,52,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[431],E,53,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,54,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,55,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,56,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,57,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,58,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,59,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,60,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,61,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,62,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,63,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,64,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,65,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,66,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,67,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,68,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,69,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,70,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,71,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,72,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,73,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,74,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,75,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,76,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,77,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,78,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,79,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,80,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,81,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,82,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,83,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,84,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,85,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,86,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,87,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,88,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,89,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,90,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,91,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,92,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,93,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,95,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,94,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[433],E,96,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,97,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,98,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,99,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,100,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[316],E,102,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,103,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,101,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,104,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[434],E,105,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,106,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[435],E,107,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[436],E,108,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,109,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,110,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[230],E,45,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,46,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,47,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[437],E,113,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,114,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,115,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[438],E,116,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,117,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,118,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,119,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,120,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,121,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[439],E,122,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[440],E,123,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,124,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[369],E,125,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,128,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,126,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,129,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,127,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[441],E,130,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,135,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,131,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,132,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,133,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,134,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[442],E,137,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,138,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,139,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[443],E,140,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,169,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,141,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,144,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,145,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,142,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,170,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,146,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,143,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,147,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[444],E,148,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,149,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,150,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,151,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,152,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,153,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[445],E,154,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[332],E,111,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,112,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",R[446],E,156,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,157,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,158,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,159,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,160,[[["self"],[R[483]]],[R[2]]]],[11,"fmt",E,E,161,[[["self"],[R[483]]],[R[2]]]],[11,"deref",R[436],E,110,[[["self"]]]],[11,"deref_mut",E,E,110,[[["self"]]]],[11,"index",R[406],"Gets str reference at starting at byte `offset`. NB: this…",4,[[["self"],[R[6]]]]],[11,"source",R[405],E,3,[[["self"]],[[R[7],["error"]],["error"]]]],[11,R[484],R[426],E,38,[[[R[66]]],["self"]]],[11,R[484],E,E,39,[[[R[66]]],["self"]]],[11,R[484],R[431],E,54,[[[R[66]]],["self"]]],[11,R[484],E,E,55,[[[R[66]]],["self"]]],[11,R[484],E,E,56,[[[R[66]]],["self"]]],[11,R[484],E,E,57,[[[R[66]]],["self"]]],[11,R[484],E,E,58,[[[R[66]]],["self"]]],[11,R[484],E,E,59,[[[R[66]]],["self"]]],[11,R[484],E,E,60,[[[R[66]]],["self"]]],[11,R[484],E,E,61,[[[R[66]]],["self"]]],[11,R[484],E,E,62,[[[R[66]]],["self"]]],[11,R[484],E,E,63,[[[R[66]]],["self"]]],[11,R[484],E,E,64,[[[R[66]]],["self"]]],[11,R[484],E,E,65,[[[R[66]]],["self"]]],[11,R[484],E,E,66,[[[R[66]]],["self"]]],[11,R[484],E,E,67,[[[R[66]]],["self"]]],[11,R[484],E,E,69,[[[R[66]]],["self"]]],[11,R[484],E,E,70,[[[R[66]]],["self"]]],[11,R[484],E,E,71,[[[R[66]]],["self"]]],[11,R[484],E,E,72,[[[R[66]]],["self"]]],[11,R[484],E,E,73,[[[R[66]]],["self"]]],[11,R[484],E,E,74,[[[R[66]]],["self"]]],[11,R[484],E,E,75,[[[R[66]]],["self"]]],[11,R[484],E,E,76,[[[R[66]]],["self"]]],[11,R[484],E,E,77,[[[R[66]]],["self"]]],[11,R[484],E,E,78,[[[R[66]]],["self"]]],[11,R[484],E,E,79,[[[R[66]]],["self"]]],[11,R[484],E,E,80,[[[R[66]]],["self"]]],[11,R[484],E,E,81,[[[R[66]]],["self"]]],[11,R[484],E,E,82,[[[R[66]]],["self"]]],[11,R[484],E,E,83,[[[R[66]]],["self"]]],[11,R[484],E,E,84,[[[R[66]]],["self"]]],[11,R[484],E,E,85,[[[R[66]]],["self"]]],[11,R[484],E,E,87,[[[R[66]]],["self"]]],[11,R[484],E,E,88,[[[R[66]]],["self"]]],[11,R[484],E,E,89,[[[R[66]]],["self"]]],[11,R[484],E,E,90,[[[R[66]]],["self"]]],[11,R[484],E,E,91,[[[R[66]]],["self"]]],[11,R[484],E,E,92,[[[R[66]]],["self"]]],[11,R[484],E,E,93,[[[R[66]]],["self"]]],[11,R[484],R[433],E,96,[[[R[66]]],["self"]]],[11,R[484],E,E,97,[[[R[66]]],["self"]]],[11,R[484],R[435],E,107,[[[R[66]]],["self"]]],[11,R[484],R[437],E,114,[[[R[66]]],["self"]]],[11,R[484],R[444],E,148,[[[R[66]]],["self"]]],[11,R[484],E,E,149,[[[R[66]]],["self"]]],[11,R[484],E,E,150,[[[R[66]]],["self"]]],[11,R[484],E,E,151,[[[R[66]]],["self"]]],[11,R[484],E,E,152,[[[R[66]]],["self"]]],[11,R[484],R[445],E,154,[[[R[66]]],["self"]]],[11,R[485],R[17],E,9,[[[R[66]]],[R[2]]]],[11,R[485],R[411],E,10,[[[R[66]]],[R[2]]]],[11,R[485],R[412],E,11,[[[R[66]]],[R[2]]]],[11,R[485],R[51],E,12,[[["ctx"]],[R[2]]]],[11,R[485],R[413],E,13,[[[R[66]]],[R[2]]]],[11,R[485],R[414],E,14,[[[R[66]]],[R[2]]]],[11,R[485],R[415],E,16,[[[R[66]]],[R[2]]]],[11,R[485],R[416],E,17,[[[R[66]]],[R[2]]]],[11,R[485],R[87],E,15,[[["ctx"]],[R[2]]]],[11,R[485],R[417],E,19,[[[R[66]]],[R[2]]]],[11,R[485],R[418],E,20,[[[R[66]]],[R[2]]]],[11,R[485],R[107],E,18,[[["ctx"]],[R[2]]]],[11,R[485],R[419],E,22,[[[R[66]]],[R[2]]]],[11,R[485],R[420],E,23,[[[R[66]]],[R[2]]]],[11,R[485],R[113],E,21,[[["ctx"]],[R[2]]]],[11,R[485],R[141],E,25,[[["ctx"]],[R[2]]]],[11,R[485],R[421],E,28,[[[R[66]]],[R[2]]]],[11,R[485],R[422],E,30,[[[R[66]]],[R[2]]]],[11,R[485],R[424],E,33,[[[R[66]]],[R[2]]]],[11,R[485],E,E,34,[[[R[66]]],[R[2]]]],[11,R[485],R[425],E,35,[[[R[66]]],[R[2]]]],[11,R[485],E,E,36,[[[R[66]]],[R[2]]]],[11,R[485],R[160],E,32,[[],[R[2]]]],[11,R[485],R[426],E,38,[[[R[66]]],[R[2]]]],[11,R[485],E,E,39,[[[R[66]]],[R[2]]]],[11,R[485],E,E,42,[[],[R[2]]]],[11,R[485],R[45],E,8,[[],[R[2]]]],[11,R[485],R[429],E,48,[[[R[66]]],[R[2]]]],[11,R[485],E,E,49,[[[R[66]]],[R[2]]]],[11,R[485],E,E,50,[[["ctx"]],[R[2]]]],[11,R[485],R[430],E,51,[[[R[66]]],[R[2]]]],[11,R[485],E,E,52,[[[R[66]]],[R[2]]]],[11,R[485],R[431],E,53,[[[R[66]]],[R[2]]]],[11,R[485],E,E,54,[[[R[66]]],[R[2]]]],[11,R[485],E,E,55,[[[R[66]]],[R[2]]]],[11,R[485],E,E,56,[[[R[66]]],[R[2]]]],[11,R[485],E,E,57,[[[R[66]]],[R[2]]]],[11,R[485],E,E,58,[[[R[66]]],[R[2]]]],[11,R[485],E,E,59,[[[R[66]]],[R[2]]]],[11,R[485],E,E,60,[[[R[66]]],[R[2]]]],[11,R[485],E,E,61,[[[R[66]]],[R[2]]]],[11,R[485],E,E,62,[[[R[66]]],[R[2]]]],[11,R[485],E,E,63,[[[R[66]]],[R[2]]]],[11,R[485],E,E,64,[[[R[66]]],[R[2]]]],[11,R[485],E,E,65,[[[R[66]]],[R[2]]]],[11,R[485],E,E,66,[[[R[66]]],[R[2]]]],[11,R[485],E,E,67,[[[R[66]]],[R[2]]]],[11,R[485],E,E,68,[[[R[66]]],[R[2]]]],[11,R[485],E,E,69,[[[R[66]]],[R[2]]]],[11,R[485],E,E,70,[[[R[66]]],[R[2]]]],[11,R[485],E,E,71,[[[R[66]]],[R[2]]]],[11,R[485],E,E,72,[[[R[66]]],[R[2]]]],[11,R[485],E,E,73,[[[R[66]]],[R[2]]]],[11,R[485],E,E,74,[[[R[66]]],[R[2]]]],[11,R[485],E,E,75,[[[R[66]]],[R[2]]]],[11,R[485],E,E,76,[[[R[66]]],[R[2]]]],[11,R[485],E,E,77,[[[R[66]]],[R[2]]]],[11,R[485],E,E,78,[[[R[66]]],[R[2]]]],[11,R[485],E,E,79,[[[R[66]]],[R[2]]]],[11,R[485],E,E,80,[[[R[66]]],[R[2]]]],[11,R[485],E,E,81,[[[R[66]]],[R[2]]]],[11,R[485],E,E,82,[[[R[66]]],[R[2]]]],[11,R[485],E,E,83,[[[R[66]]],[R[2]]]],[11,R[485],E,E,84,[[[R[66]]],[R[2]]]],[11,R[485],E,E,85,[[[R[66]]],[R[2]]]],[11,R[485],E,E,86,[[[R[66]]],[R[2]]]],[11,R[485],E,E,87,[[[R[66]]],[R[2]]]],[11,R[485],E,E,88,[[[R[66]]],[R[2]]]],[11,R[485],E,E,89,[[[R[66]]],[R[2]]]],[11,R[485],E,E,90,[[[R[66]]],[R[2]]]],[11,R[485],E,E,91,[[[R[66]]],[R[2]]]],[11,R[485],E,E,92,[[[R[66]]],[R[2]]]],[11,R[485],E,E,93,[[[R[66]]],[R[2]]]],[11,R[485],E,E,95,[[[R[66]]],[R[2]]]],[11,R[485],R[433],E,96,[[[R[66]]],[R[2]]]],[11,R[485],E,E,97,[[[R[66]]],[R[2]]]],[11,R[485],E,E,98,[[["ctx"]],[R[2]]]],[11,R[485],E,E,100,[[[R[466]],[T]],[R[2]]]],[11,R[485],R[435],E,107,[[[R[66]]],[R[2]]]],[11,R[485],R[436],E,108,[[["ctx"]],[R[2]]]],[11,R[485],R[437],E,114,[[[R[66]]],[R[2]]]],[11,R[485],R[438],E,116,[[[R[66]]],[R[2]]]],[11,R[485],E,E,117,[[[R[66]]],[R[2]]]],[11,R[485],E,E,119,[[[R[66]]],[R[2]]]],[11,R[485],E,E,120,[[[R[66]]],[R[2]]]],[11,R[485],E,E,121,[[[R[66]]],[R[2]]]],[11,R[485],R[440],E,123,[[[R[66]]],[R[2]]]],[11,R[485],R[369],E,125,[[[R[66]]],[R[2]]]],[11,R[485],E,E,129,[[[R[66]]],[R[2]]]],[11,R[485],R[441],E,131,[[[R[66]]],[R[2]]]],[11,R[485],R[442],E,138,[[[R[66]]],[R[2]]]],[11,R[485],R[443],E,140,[[[R[66]]],[R[2]]]],[11,R[485],R[444],E,148,[[[R[66]]],[R[2]]]],[11,R[485],E,E,149,[[[R[66]]],[R[2]]]],[11,R[485],E,E,150,[[[R[66]]],[R[2]]]],[11,R[485],E,E,151,[[[R[66]]],[R[2]]]],[11,R[485],E,E,152,[[[R[66]]],[R[2]]]],[11,R[485],R[445],E,154,[[[R[66]]],[R[2]]]],[11,R[485],R[446],E,156,[[[R[66]]],[R[2]]]],[11,R[486],R[17],E,9,[[["ctx"]]]],[11,R[486],R[87],E,15,[[["ctx"]]]],[11,R[486],R[107],E,18,[[["ctx"]]]],[11,R[486],R[113],E,21,[[["ctx"]]]],[11,R[486],R[160],R[489],32,[[]]],[11,R[486],R[426],E,38,[[[R[66]]]]],[11,R[486],E,E,39,[[[R[66]]]]],[11,R[486],R[429],E,50,[[["ctx"]]]],[11,R[486],R[431],E,54,[[[R[66]]]]],[11,R[486],E,E,55,[[[R[66]]]]],[11,R[486],E,E,56,[[[R[66]]]]],[11,R[486],E,E,57,[[[R[66]]]]],[11,R[486],E,E,58,[[[R[66]]]]],[11,R[486],E,E,59,[[[R[66]]]]],[11,R[486],E,E,60,[[[R[66]]]]],[11,R[486],E,E,61,[[[R[66]]]]],[11,R[486],E,E,62,[[[R[66]]]]],[11,R[486],E,E,63,[[[R[66]]]]],[11,R[486],E,E,64,[[[R[66]]]]],[11,R[486],E,E,65,[[[R[66]]]]],[11,R[486],E,E,66,[[[R[66]]]]],[11,R[486],E,E,67,[[[R[66]]]]],[11,R[486],E,E,69,[[[R[66]]]]],[11,R[486],E,E,70,[[[R[66]]]]],[11,R[486],E,E,71,[[[R[66]]]]],[11,R[486],E,E,72,[[[R[66]]]]],[11,R[486],E,E,73,[[[R[66]]]]],[11,R[486],E,E,74,[[[R[66]]]]],[11,R[486],E,E,75,[[[R[66]]]]],[11,R[486],E,E,76,[[[R[66]]]]],[11,R[486],E,E,77,[[[R[66]]]]],[11,R[486],E,E,78,[[[R[66]]]]],[11,R[486],E,E,79,[[[R[66]]]]],[11,R[486],E,E,80,[[[R[66]]]]],[11,R[486],E,E,81,[[[R[66]]]]],[11,R[486],E,E,82,[[[R[66]]]]],[11,R[486],E,E,83,[[[R[66]]]]],[11,R[486],E,E,84,[[[R[66]]]]],[11,R[486],E,E,85,[[[R[66]]]]],[11,R[486],E,E,87,[[[R[66]]]]],[11,R[486],E,E,88,[[[R[66]]]]],[11,R[486],E,E,89,[[[R[66]]]]],[11,R[486],E,E,90,[[[R[66]]]]],[11,R[486],E,E,91,[[[R[66]]]]],[11,R[486],E,E,92,[[[R[66]]]]],[11,R[486],E,E,93,[[[R[66]]]]],[11,R[486],R[433],E,96,[[[R[66]]]]],[11,R[486],E,E,97,[[[R[66]]]]],[11,R[486],E,E,98,[[["ctx"]]]],[11,R[486],R[435],E,107,[[[R[66]]]]],[11,R[486],R[436],E,108,[[["ctx"]]]],[11,R[486],E,E,109,[[["ctx"]]]],[11,R[486],R[437],E,114,[[[R[66]]]]],[11,R[486],R[439],E,122,[[[R[66]]]]],[11,R[486],R[444],E,148,[[[R[66]]]]],[11,R[486],E,E,149,[[[R[66]]]]],[11,R[486],E,E,150,[[[R[66]]]]],[11,R[486],E,E,151,[[[R[66]]]]],[11,R[486],E,E,152,[[[R[66]]]]],[11,R[486],R[445],E,154,[[[R[66]]]]],[11,R[487],R[17],E,9,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[411],R[488],10,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[412],R[488],11,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[51],E,12,[[["ctx"]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[413],E,13,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[414],E,14,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[415],E,16,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[416],E,17,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[87],E,15,[[["ctx"]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[417],E,19,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[418],E,20,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[107],E,18,[[["ctx"]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[419],E,22,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[420],E,23,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[113],E,21,[[["ctx"]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[141],E,25,[[["ctx"]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[421],E,28,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[422],E,30,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[424],E,33,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,34,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[425],E,35,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,36,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[160],R[489],32,[[],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[426],E,38,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,39,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[429],E,48,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,49,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,50,[[["ctx"]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[430],E,51,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,52,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[431],E,53,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,54,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,55,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,56,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,57,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,58,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,59,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,60,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,61,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,62,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,63,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,64,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,65,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,66,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,67,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,69,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,70,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,71,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,72,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,73,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,74,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,75,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,76,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,77,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,78,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,79,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,80,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,81,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,82,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,83,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,84,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,85,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,86,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,87,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,88,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,89,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,90,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,91,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,92,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,93,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[433],E,96,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,97,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,98,[[["ctx"]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[435],E,107,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[436],E,108,[[["ctx"]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,109,[[["ctx"]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[437],E,114,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[438],E,116,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,117,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,119,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,120,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[439],E,122,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[440],E,123,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[369],E,125,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[441],E,131,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[442],E,138,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[443],E,140,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[444],E,148,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,149,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,150,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,151,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],E,E,152,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[445],E,154,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[487],R[446],E,156,[[[R[66]]],[[R[2],[R[6]]],[R[6]]]]],[11,R[490],R[17],E,9,[[["ctx"]],[R[6]]]],[11,R[490],R[51],E,12,[[["ctx"]],[R[6]]]],[11,R[490],R[413],E,13,[[[R[66]]],[R[6]]]],[11,R[490],R[414],E,14,[[[R[66]]],[R[6]]]],[11,R[490],R[415],E,16,[[[R[66]]],[R[6]]]],[11,R[490],R[416],E,17,[[[R[66]]],[R[6]]]],[11,R[490],R[87],E,15,[[["ctx"]],[R[6]]]],[11,R[490],R[417],E,19,[[[R[66]]],[R[6]]]],[11,R[490],R[418],E,20,[[[R[66]]],[R[6]]]],[11,R[490],R[107],E,18,[[["ctx"]],[R[6]]]],[11,R[490],R[419],E,22,[[[R[66]]],[R[6]]]],[11,R[490],R[420],E,23,[[[R[66]]],[R[6]]]],[11,R[490],R[113],E,21,[[["ctx"]],[R[6]]]],[11,R[490],R[141],E,25,[[["ctx"]],[R[6]]]],[11,R[490],R[421],E,28,[[[R[66]]],[R[6]]]],[11,R[490],R[422],E,30,[[[R[66]]],[R[6]]]],[11,R[490],R[424],E,33,[[[R[66]]],[R[6]]]],[11,R[490],E,E,34,[[[R[66]]],[R[6]]]],[11,R[490],R[425],E,35,[[[R[66]]],[R[6]]]],[11,R[490],E,E,36,[[[R[66]]],[R[6]]]],[11,R[490],R[160],E,32,[[],[R[6]]]],[11,R[490],R[426],E,38,[[[R[66]]],[R[6]]]],[11,R[490],E,E,39,[[[R[66]]],[R[6]]]],[11,R[490],R[429],E,48,[[[R[66]]],[R[6]]]],[11,R[490],E,E,49,[[[R[66]]],[R[6]]]],[11,R[490],E,E,50,[[["ctx"]],[R[6]]]],[11,R[490],E,E,50,[[[R[8]]],[R[6]]]],[11,R[490],R[430],E,51,[[[R[66]]],[R[6]]]],[11,R[490],E,E,52,[[[R[66]]],[R[6]]]],[11,R[490],R[431],E,53,[[[R[66]]],[R[6]]]],[11,R[490],E,E,54,[[[R[66]]],[R[6]]]],[11,R[490],E,E,55,[[[R[66]]],[R[6]]]],[11,R[490],E,E,56,[[[R[66]]],[R[6]]]],[11,R[490],E,E,57,[[[R[66]]],[R[6]]]],[11,R[490],E,E,58,[[[R[66]]],[R[6]]]],[11,R[490],E,E,59,[[[R[66]]],[R[6]]]],[11,R[490],E,E,60,[[[R[66]]],[R[6]]]],[11,R[490],E,E,61,[[[R[66]]],[R[6]]]],[11,R[490],E,E,62,[[[R[66]]],[R[6]]]],[11,R[490],E,E,63,[[[R[66]]],[R[6]]]],[11,R[490],E,E,64,[[[R[66]]],[R[6]]]],[11,R[490],E,E,65,[[[R[66]]],[R[6]]]],[11,R[490],E,E,66,[[[R[66]]],[R[6]]]],[11,R[490],E,E,67,[[[R[66]]],[R[6]]]],[11,R[490],E,E,69,[[[R[66]]],[R[6]]]],[11,R[490],E,E,70,[[[R[66]]],[R[6]]]],[11,R[490],E,E,71,[[[R[66]]],[R[6]]]],[11,R[490],E,E,72,[[[R[66]]],[R[6]]]],[11,R[490],E,E,73,[[[R[66]]],[R[6]]]],[11,R[490],E,E,74,[[[R[66]]],[R[6]]]],[11,R[490],E,E,75,[[[R[66]]],[R[6]]]],[11,R[490],E,E,76,[[[R[66]]],[R[6]]]],[11,R[490],E,E,77,[[[R[66]]],[R[6]]]],[11,R[490],E,E,78,[[[R[66]]],[R[6]]]],[11,R[490],E,E,79,[[[R[66]]],[R[6]]]],[11,R[490],E,E,80,[[[R[66]]],[R[6]]]],[11,R[490],E,E,81,[[[R[66]]],[R[6]]]],[11,R[490],E,E,82,[[[R[66]]],[R[6]]]],[11,R[490],E,E,83,[[[R[66]]],[R[6]]]],[11,R[490],E,E,84,[[[R[66]]],[R[6]]]],[11,R[490],E,E,85,[[[R[66]]],[R[6]]]],[11,R[490],E,E,86,[[[R[66]]],[R[6]]]],[11,R[490],E,E,87,[[[R[66]]],[R[6]]]],[11,R[490],E,E,88,[[[R[66]]],[R[6]]]],[11,R[490],E,E,89,[[[R[66]]],[R[6]]]],[11,R[490],E,E,90,[[[R[66]]],[R[6]]]],[11,R[490],E,E,91,[[[R[66]]],[R[6]]]],[11,R[490],E,E,92,[[[R[66]]],[R[6]]]],[11,R[490],E,E,93,[[[R[66]]],[R[6]]]],[11,R[490],R[433],E,96,[[[R[66]]],[R[6]]]],[11,R[490],E,E,97,[[[R[66]]],[R[6]]]],[11,R[490],E,E,98,[[["ctx"]],[R[6]]]],[11,R[490],R[435],E,107,[[[R[66]]],[R[6]]]],[11,R[490],R[436],E,108,[[["ctx"]],[R[6]]]],[11,R[490],E,E,109,[[["ctx"]],[R[6]]]],[11,R[490],R[437],E,114,[[[R[66]]],[R[6]]]],[11,R[490],R[438],E,116,[[[R[66]]],[R[6]]]],[11,R[490],E,E,117,[[[R[66]]],[R[6]]]],[11,R[490],E,E,119,[[[R[66]]],[R[6]]]],[11,R[490],E,E,120,[[[R[66]]],[R[6]]]],[11,R[490],R[439],E,122,[[[R[66]]],[R[6]]]],[11,R[490],R[440],E,123,[[[R[66]]],[R[6]]]],[11,R[490],R[441],E,131,[[[R[66]]],[R[6]]]],[11,R[490],R[442],E,138,[[[R[66]]],[R[6]]]],[11,R[490],R[444],E,148,[[[R[66]]],[R[6]]]],[11,R[490],E,E,149,[[[R[66]]],[R[6]]]],[11,R[490],E,E,150,[[[R[66]]],[R[6]]]],[11,R[490],E,E,151,[[[R[66]]],[R[6]]]],[11,R[490],E,E,152,[[[R[66]]],[R[6]]]],[11,R[490],R[445],E,154,[[[R[66]]],[R[6]]]],[11,R[490],R[446],E,156,[[[R[66]]],[R[6]]]],[11,"network",R[407],E,5,[[],[R[66]]]],[11,"is_little",E,E,5,[[["self"]],["bool"]]]],"p":[[3,"HintData"],[4,"Hint"],[4,"Object"],[4,"Error"],[3,"Strtab"],[4,"Endian"],[3,"Ctx"],[4,R[491]],[3,"Elf"],[3,"Header"],[3,"Header"],[3,"Header"],[3,R[46]],[3,R[46]],[3,R[46]],[3,R[71]],[3,R[71]],[3,R[71]],[3,R[101]],[3,R[101]],[3,R[101]],[3,"Sym"],[3,"Sym"],[3,"Sym"],[3,"Symtab"],[3,"Dyn"],[3,"Dynamic"],[3,R[132]],[3,"Dyn"],[3,R[132]],[3,"Dyn"],[3,R[132]],[3,"Reloc"],[3,"Rela"],[3,"Rel"],[3,"Rela"],[3,"Rel"],[3,R[214]],[3,"Nhdr32"],[3,"Nhdr64"],[3,R[492]],[3,R[493]],[3,"Note"],[3,"GnuHash"],[3,"GnuHash"],[3,"MachO"],[3,R[494]],[4,"Mach"],[3,"Header32"],[3,"Header64"],[3,"Header"],[3,R[495]],[3,"FatArch"],[3,R[496]],[3,R[497]],[3,R[498]],[3,R[499]],[3,R[500]],[3,"Fvmlib"],[3,R[501]],[3,"Dylib"],[3,R[502]],[3,R[503]],[3,R[504]],[3,R[505]],[3,R[506]],[3,R[507]],[3,R[508]],[3,R[509]],[3,R[510]],[3,R[511]],[3,R[512]],[3,R[513]],[3,R[514]],[3,R[515]],[3,R[516]],[3,R[517]],[3,R[518]],[3,R[519]],[3,R[520]],[3,R[521]],[3,R[522]],[3,R[523]],[3,R[524]],[3,R[525]],[3,R[526]],[3,R[527]],[3,R[528]],[3,R[529]],[3,R[530]],[3,R[531]],[3,R[532]],[3,R[533]],[3,R[534]],[3,R[535]],[4,R[536]],[3,"Nlist32"],[3,"Nlist64"],[3,"Nlist"],[3,R[537]],[3,"Symbols"],[3,"Export"],[4,R[538]],[4,R[539]],[3,R[540]],[3,"Import"],[3,R[541]],[3,R[542]],[3,"Section"],[3,"Segment"],[3,"Segments"],[3,"PE"],[3,"Coff"],[3,R[543]],[3,R[544]],[3,"Header"],[3,R[545]],[3,R[546]],[3,R[547]],[3,R[548]],[3,R[549]],[3,R[550]],[3,R[551]],[3,R[552]],[3,R[553]],[3,R[554]],[3,R[555]],[3,"Export"],[4,R[556]],[4,R[557]],[3,R[558]],[3,R[559]],[3,R[560]],[3,R[561]],[3,"Import"],[4,R[562]],[8,"Bitfield"],[3,R[563]],[3,R[564]],[3,R[565]],[3,R[566]],[3,"Register"],[3,R[567]],[3,R[568]],[4,R[569]],[4,R[570]],[4,R[571]],[3,R[572]],[3,"Symbol"],[3,R[573]],[3,R[574]],[3,R[575]],[3,R[576]],[3,R[577]],[3,R[578]],[3,R[579]],[3,R[580]],[3,"Header"],[3,"Member"],[3,"Index"],[4,R[581]],[3,R[0]],[3,R[582]],[3,R[583]],[3,R[584]],[3,R[585]],[3,R[387]],[3,R[586]],[3,R[587]],[3,R[588]],[3,R[589]],[3,R[387]],[6,R[590]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);